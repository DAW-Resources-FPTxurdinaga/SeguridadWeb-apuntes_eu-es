{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ciberseguridad en el Desarrollo Web","text":"<p>Bienvenido a los apuntes de Ciberseguridad en el Desarrollo Web. Este material cubre los conceptos fundamentales y las mejores pr\u00e1cticas de seguridad inform\u00e1tica en el desarrollo web.</p>"},{"location":"#estructura-del-curso","title":"Estructura del Curso","text":""},{"location":"#1-fundamentos-y-amenazas-comunes","title":"1. Fundamentos y amenazas comunes","text":"<ul> <li>Introducci\u00f3n a la Ciberseguridad en el Desarrollo Web</li> <li>Fundamentos del funcionamiento web</li> <li>Visi\u00f3n general de vulnerabilidades web comunes (OWASP Top 10)</li> </ul>"},{"location":"#2-ataques-y-defensas-basicas","title":"2. Ataques y defensas b\u00e1sicas","text":"<ul> <li>Defensas contra inyecciones</li> <li>Seguridad de autenticaci\u00f3n y sesiones</li> <li>Control de acceso y configuraci\u00f3n segura</li> </ul>"},{"location":"#3-proteccion-de-datos-y-herramientas-practicas","title":"3. Protecci\u00f3n de datos y herramientas pr\u00e1cticas","text":"<ul> <li>Protecci\u00f3n de datos sensibles</li> <li>Seguridad de APIs y dependencias</li> <li>Introducci\u00f3n a herramientas pr\u00e1cticas</li> </ul>"},{"location":"#como-usar-estos-apuntes","title":"C\u00f3mo usar estos apuntes","text":"<ul> <li>Utiliza el men\u00fa de la izquierda para navegar entre los diferentes temas.</li> <li>En cada tema encontrar\u00e1s teor\u00eda y ejemplos pr\u00e1cticos.</li> <li>Los ejemplos de c\u00f3digo est\u00e1n resaltados para mejorar la legibilidad.</li> </ul>"},{"location":"#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>OWASP</li> <li>OWASP Top 10</li> <li>OWASP Cheat Sheet Series</li> <li>OWASP Euskal Herria</li> </ul> <p>OWASP Juice Shop</p> <ul> <li> <p>OWASP Juice Shop </p> </li> <li> <p>Juice Shop</p> </li> </ul>"},{"location":"#hiztegi-teknikoa","title":"Hiztegi Teknikoa","text":"Euskaraz Gazteleraz Ingeleraz Zibersegurtasuna Ciberseguridad Cybersecurity Webgunea Sitio web Website Zerbitzaria Servidor Server Bezeroa Cliente Client Saioa Sesi\u00f3n Session Autentifikazioa Autenticaci\u00f3n Authentication Baimena Autorizaci\u00f3n Authorization Zifratzea Cifrado Encryption Ahultasuna Vulnerabilidad Vulnerability Mehatxua Amenaza Threat"},{"location":"ariketak/broken_access_control/","title":"Broken Access Control - Ejercicios","text":"<p>La mayor\u00eda de los sistemas inform\u00e1ticos est\u00e1n dise\u00f1ados para ser utilizados por m\u00faltiples usuarios. Los privilegios se refieren a lo que un usuario puede hacer. Los privilegios comunes incluyen ver y editar archivos, o modificar archivos del sistema.</p> <p>La elevaci\u00f3n de privilegios ocurre cuando un usuario obtiene privilegios a los que no tiene derecho. Estos privilegios pueden usarse para eliminar archivos, ver informaci\u00f3n privada o instalar programas no deseados (como virus). Normalmente ocurre cuando un sistema tiene un fallo que permite eludir la seguridad o cuando tiene supuestos de dise\u00f1o defectuosos sobre c\u00f3mo se usar\u00e1.</p>"},{"location":"ariketak/broken_access_control/#ejercicios","title":"Ejercicios","text":""},{"location":"ariketak/broken_access_control/#ejercicio-1-acceder-a-la-seccion-de-administracion-de-la-tienda","title":"Ejercicio 1: Acceder a la secci\u00f3n de administraci\u00f3n de la tienda","text":"<p>Al igual que ocurri\u00f3 con el marcador, no tenemos un enlace directo a la secci\u00f3n de administraci\u00f3n. Tendremos que encontrarlo nosotros mismos.</p>"},{"location":"ariketak/broken_access_control/#enlaces","title":"Enlaces","text":"<ul> <li>OWASP Broken Access Control</li> <li>PortSwigger - Vulnerabilidades de Control de Acceso</li> </ul> <p>\u2190 Volver a OWASP Top 10</p>"},{"location":"ariketak/cryptographic_failures/","title":"Fallos Criptogr\u00e1ficos","text":"<p>En primer lugar, se deben identificar las necesidades de protecci\u00f3n de datos en tr\u00e1nsito y en reposo. Por ejemplo, contrase\u00f1as, n\u00fameros de tarjetas de cr\u00e9dito, registros de salud, informaci\u00f3n personal y secretos comerciales requieren protecci\u00f3n adicional, especialmente si estos datos est\u00e1n sujetos a leyes de privacidad.</p> <p>Para todos estos datos:</p> <ul> <li> <p>\u00bfSe transmite alg\u00fan dato en texto claro? Esto afecta a protocolos como HTTP, SMTP, FTP, incluso con actualizaciones TLS como STARTTLS. El tr\u00e1fico externo a Internet es especialmente peligroso. Verificar todo el tr\u00e1fico interno, por ejemplo, entre balanceadores de carga, servidores web o sistemas de back-end.</p> </li> <li> <p>\u00bfSe utiliza alg\u00fan algoritmo o protocolo criptogr\u00e1fico antiguo o d\u00e9bil, ya sea por defecto o en c\u00f3digo heredado?</p> </li> <li> <p>\u00bfSe utilizan claves criptogr\u00e1ficas predeterminadas, se generan o reutilizan claves criptogr\u00e1ficas d\u00e9biles, o falta una gesti\u00f3n o rotaci\u00f3n adecuada de claves? \u00bfSe revisan las claves criptogr\u00e1ficas en los repositorios de c\u00f3digo fuente?</p> </li> <li> <p>\u00bfNo se exige el cifrado, por ejemplo, faltan directivas o encabezados de seguridad HTTP (navegador)?</p> </li> <li> <p>\u00bfEl certificado del servidor recibido y la cadena de confianza est\u00e1n validados correctamente?</p> </li> <li> <p>Etc...</p> </li> </ul>"},{"location":"ariketak/cryptographic_failures/#ejercicios","title":"Ejercicios","text":""},{"location":"ariketak/cryptographic_failures/#ejercicio-1-documento-confidencial","title":"Ejercicio 1: Documento Confidencial","text":"<p>Acceder a un documento confidencial. Intentaremos encontrar un documento confidencial, para ello podr\u00edamos echar un vistazo a las secciones de privacidad, sobre nosotros y similares, \u00bfverdad?</p>"},{"location":"ariketak/cryptographic_failures/#enlaces","title":"Enlaces","text":"<ul> <li>OWASP Fallos Criptogr\u00e1ficos</li> <li>Hoja de Referencia de Almacenamiento Criptogr\u00e1fico de OWASP</li> </ul> <p>\u2190 Volver a OWASP Top 10</p>"},{"location":"ariketak/identification_authentication_failures/","title":"Identification and Authentication Failures","text":""},{"location":"ariketak/identification_authentication_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas en la identificaci\u00f3n y autenticaci\u00f3n ocurren cuando las funciones relacionadas con la identidad de los usuarios se implementan incorrectamente. Esta categor\u00eda ocupa el s\u00e9ptimo puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/identification_authentication_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar debilidades en la autenticaci\u00f3n</li> <li>Aprender sobre autenticaci\u00f3n de m\u00faltiples factores</li> <li>Implementar controles de autenticaci\u00f3n seguros</li> </ul>"},{"location":"ariketak/identification_authentication_failures/#tareas","title":"Tareas","text":"<ol> <li>Probar la fortaleza de las contrase\u00f1as</li> <li>Verificar la gesti\u00f3n de sesiones</li> <li>Evaluar la recuperaci\u00f3n de cuentas</li> </ol>"},{"location":"ariketak/identification_authentication_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Authentication Cheat Sheet</li> <li>OWASP Session Management Cheat Sheet</li> </ul>"},{"location":"ariketak/injection/","title":"Injection","text":""},{"location":"ariketak/injection/#introduccion","title":"Introducci\u00f3n","text":"<p>Las inyecciones ocurren cuando datos no confiables son enviados a un int\u00e9rprete como parte de un comando o consulta. Esta categor\u00eda ocupa el tercer puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/injection/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Entender los diferentes tipos de inyecci\u00f3n</li> <li>Aprender a identificar puntos de inyecci\u00f3n</li> <li>Implementar pr\u00e1cticas seguras para prevenir inyecciones</li> </ul>"},{"location":"ariketak/injection/#tareas","title":"Tareas","text":"<ol> <li>Probar inyecci\u00f3n SQL</li> <li>Identificar inyecci\u00f3n de comandos del sistema</li> <li>Probar inyecci\u00f3n NoSQL</li> </ol>"},{"location":"ariketak/injection/#recursos","title":"Recursos","text":"<ul> <li>OWASP Injection</li> <li>OWASP SQL Injection Prevention Cheat Sheet</li> </ul>"},{"location":"ariketak/insecure_design/","title":"Insecure Design","text":""},{"location":"ariketak/insecure_design/#introduccion","title":"Introducci\u00f3n","text":"<p>El dise\u00f1o inseguro se refiere a fallas en el dise\u00f1o de la aplicaci\u00f3n que conducen a vulnerabilidades de seguridad. Esta es una nueva categor\u00eda en el OWASP Top 10 2021, ocupando el cuarto puesto.</p>"},{"location":"ariketak/insecure_design/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los riesgos del dise\u00f1o inseguro</li> <li>Aprender principios de dise\u00f1o seguro</li> <li>Identificar patrones de dise\u00f1o inseguros</li> </ul>"},{"location":"ariketak/insecure_design/#tareas","title":"Tareas","text":"<ol> <li>Revisar el modelo de amenazas</li> <li>Identificar controles de seguridad faltantes</li> <li>Evaluar el flujo de autorizaci\u00f3n</li> </ol>"},{"location":"ariketak/insecure_design/#recursos","title":"Recursos","text":"<ul> <li>OWASP Insecure Design</li> <li>OWASP Secure Design Principles</li> </ul>"},{"location":"ariketak/security_logging_monitoring_failures/","title":"Security Logging and Monitoring Failures","text":""},{"location":"ariketak/security_logging_monitoring_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas en el registro y monitoreo de seguridad dificultan la detecci\u00f3n de incidentes. Esta categor\u00eda ocupa el noveno puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/security_logging_monitoring_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Implementar registro de seguridad efectivo</li> <li>Configurar sistemas de monitoreo</li> <li>Desarrollar planes de respuesta a incidentes</li> </ul>"},{"location":"ariketak/security_logging_monitoring_failures/#tareas","title":"Tareas","text":"<ol> <li>Revisar registros de auditor\u00eda</li> <li>Configurar alertas de seguridad</li> <li>Probar la detecci\u00f3n de incidentes</li> </ol>"},{"location":"ariketak/security_logging_monitoring_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Logging Cheat Sheet</li> <li>OWASP AppSensor</li> </ul>"},{"location":"ariketak/security_misconfiguration/","title":"Security Misconfiguration","text":""},{"location":"ariketak/security_misconfiguration/#introduccion","title":"Introducci\u00f3n","text":"<p>La mala configuraci\u00f3n de seguridad ocurre cuando los controles de seguridad no se implementan correctamente. Esta categor\u00eda ocupa el quinto puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/security_misconfiguration/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar configuraciones inseguras</li> <li>Aprender pr\u00e1cticas seguras de configuraci\u00f3n</li> <li>Implementar hardening de sistemas</li> </ul>"},{"location":"ariketak/security_misconfiguration/#tareas","title":"Tareas","text":"<ol> <li>Revisar configuraciones por defecto</li> <li>Verificar encabezados de seguridad</li> <li>Comprobar la exposici\u00f3n de informaci\u00f3n sensible</li> </ol>"},{"location":"ariketak/security_misconfiguration/#recursos","title":"Recursos","text":"<ul> <li>OWASP Security Misconfiguration</li> <li>OWASP Configuration Management Cheat Sheet</li> </ul>"},{"location":"ariketak/server_side_request_forgery/","title":"Server-Side Request Forgery (SSRF)","text":""},{"location":"ariketak/server_side_request_forgery/#introduccion","title":"Introducci\u00f3n","text":"<p>La falsificaci\u00f3n de solicitudes del lado del servidor (SSRF) ocurre cuando un atacante puede hacer que el servidor realice solicitudes a recursos internos o externos. Esta categor\u00eda es nueva en el OWASP Top 10 2021, ocupando el d\u00e9cimo puesto.</p>"},{"location":"ariketak/server_side_request_forgery/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los vectores de ataque SSRF</li> <li>Aprender a identificar vulnerabilidades SSRF</li> <li>Implementar protecciones contra SSRF</li> </ul>"},{"location":"ariketak/server_side_request_forgery/#tareas","title":"Tareas","text":"<ol> <li>Identificar puntos finales que realizan solicitudes</li> <li>Probar la validaci\u00f3n de URLs</li> <li>Evaluar el filtrado de direcciones IP</li> </ol>"},{"location":"ariketak/server_side_request_forgery/#recursos","title":"Recursos","text":"<ul> <li>OWASP SSRF</li> <li>OWASP SSRF Prevention Cheat Sheet</li> </ul>"},{"location":"ariketak/software_data_integrity_failures/","title":"Software and Data Integrity Failures","text":""},{"location":"ariketak/software_data_integrity_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas de integridad del software y los datos ocurren cuando la integridad del c\u00f3digo y la infraestructura no se verifican adecuadamente. Esta es una nueva categor\u00eda en el OWASP Top 10 2021, ocupando el octavo puesto.</p>"},{"location":"ariketak/software_data_integrity_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los riesgos de integridad</li> <li>Aprender sobre firmas digitales</li> <li>Implementar verificaciones de integridad</li> </ul>"},{"location":"ariketak/software_data_integrity_failures/#tareas","title":"Tareas","text":"<ol> <li>Verificar firmas de c\u00f3digo</li> <li>Evaluar la cadena de suministro</li> <li>Revisar actualizaciones autom\u00e1ticas</li> </ol>"},{"location":"ariketak/software_data_integrity_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Software and Data Integrity Failures</li> <li>OWASP Dependency Track</li> </ul>"},{"location":"ariketak/vulnerable_obsolete_components/","title":"Vulnerable and Outdated Components","text":""},{"location":"ariketak/vulnerable_obsolete_components/#introduccion","title":"Introducci\u00f3n","text":"<p>El uso de componentes con vulnerabilidades conocidas es uno de los riesgos m\u00e1s comunes. Esta categor\u00eda ocupa el sexto puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/vulnerable_obsolete_components/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar componentes vulnerables</li> <li>Aprender a gestionar dependencias</li> <li>Implementar procesos de actualizaci\u00f3n</li> </ul>"},{"location":"ariketak/vulnerable_obsolete_components/#tareas","title":"Tareas","text":"<ol> <li>Inventariar componentes de terceros</li> <li>Identificar versiones vulnerables</li> <li>Planificar actualizaciones</li> </ol>"},{"location":"ariketak/vulnerable_obsolete_components/#recursos","title":"Recursos","text":"<ul> <li>OWASP Vulnerable Components</li> <li>OWASP Dependency Check</li> </ul>"},{"location":"datu_babesa/api_segurtasuna/","title":"3.2 APIs Seguras y Autenticaci\u00f3n","text":""},{"location":"datu_babesa/api_segurtasuna/#oauth-20-y-openid-connect","title":"OAuth 2.0 y OpenID Connect","text":""},{"location":"datu_babesa/api_segurtasuna/#flujo-completo-de-oauth-20-authorization-code-flow-pkce","title":"Flujo Completo de OAuth 2.0 (Authorization Code Flow + PKCE)","text":"<pre><code>sequenceDiagram\n    participant Usuario\n    participant Aplicaci\u00f3n_Cliente\n    participant Servidor_Autorizaci\u00f3n\n    participant Servidor_Recursos\n\n    Usuario-&gt;&gt;Aplicaci\u00f3n_Cliente: Intenta acceder\n    Aplicaci\u00f3n_Cliente-&gt;&gt;Usuario: Redirige a /login\n    Usuario-&gt;&gt;Servidor_Autorizaci\u00f3n: Introduce credenciales\n    Servidor_Autorizaci\u00f3n-&gt;&gt;Usuario: Autenticado, redirige a callback\n    Aplicaci\u00f3n_Cliente-&gt;&gt;Servidor_Autorizaci\u00f3n: Intercambia c\u00f3digo por token\n    Servidor_Autorizaci\u00f3n--&gt;&gt;Aplicaci\u00f3n_Cliente: Devuelve access_token y refresh_token\n    Aplicaci\u00f3n_Cliente-&gt;&gt;Servidor_Recursos: Petici\u00f3n con access_token\n    Servidor_Recursos--&gt;&gt;Aplicaci\u00f3n_Cliente: Devuelve los datos\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#implementacion-de-pkce-proof-key-for-code-exchange-react-nodejs","title":"Implementaci\u00f3n de PKCE (Proof Key for Code Exchange) (React + Node.js)","text":"<p>Lado del Cliente (React):</p> <pre><code>// Funciones auxiliares para generar c\u00f3digo PKCE\nconst generateRandomString = (length) =&gt; {\n  const array = new Uint32Array(length);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec =&gt; ('0' + dec.toString(16)).substr(-2)).join('');\n};\n\nconst sha256 = async (plain) =&gt; {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  const hash = await window.crypto.subtle.digest('SHA-256', data);\n  return Array.from(new Uint8Array(hash))\n    .map(b =&gt; b.toString(16).padStart(2, '0'))\n    .join('');\n};\n\nconst base64URLEncode = (str) =&gt; {\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(str)))\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n};\n\n// Funci\u00f3n de inicio de sesi\u00f3n\nconst handleLogin = async () =&gt; {\n  // 1. Crear code_verifier y code_challenge\n  const codeVerifier = generateRandomString(64);\n  const hashed = await sha256(codeVerifier);\n  const codeChallenge = base64URLEncode(hashed);\n\n  // 2. Guardar code_verifier en la sesi\u00f3n\n  sessionStorage.setItem('code_verifier', codeVerifier);\n\n  // 3. Redirigir al usuario al endpoint de autorizaci\u00f3n\n  const authUrl = new URL('https://auth.tu-servidor.com/authorize');\n  const params = {\n    response_type: 'code',\n    client_id: 'tu_client_id',\n    redirect_uri: window.location.origin + '/callback',\n    code_challenge: codeChallenge,\n    code_challenge_method: 'S256',\n    scope: 'openid profile email',\n    state: generateRandomString(16)\n  };\n\n  Object.keys(params).forEach(key =&gt; \n    authUrl.searchParams.append(key, params[key])\n  );\n\n  window.location.href = authUrl.toString();\n};\n</code></pre> <p>Lado del Servidor (Node.js + Express):</p> <pre><code>const express = require('express');\nconst { createHmac } = require('crypto');\nconst jwt = require('jsonwebtoken');\n\nconst app = express();\napp.use(express.json());\n\n// Almacenamiento en memoria (en producci\u00f3n usar una base de datos)\nconst codeVerifiers = new Map();\nconst refreshTokens = new Map();\n\n// 1. Devolver c\u00f3digo de autorizaci\u00f3n\napp.get('/authorize', (req, res) =&gt; {\n  const { client_id, redirect_uri, code_challenge, state } = req.query;\n\n  // Verificar cliente y URI de redirecci\u00f3n\n  if (client_id !== 'tu_client_id') {\n    return res.status(400).send('ID de cliente no v\u00e1lido');\n  }\n\n  // Guardar code_challenge (normalmente en una sesi\u00f3n)\n  const authCode = generateRandomString(32);\n  codeVerifiers.set(authCode, {\n    codeChallenge: code_challenge,\n    clientId: client_id,\n    redirectUri: redirect_uri,\n    createdAt: Date.now()\n  });\n\n  // Mostrar p\u00e1gina de consentimiento al usuario y luego...\n  // Despu\u00e9s de que el usuario d\u00e9 su consentimiento, redirigir al callback\n  const redirectUrl = new URL(redirect_uri);\n  redirectUrl.searchParams.append('code', authCode);\n  redirectUrl.searchParams.append('state', state);\n\n  res.redirect(redirectUrl.toString());\n});\n\n// 2. Intercambiar c\u00f3digo por token\napp.post('/token', async (req, res) =&gt; {\n  const { client_id, code, code_verifier, redirect_uri, grant_type } = req.body;\n\n  // Validar par\u00e1metros\n  if (grant_type !== 'authorization_code') {\n    return res.status(400).json({ error: 'Tipo de concesi\u00f3n no v\u00e1lido' });\n  }\n\n  // Validar c\u00f3digo\n  const codeData = codeVerifiers.get(code);\n  if (!codeData) {\n    return res.status(400).json({ error: 'C\u00f3digo no v\u00e1lido' });\n  }\n\n  // Validar code_verifier\n  const hashed = await sha256(code_verifier);\n  const codeChallenge = base64URLEncode(hashed);\n\n  if (codeChallenge !== codeData.codeChallenge) {\n    return res.status(400).json({ error: 'Verificador de c\u00f3digo incorrecto' });\n  }\n\n  // Crear tokens\n  const accessToken = jwt.sign(\n    { sub: 'user123', client_id },\n    process.env.JWT_SECRET,\n    { expiresIn: '1h' }\n  );\n\n  const refreshToken = generateRandomString(64);\n  refreshTokens.set(refreshToken, { \n    sub: 'user123',\n    client_id,\n    expiresAt: Date.now() + 30 * 24 * 60 * 60 * 1000 // 30 d\u00edas\n  });\n\n  // Eliminar c\u00f3digo para evitar reutilizaci\u00f3n\n  codeVerifiers.delete(code);\n\n  // Devolver tokens\n  res.json({\n    access_token: accessToken,\n    token_type: 'Bearer',\n    expires_in: 3600,\n    refresh_token: refreshToken,\n    id_token: '...' // Para OpenID Connect\n  });\n});\n\n// 3. Verificar token (Servidor de Recursos)\nfunction authenticateToken(req, res, next) {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader &amp;&amp; authHeader.split(' ')[1];\n\n  if (!token) return res.sendStatus(401);\n\n  jwt.verify(token, process.env.JWT_SECRET, (err, user) =&gt; {\n    if (err) return res.sendStatus(403);\n    req.user = user;\n    next();\n  });\n}\n\napp.get('/api/datos', authenticateToken, (req, res) =&gt; {\n  // Devolver datos del usuario\n  res.json({ \n    message: 'Datos obtenidos correctamente',\n    user: req.user \n  });\n});\n\n// Funciones auxiliares\nfunction generarCadenaAleatoria(length) {\n  return require('crypto').randomBytes(length).toString('hex');\n}\n\nasync function sha256(plain) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  const hash = await crypto.subtle.digest('SHA-256', data);\n  return Buffer.from(hash);\n}\n\nfunction codificarBase64URL(buffer) {\n  return buffer.toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () =&gt; {\n  console.log(`Zerbitzaria ${PORT} portuan entzuten...`);\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#preferencias-de-seguridad-para-apis-security-headers","title":"Preferencias de Seguridad para APIs (Security Headers)","text":""},{"location":"datu_babesa/api_segurtasuna/#uso-de-helmetjs-nodejs","title":"Uso de Helmet.js (Node.js)","text":"<pre><code>const express = require('express');\nconst helmet = require('helmet');\n\nconst app = express();\n\n// Medidas de seguridad generales\napp.use(helmet());\n\n// Pol\u00edtica de Seguridad de Contenido (CSP)\napp.use(\n  helmet.contentSecurityPolicy({\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\n        \"'self'\",\n        \"'unsafe-inline'\", // Eliminar esto lo antes posible\n        \"https://apis.google.com\"\n      ],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https://*.example.com\"],\n      connectSrc: [\"'self'\", \"https://api.tu-servidor.com\"],\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n      objectSrc: [\"'none'\"],\n      upgradeInsecureRequests: []\n    }\n  })\n);\n\n// Protecci\u00f3n XSS\napp.use(helmet.xssFilter());\n\n// Prevenir MIME-type sniffing\napp.use(helmet.noSniff());\n\n// Prevenir clickjacking\napp.use(helmet.frameguard({ action: 'deny' }));\n\n// HSTS (Forzar HTTPS)\nconst oneYearInSeconds = 31536000;\napp.use(helmet.hsts({\n  maxAge: oneYearInSeconds,\n  includeSubDomains: true,\n  preload: true\n}));\n\n// Ocultar X-Powered-By\napp.use(helmet.hidePoweredBy());\n\n// Control de precarga DNS\napp.use(helmet.dnsPrefetchControl({ allow: false }));\n\n// Opciones de descarga (IE8+)\napp.use(helmet.ieNoOpen());\n\n// Opciones de tipo de contenido\napp.use(helmet.noSniff());\n\n// Pol\u00edticas cruzadas de dominios permitidos\napp.use(helmet.permittedCrossDomainPolicies());\n\n// Opciones de marco (previene clickjacking)\napp.use(helmet.frameguard({ action: 'deny' }));\n\n// Filtro XSS (obsoleto, pero para compatibilidad)\napp.use((req, res, next) =&gt; {\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  next();\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#mejores-practicas-de-seguridad-para-apis-muy-importante","title":"Mejores Pr\u00e1cticas de Seguridad para APIs (\u00a1Muy importante!)","text":""},{"location":"datu_babesa/api_segurtasuna/#1-validacion-de-entrada","title":"1. Validaci\u00f3n de Entrada","text":"<pre><code>// Usando express-validator\nconst { body, validationResult } = require('express-validator');\n\napp.post('/api/usuarios', [\n  // Nombre: 2-50 caracteres, solo letras y espacios\n  body('nombre')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .matches(/^[\\p{L}\\s]+$/u)\n    .withMessage('El nombre debe tener entre 2 y 50 caracteres y solo puede contener letras y espacios'),\n\n  // Email: debe ser un correo electr\u00f3nico v\u00e1lido\n  body('email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Por favor, introduce una direcci\u00f3n de correo electr\u00f3nico v\u00e1lida'),\n\n  // Contrase\u00f1a: 8+ caracteres, al menos una may\u00fascula, una min\u00fascula, un n\u00famero y un car\u00e1cter especial\n  body('contrasena')\n    .isStrongPassword({\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })\n    .withMessage('La contrase\u00f1a debe tener al menos 8 caracteres, incluyendo una letra may\u00fascula, una min\u00fascula, un n\u00famero y un car\u00e1cter especial')\n], async (req, res) =&gt; {\n  // Verificar resultados de validaci\u00f3n\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n\n  // Continuar con el procesamiento\n  try {\n    // Crear usuario...\n    res.status(201).json({ message: 'Usuario creado correctamente' });\n  } catch (error) {\n    console.error('Error al crear el usuario:', error);\n    res.status(500).json({ error: 'Error en el servidor' });\n  }\n});\n\n// 2. L\u00edmite de Tasa (Rate Limiting)\n\nconst rateLimit = require('express-rate-limit');\n\n// L\u00edmite de tasa b\u00e1sico\nconst apiLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // Ventana de 15 minutos\n  max: 100, // N\u00famero m\u00e1ximo de solicitudes por ventana\n  message: { error: 'Demasiadas solicitudes, por favor int\u00e9ntalo de nuevo m\u00e1s tarde' },\n  standardHeaders: true, // Incluir informaci\u00f3n de l\u00edmite en las cabeceras `RateLimit-*`\n  legacyHeaders: false, // Deshabilitar las cabeceras `X-RateLimit-*`\n});\n\n// Aplicar l\u00edmite a la API\napp.use('/api/', apiLimiter);\n\n// L\u00edmite de tasa basado en el usuario\nconst userLimiter = rateLimit({\n  windowMs: 60 * 60 * 1000, // 1 hora\n  max: async (req, res) =&gt; {\n    // Obtener ID de usuario (por ejemplo, del token)\n    const userId = req.user?.id || req.ip;\n\n    // Obtener plan del usuario (por ejemplo, de una base de datos)\n    const userPlan = await getUserPlan(userId);\n\n    // Devolver l\u00edmite seg\u00fan el plan\n    switch (userPlan) {\n      case 'free': return 100;\n      case 'pro': return 1000;\n      case 'enterprise': return 10000;\n      default: return 100;\n    }\n  },\n  keyGenerator: (req) =&gt; req.user?.id || req.ip,\n  message: { error: 'Tu plan de usuario tiene un l\u00edmite de solicitudes por hora' }\n});\n\napp.use('/api/usuario/datos', userLimiter);\n\n// 3. Manejo Seguro de Errores\n\n// Manejador de errores global\napp.use((err, req, res, next) =&gt; {\n  console.error(err.stack);\n\n  // Mensaje de error gen\u00e9rico\n  const response = {\n    error: {\n      message: 'Error en el servidor',\n      code: 'internal_server_error',\n      requestId: req.id // Usando una cabecera request-id\n    }\n  };\n\n  // Informaci\u00f3n adicional en desarrollo\n  if (process.env.NODE_ENV === 'development') {\n    response.error.details = {\n      message: err.message,\n      stack: err.stack,\n      ...err\n    };\n  }\n\n  // C\u00f3digo de estado HTTP\n  const statusCode = err.statusCode || 500;\n\n  // Enviar respuesta\n  res.status(statusCode).json(response);\n});\n\n// Manejo de 404\napp.use((req, res) =&gt; {\n  res.status(404).json({\n    error: {\n      message: 'No se encontr\u00f3 el recurso solicitado',\n      code: 'not_found',\n      path: req.path\n    }\n  });\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#ejercicio-practico","title":"Ejercicio Pr\u00e1ctico","text":"<ol> <li>Implementa OAuth 2.0 + PKCE en tu aplicaci\u00f3n React/Node.js</li> <li>Configura CSP en tu sitio web y prueba con Content-Security-Policy-Report-Only</li> <li>Verifica la seguridad de tu API usando OWASP ZAP o Burp Suite</li> <li>Implementa l\u00edmite de tasa (rate limiting) en tus APIs cr\u00edticas</li> </ol>"},{"location":"datu_babesa/api_segurtasuna/#siguientes-pasos","title":"Siguientes Pasos","text":"<ul> <li>Herramientas pr\u00e1cticas y evaluaci\u00f3n de seguridad</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/","title":"3.1 Gesti\u00f3n y protecci\u00f3n de datos sensibles","text":""},{"location":"datu_babesa/datu_sentikorrak/#cifrado-de-datos","title":"Cifrado de datos","text":""},{"location":"datu_babesa/datu_sentikorrak/#por-que-es-importante-usar-cifrado","title":"\u00bfPor qu\u00e9 es importante usar cifrado?","text":"<ul> <li>Si los datos son robados, no podr\u00e1n ser le\u00eddos</li> <li>Garantiza la seguridad durante la transferencia de datos</li> <li>Cumplimiento legal (GDPR, HIPAA, etc.)</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#tipos-de-cifrado","title":"Tipos de cifrado","text":""},{"location":"datu_babesa/datu_sentikorrak/#1-cifrado-simetrico-aes","title":"1. Cifrado sim\u00e9trico (AES)","text":"<p>Utiliza la misma clave para cifrar y descifrar.</p> <p>Ejemplo en Python (PyCryptodome):</p> <pre><code>from Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\nfrom Crypto.Util.Padding import pad, unpad\nimport base64\n\ndef cifrar(mensaje, clave=None):\n    if clave is None:\n        clave = get_random_bytes(32)  # Clave de 256 bits\n\n    # Crear vector de inicializaci\u00f3n (IV) aleatorio\n    iv = get_random_bytes(16)\n\n    # Crear el cifrador\n    cipher = AES.new(clave, AES.MODE_CBC, iv)\n\n    # Cifrar el mensaje (se debe rellenar para bloques de 16 bytes)\n    mensaje_rellenado = pad(mensaje.encode('utf-8'), AES.block_size)\n    texto_cifrado = cipher.encrypt(mensaje_rellenado)\n\n    # Devolver en formato base64 (IV + texto cifrado)\n    return base64.b64encode(iv + texto_cifrado).decode('utf-8')\n\ndescifrar(mensaje_cifrado, clave):\n    try:\n        # Decodificar base64\n        datos = base64.b64decode(mensaje_cifrado)\n\n        # Extraer IV y texto cifrado\n        iv = datos[:16]\n        texto_cifrado = datos[16:]\n\n        # Crear el cifrador\n        cipher = AES.new(clave, AES.MODE_CBC, iv)\n\n        # Descifrar y eliminar el relleno\n        mensaje_rellenado = cipher.decrypt(texto_cifrado)\n        mensaje = unpad(mensaje_rellenado, AES.block_size).decode('utf-8')\n\n        return mensaje\n    except Exception as e:\n        print(f\"Error al descifrar: {e}\")\n        return None\n\n# C\u00f3mo usarlo\nclave = get_random_bytes(32)\nmensaje = \"Datos sensibles\"\ncifrado = cifrar(mensaje, clave)\ndescifrado = descifrar(cifrado, clave)\n\nprint(f\"Original: {mensaje}\")\nprint(f\"Cifrado: {cifrado}\")\nprint(f\"Descifrado: {descifrado}\")\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#2-cifrado-asimetrico-rsa","title":"2. Cifrado asim\u00e9trico (RSA)","text":"<p>Utiliza claves p\u00fablicas y privadas diferentes.</p> <p>Ejemplo en Python (cryptography):</p> <pre><code>from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa, padding\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.backends import default_backend\nimport os\n\ndef generar_claves(ruta_guardado=None):\n    # Generar claves privada y p\u00fablica\n    privada = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=4096,\n        backend=default_backend()\n    )\n    publica = privada.public_key()\n\n    # Guardar claves en archivos (opcional)\n    if ruta_guardado:\n        # Guardar clave privada\n        with open(f\"{ruta_guardado}/clave_privada.pem\", \"wb\") as f:\n            f.write(\n                privada.private_bytes(\n                    encoding=serialization.Encoding.PEM,\n                    format=serialization.PrivateFormat.PKCS8,\n                    encryption_algorithm=serialization.NoEncryption()\n                )\n            )\n\n        # Guardar clave p\u00fablica\n        with open(f\"{ruta_guardado}/clave_publica.pem\", \"wb\") as f:\n            f.write(\n                publica.public_bytes(\n                    encoding=serialization.Encoding.PEM,\n                    format=serialization.PublicFormat.SubjectPublicKeyInfo\n                )\n            )\n\n    return privada, publica\n\ndef cifrar_rsa(mensaje, clave_publica):\n    # Cifrar con la clave p\u00fablica\n    texto_cifrado = clave_publica.encrypt(\n        mensaje.encode('utf-8'),\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n    return texto_cifrado\n\ndef descifrar_rsa(texto_cifrado, clave_privada):\n    # Descifrar con la clave privada\n    mensaje = clave_privada.decrypt(\n        texto_cifrado,\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n    return mensaje.decode('utf-8')\n\n# C\u00f3mo usarlo\nprivada, publica = generar_claves()\nmensaje = \"Datos sensibles\"\n\n# Cifrar\ntexto_cifrado = cifrar_rsa(mensaje, publica)\nprint(f\"Cifrado: {texto_cifrado.hex()}\")\ntestu_zifratua = zifratu_rsa(mezua, publikoa)\nprint(f\"Zifratua: {testu_zifratua.hex()}\")\n\n# Deszifratu\ndeszifratua = deszifratu_rsa(testu_zifratua, pribatua)\nprint(f\"Deszifratua: {deszifratua}\")\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#transferencia-de-datos-tlshttps","title":"Transferencia de datos (TLS/HTTPS)","text":""},{"location":"datu_babesa/datu_sentikorrak/#como-configurar-https-en-nodejs-express","title":"C\u00f3mo configurar HTTPS en Node.js (Express)","text":"<pre><code>const https = require('https');\nconst fs = require('fs');\nconst express = require('express');\n\nconst app = express();\n\n// Configurar medidas de seguridad\napp.use(helmet());\n\n// HSTS (HTTP Strict Transport Security)\napp.use(helmet.hsts({\n  maxAge: 31536000, // 1 a\u00f1o\n  includeSubDomains: true,\n  preload: true\n}));\n\n// Otras cabeceras de seguridad\napp.use(helmet.frameguard({ action: 'deny' }));\napp.use(helmet.xssFilter());\napp.use(helmet.noSniff());\n\n// Leer claves SSL/TLS\nconst options = {\n  key: fs.readFileSync('ruta/a/clave-privada.key'),\n  cert: fs.readFileSync('ruta/a/certificado.crt'),\n  // Opciones adicionales\n  minVersion: 'TLSv1.2',\n  ciphers: [\n    'ECDHE-ECDSA-AES256-GCM-SHA384',\n    'ECDHE-RSA-AES256-GCM-SHA384',\n    // ...\n  ].join(':')\n};\n\n// Iniciar servidor HTTPS\nhttps.createServer(options, app).listen(443, () =&gt; {\n  console.log('Servidor HTTPS escuchando en el puerto 443...');\n});\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#consejos-para-el-almacenamiento-de-datos","title":"Consejos para el almacenamiento de datos","text":""},{"location":"datu_babesa/datu_sentikorrak/#1-no-almacenes-datos-sensibles-si-no-es-necesario","title":"1. No almacenes datos sensibles si no es necesario","text":"<ul> <li>No guardes contrase\u00f1as, sino versiones con hash</li> <li>No guardes n\u00fameros de tarjetas de cr\u00e9dito si no es estrictamente necesario</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#2-minimizacion-de-datos","title":"2. Minimizaci\u00f3n de datos","text":"<ul> <li>Al recopilar: Recopila solo los datos m\u00ednimos necesarios</li> <li>Al almacenar: Guarda solo los datos que necesitas</li> <li>Al expirar: Elimina los datos cuando ya no sean necesarios</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#3-enmascaramiento-de-datos-para-visualizacion","title":"3. Enmascaramiento de datos para visualizaci\u00f3n","text":"<pre><code>function enmascararNumeroCuenta(numeroCuenta) {\n  if (!numeroCuenta) return '';\n  const longitud = numeroCuenta.length;\n  if (longitud &lt;= 4) return numeroCuenta;\n  return '*'.repeat(longitud - 4) + numeroCuenta.slice(-4);\n}\n\n// Ejemplo\nconsole.log(enmascararNumeroCuenta('1234567890123456')); // \"************3456\"\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#gestion-segura-de-tokens","title":"Gesti\u00f3n segura de tokens","text":""},{"location":"datu_babesa/datu_sentikorrak/#almacenamiento-seguro-de-tokens-jwt","title":"Almacenamiento seguro de tokens JWT","text":"<p>Ejemplo (usando localStorage en React - NO recomendado):</p> <pre><code>// Forma MUY SIMPLE de guardar el token (no es segura)\nconst guardarToken = (token) =&gt; {\n  try {\n    localStorage.setItem('token', token);\n  } catch (error) {\n    console.error('No se pudo guardar el token:', error);\n  }\n};\n</code></pre> <p>Mejor opci\u00f3n (usando cookies HTTP-only en el servidor):</p> <pre><code>// Respuesta del servidor (Node.js + Express)\nres.cookie('token', token, {\n  httpOnly: true,\n  secure: true, // Solo a trav\u00e9s de HTTPS\n  sameSite: 'strict',\n  maxAge: 24 * 60 * 60 * 1000 // 1 d\u00eda\n});\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#expiracion-de-tokens","title":"Expiraci\u00f3n de tokens","text":"<pre><code>// Al crear un token (Node.js)\nfunction crearToken(usuario) {\n  return jwt.sign(\n    {\n      sub: usuario.id,\n      iat: Math.floor(Date.now() / 1000), // Momento de creaci\u00f3n\n      exp: Math.floor(Date.now() / 1000) + (60 * 60), // Expira en 1 hora\n      // Otros campos...\n    },\n    process.env.JWT_SECRET,\n    { algorithm: 'HS256' }\n  );\n}\n\n// Verificar token en el cliente (React)\nuseEffect(() =&gt; {\n  const verificarToken = async () =&gt; {\n    try {\n      const respuesta = await fetch('/api/verificar-token', {\n        credentials: 'include' // Para enviar la cookie\n      });\n\n      if (!respuesta.ok) {\n        // Token inv\u00e1lido, cerrar sesi\u00f3n\n        await cerrarSesion();\n      }\n    } catch (error) {\n      console.error('Error al verificar el token:', error);\n    }\n  };\n\n  // Verificar token peri\u00f3dicamente\n  const intervalo = setInterval(verificarToken, 5 * 60 * 1000); // Cada 5 minutos\n\n  return () =&gt; clearInterval(intervalo);\n}, []);\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Implementa cifrado sim\u00e9trico para almacenar datos sensibles</li> <li>Configura HTTPS en tu proyecto</li> <li>Crea un sistema de gesti\u00f3n de tokens con cookies HTTP-only</li> <li>Verifica las medidas de seguridad de tu sitio web (helmet, CSP, etc.)</li> </ol>"},{"location":"datu_babesa/datu_sentikorrak/#siguientes-pasos","title":"Siguientes pasos","text":"<ul> <li>APIs seguras y autenticaci\u00f3n</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"datu_babesa/tresnak/","title":"3.3 Herramientas pr\u00e1cticas de seguridad","text":""},{"location":"datu_babesa/tresnak/#desarrollo-seguro-devsecops","title":"Desarrollo Seguro (DevSecOps)","text":""},{"location":"datu_babesa/tresnak/#1-sast-analisis-de-seguridad-de-aplicaciones-estatico","title":"1. SAST (An\u00e1lisis de Seguridad de Aplicaciones Est\u00e1tico)","text":"<p>Con el plugin de seguridad para ESLint (JavaScript/TypeScript)</p> <pre><code># Instalar paquetes necesarios\nnpm install --save-dev eslint eslint-plugin-security\n</code></pre> <p>Configuraci\u00f3n de .eslintrc.js:</p> <pre><code>module.exports = {\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:security/recommended\"\n  ],\n  \"plugins\": [\"security\"],\n  \"rules\": {\n    \"security/detect-buffer-noassert\": \"error\",\n    \"security/detect-child-process\": \"error\",\n    \"security/detect-disable-mustache-escapes\": \"error\",\n    \"security/detect-eval-with-expression\": \"error\",\n    \"security/detect-no-csrf-before-method-override\": \"error\",\n    \"security/detect-non-literal-fs-filename\": \"warn\",\n    \"security/detect-non-literal-regexp\": \"error\",\n    \"security/detect-non-literal-require\": \"warn\",\n    \"security/detect-object-injection\": \"off\", // Activar solo si es necesario, requiere cambios en el c\u00f3digo\n    \"security/detect-possible-timing-attacks\": \"error\",\n    \"security/detect-pseudoRandomBytes\": \"error\",\n    \"security/detect-unsafe-regex\": \"error\"\n  }\n};\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-dast-analisis-de-seguridad-de-aplicaciones-dinamico","title":"2. DAST (An\u00e1lisis de Seguridad de Aplicaciones Din\u00e1mico)","text":"<p>Usando OWASP ZAP (a trav\u00e9s de Docker):</p> <pre><code># Iniciar OWASP ZAP en Docker\n# Interfaz web: http://localhost:8080\n# API: http://localhost:8081\n\ndocker run -u zap -p 8080:8080 -p 8081:8081 \\\n  -i owasp/zap2docker-stable zap-webswing.sh\n\n# Escaneo automatizado\n# (A trav\u00e9s de la l\u00ednea de comandos de ZAP)\ndocker run -i owasp/zap2docker-stable zap-baseline.py \\\n  -t https://tu-aplicacion.com \\\n  -r informe-pruebas.html \\\n  -w informe-zap.md \\\n  -l INFO\n</code></pre>"},{"location":"datu_babesa/tresnak/#3-sca-software-composition-analysis","title":"3. SCA (Software Composition Analysis)","text":"<p>Dependabot configuraci\u00f3n en GitHub (<code>.github/dependabot.yml</code>):</p> <pre><code>version: 2\nupdates:\n  # JavaScript/Node.js actualizaciones\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    # Actualizaciones de seguridad inmediatas\n    pull-request-branch-name:\n      separator: \"-\"\n    labels:\n      - \"dependencies\"\n      - \"javascript\"\n    # An\u00e1lisis de seguridad con OpenSSF Scorecard\n    open-pull-requests-limit: 10\n    # Actualizaciones basadas en boletines de seguridad\n    vulnerability-alerts:\n      enabled: true\n\n  # Actualizaciones de im\u00e1genes de Docker\n  - package-ecosystem: \"docker\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    labels:\n      - \"dependencies\"\n      - \"docker\"\n</code></pre>"},{"location":"datu_babesa/tresnak/#pruebas-de-seguridad-automatizadas","title":"Pruebas de seguridad automatizadas","text":""},{"location":"datu_babesa/tresnak/#1-nikto-web-vulnerability-scanner","title":"1. Nikto (Web Vulnerability Scanner)","text":"<pre><code># Instalaci\u00f3n (Ubuntu/Debian)\nsudo apt install nikto\n\n# Uso b\u00e1sico\nnikto -h https://tu-aplicacion.com\n\n# Guardar informe en formato HTML\nnikto -h https://tu-aplicacion.com -o nikto_scan.html -F htm\n\n# Uso de proxy (por ejemplo, OWASP ZAP)\nnikto -h https://tu-aplicacion.com -useproxy http://localhost:8080\n\n# Agregar cookie para seguir la sesi\u00f3n\nnikto -h https://tu-aplicacion.com -C \"sessionid=abc123; secure;\"\nnikto -h https://zure-aplikazioa.eus -C \"sessionid=abc123; secure;\"\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-nmap-escaner-de-red","title":"2. Nmap (Esc\u00e1ner de red)","text":"<pre><code># Encontrar puertos abiertos\nnmap -sS -p- -T4 -v tu-servidor.com\n\n# Detectar servicios y versiones\nnmap -sV -sC -p 80,443,8080 tu-servidor.com\n\n# Usando NSE (Nmap Scripting Engine)\nnmap --script=http-security-headers,http-csrf,http-sql-injection -p 80,443 tu-servidor.com\n\n# Guardar salida en formato XML\nnmap -oX resultados_escaner.xml -sV -sC tu-servidor.com\n</code></pre>"},{"location":"datu_babesa/tresnak/#analisis-estatico-de-codigo","title":"An\u00e1lisis Est\u00e1tico de C\u00f3digo","text":""},{"location":"datu_babesa/tresnak/#1-sonarqube-sonarlint","title":"1. SonarQube + SonarLint","text":"<p>Configuraci\u00f3n de SonarQube (Docker):</p> <pre><code># docker-compose.yml\nversion: '3'\nservices:\n  sonarqube:\n    image: sonarqube:community\n    ports:\n      - \"9000:9000\"\n    environment:\n      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true\n      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar\n      - SONAR_JDBC_USERNAME=sonar\n      - SONAR_JDBC_PASSWORD=sonar\n    volumes:\n      - sonarqube_data:/opt/sonarqube/data\n      - sonarqube_extensions:/opt/sonarqube/extensions\n    depends_on:\n      - db\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_USER=sonar\n      - POSTGRES_PASSWORD=sonar\n      - POSTGRES_DB=sonar\n    volumes:\n      - postgresql_data:/var/lib/postgresql/data\n      - postgresql_data_db:/var/lib/postgresql/data/db\n\nvolumes:\n  sonarqube_data:\n  sonarqube_extensions:\n  postgresql_data:\n  postgresql_data_db:\n</code></pre> <p>Uso de Sonar-scanner (en cada proyecto):</p> <pre><code># Archivo sonar-project.properties\nsonar.projectKey=nombre-del-proyecto\nsonar.projectName=\"Nombre del Proyecto\"\nsonar.projectVersion=1.0\nsonar.sources=.\nsonar.sourceEncoding=UTF-8\nsonar.exclusions=**/node_modules/**,**/*.spec.js\nsonar.javascript.lcov.reportPaths=coverage/lcov.info\n\n# Ejecutar an\u00e1lisis\ndocker run --rm \\\n  -v \"$(pwd):/usr/src\" \\\n  -w /usr/src \\\n  sonarsource/sonar-scanner-cli\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-snyk-vulnerabilidades-en-dependencias","title":"2. Snyk (Vulnerabilidades en Dependencias)","text":"<pre><code># Instalar CLI de Snyk\nnpm install -g snyk\n\n# Autenticarse con Snyk\nsnyk auth\n\n# Analizar un proyecto\nsnyk test\n\n# Monitorear dependencias\nsnyk monitor\n\n# Analizar una imagen de Docker\nsnyk container test ubuntu:latest\n\n# An\u00e1lisis de Infraestructura como C\u00f3digo (Terraform, CloudFormation)\nsnyk iac test\n</code></pre>"},{"location":"datu_babesa/tresnak/#automatizacion-de-pruebas-de-seguridad-cicd","title":"Automatizaci\u00f3n de Pruebas de Seguridad (CI/CD)","text":""},{"location":"datu_babesa/tresnak/#ejemplo-de-github-actions","title":"Ejemplo de GitHub Actions","text":"<pre><code># .github/workflows/security-scan.yml\nname: An\u00e1lisis de Seguridad\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main, develop ]\n  schedule:\n    - cron: '0 0 * * 0' # Semanalmente los domingos\n\njobs:\n  analisis-seguridad:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    # Configurar entorno Node.js\n    - name: Usar Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18.x'\n        cache: 'npm'\n\n    # Instalar dependencias\n    - name: Instalar dependencias\n      run: npm ci\n\n    # Ejecutar pruebas\n    - name: Ejecutar pruebas\n      run: npm test\n\n    # Ejecutar linter\n    - name: Ejecutar linter\n      run: npx eslint . --ext .js,.jsx,.ts,.tsx\n\n    # An\u00e1lisis de seguridad con Snyk\n    - name: Analizar vulnerabilidades con Snyk\n      uses: snyk/actions/node@master\n      env:\n        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\n      with:\n        args: --severity-threshold=high\n\n    # Escaneo con OWASP ZAP (usando Docker)\n    - name: Escaneo OWASP ZAP\n      uses: zaproxy/action-baseline@v0.6.0\n      with:\n        target: 'https://tu-aplicacion.com'\n        rules_file_name: '.zap/rules.tsv'\n        risk: '1,2,3'  # 1: Informativo, 2: Peligroso, 3: Cr\u00edtico\n        fail_action: true  # Fallar el workflow si hay errores\n\n    # An\u00e1lisis de vulnerabilidades en im\u00e1genes Docker con Trivy\n    - name: Analizar vulnerabilidades con Trivy\n      uses: aquasecurity/trivy-action@master\n      with:\n        image-ref: 'tu-imagen:etiqueta'\n        format: 'table'\n        exit-code: '1'\n        ignore-unfixed: true\n        severity: 'CRITICAL'\n</code></pre>"},{"location":"datu_babesa/tresnak/#laboratorios-para-probar-medidas-de-seguridad","title":"Laboratorios para probar medidas de seguridad","text":""},{"location":"datu_babesa/tresnak/#1-owasp-juice-shop","title":"1. OWASP Juice Shop","text":"<pre><code># Iniciar con Docker\ndocker run --rm -p 3000:3000 bkimminich/juice-shop\n\n# Luego navegar a http://localhost:3000\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-dvwa-damn-vulnerable-web-application","title":"2. DVWA (Damn Vulnerable Web Application)","text":"<pre><code># Iniciar con Docker\ndocker run --rm -it -p 80:80 vulnerables/web-dvwa\n\n# Luego navegar a http://localhost\n# Credenciales predeterminadas:\n# Usuario: admin\n# Contrase\u00f1a: password\n</code></pre>"},{"location":"datu_babesa/tresnak/#3-webgoat","title":"3. WebGoat","text":"<pre><code># Iniciar con Docker\ndocker run -it -p 8080:8080 -p 9090:9090 -e TZ=Europe/Madrid \\\n  -e WEBGOAT_ADMIN_PASSWORD=CambiaEsto! \\\n  --name webgoat webgoat/goatandwolf:v8.2.2\n\n# Luego navegar a http://localhost:8080/WebGoat\n</code></pre>"},{"location":"datu_babesa/tresnak/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Configura GitHub Actions en tu proyecto para realizar an\u00e1lisis de seguridad automatizados</li> <li>Ejecuta OWASP ZAP contra tu aplicaci\u00f3n local y soluciona los problemas encontrados</li> <li>Utiliza Snyk o Dependabot para analizar la seguridad de las dependencias de tu proyecto</li> <li>Instala SonarLint en tu IDE y corrige los problemas detectados</li> </ol>"},{"location":"datu_babesa/tresnak/#consejos-finales","title":"Consejos finales","text":"<ul> <li>La seguridad es un proceso, no un producto: Actualiza y revisa tu aplicaci\u00f3n continuamente</li> <li>\"Seguro por defecto\": Integra la seguridad desde el inicio del desarrollo</li> <li>Principio de m\u00ednimo privilegio: Usuarios y procesos deben tener solo los permisos necesarios</li> <li>M\u00faltiples capas de defensa: No conf\u00edes en una sola medida de seguridad</li> <li>Establece una pol\u00edtica de seguridad clara: Tu equipo debe saber qu\u00e9 est\u00e1 permitido y qu\u00e9 no</li> </ul>"},{"location":"datu_babesa/tresnak/#recursos-adicionales","title":"Recursos adicionales","text":"<ul> <li>OWASP Cheat Sheet Series</li> <li>Directrices de seguridad web de Mozilla</li> <li>PortSwigger Web Security Academy</li> <li>Snyk Learn</li> </ul>"},{"location":"datu_babesa/tresnak/#conclusion","title":"Conclusi\u00f3n","text":"<p>\u00a1Enhorabuena! Has aprendido los fundamentos de ciberseguridad y herramientas pr\u00e1cticas para el desarrollo web. Recuerda que la seguridad no es un destino, sino un viaje. \u00a1Pon en pr\u00e1ctica lo aprendido y mant\u00e9n actualizadas tus habilidades!</p>"},{"location":"eraso_defentsak/autentifikazioa/","title":"2.2 Seguridad de autenticaci\u00f3n y sesiones","text":""},{"location":"eraso_defentsak/autentifikazioa/#gestion-segura-de-contrasenas","title":"Gesti\u00f3n segura de contrase\u00f1as","text":""},{"location":"eraso_defentsak/autentifikazioa/#por-que-no-es-suficiente-almacenar-contrasenas-directamente","title":"\u00bfPor qu\u00e9 no es suficiente almacenar contrase\u00f1as directamente?","text":"<ul> <li>Si los datos son robados, las contrase\u00f1as de los usuarios estar\u00edan disponibles</li> <li>Los usuarios reutilizan contrase\u00f1as en m\u00faltiples servicios</li> <li>Incluso los usuarios leg\u00edtimos no podr\u00edan ver las contrase\u00f1as</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#cifrado-de-contrasenas","title":"Cifrado de contrase\u00f1as","text":""},{"location":"eraso_defentsak/autentifikazioa/#usando-bcrypt-python","title":"Usando bcrypt (Python)","text":"<pre><code>import bcrypt\n\ndef crear_hash_contrase\u00f1a(contrase\u00f1a: str) -&gt; bytes:\n    # Generar sal aleatoria\n    sal = bcrypt.gensalt()\n    # Generar hash de la contrase\u00f1a\n    hash_resultado = bcrypt.hashpw(contrase\u00f1a.encode('utf-8'), sal)\n    return hash_resultado\n\ndef verificar_contrase\u00f1a(contrase\u00f1a: str, hash_almacenado: bytes) -&gt; bool:\n    # Verificar contrase\u00f1a\n    return bcrypt.checkpw(contrase\u00f1a.encode('utf-8'), hash_almacenado)\n\n# Ejemplo\ncontrase\u00f1a_usuario = \"mi_contrase\u00f1a_secreta\"\nhash_almacenado = crear_hash_contrase\u00f1a(contrase\u00f1a_usuario)\nprint(f\"Hash almacenado: {hash_almacenado.decode()}\")\n\n# Verificar\ncoincide = verificar_contrase\u00f1a(\"contrase\u00f1a_incorrecta\", hash_almacenado)\nprint(f\"Contrase\u00f1a incorrecta: {coincide}\")  # False\n\ncoincide = verificar_contrase\u00f1a(contrase\u00f1a_usuario, hash_almacenado)\nprint(f\"Contrase\u00f1a correcta: {coincide}\")  # True\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#por-que-es-importante-la-sal-salt","title":"\u00bfPor qu\u00e9 es importante la sal (Salt)?","text":"<ul> <li>Genera hashes diferentes para contrase\u00f1as id\u00e9nticas</li> <li>Previene ataques con tablas arco\u00edris (rainbow tables)</li> <li>Los atacantes no pueden identificar usuarios con el mismo hash</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#gestion-segura-de-sesiones","title":"Gesti\u00f3n segura de sesiones","text":""},{"location":"eraso_defentsak/autentifikazioa/#configurar-cookies-seguras","title":"Configurar cookies seguras","text":"<p>Ejemplo en Express.js:</p> <pre><code>const session = require('express-session');\nconst crypto = require('crypto');\n\n// Generar una clave secreta aleatoria para firmar las sesiones\nconst SESSION_SECRET = crypto.randomBytes(32).toString('hex');\n\napp.use(session({\n    secret: SESSION_SECRET,\n    name: 'sessionId',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n        secure: true,      // Enviar solo a trav\u00e9s de HTTPS\n        httpOnly: true,    // No accesible desde JavaScript\n        sameSite: 'lax',   // Protecci\u00f3n contra CSRF\n        maxAge: 1000 * 60 * 60 * 24, // 1 d\u00eda\n        domain: '.tudominio.com'\n    }\n}));\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#jwt-json-web-tokens","title":"JWT (JSON Web Tokens)","text":"<p>Crear y verificar un token (Node.js):</p> <pre><code>const jwt = require('jsonwebtoken');\nconst crypto = require('crypto');\n\n// Cargar desde variables de entorno o generar una clave secreta fuerte\nconst JWT_SECRET = process.env.JWT_SECRET || crypto.randomBytes(64).toString('hex');\n\n// Crear un token\nfunction crearToken(usuario) {\n    return jwt.sign(\n        {\n            sub: usuario.id,\n            email: usuario.email,\n            // No incluir informaci\u00f3n sensible\n        },\n        JWT_SECRET,\n        { \n            expiresIn: '1h',\n            issuer: 'TuAplicacion',\n            audience: 'tuaplicacion.com'\n        }\n    );\n}\n\n// Verificar un token\nfunction verificarToken(token) {\n    try {\n        const decoded = jwt.verify(token, JWT_SECRET, {\n            issuer: 'TuAplicacion',\n            audience: 'tuaplicacion.com'\n        });\n        return { valido: true, contenido: decoded };\n    } catch (error) {\n        return { \n            valido: false, \n            error: error.message \n        };\n    }\n}\n\n// Ejemplo\nconst usuario = { id: 123, email: 'usuario@ejemplo.com' };\nconst token = crearToken(usuario);\nconsole.log('Token generado:', token);\n\nconst resultado = verificarToken(token);\nconsole.log('Token verificado:', resultado);\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#autenticacion-multifactor-mfa","title":"Autenticaci\u00f3n Multifactor (MFA)","text":""},{"location":"eraso_defentsak/autentifikazioa/#por-que-usar-mfa","title":"\u00bfPor qu\u00e9 usar MFA?","text":"<ul> <li>Previene accesos no autorizados incluso si se compromete la contrase\u00f1a</li> <li>Combina \"algo que sabes\" + \"algo que tienes\" + \"algo que eres\"</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#tipos-de-mfa","title":"Tipos de MFA:","text":"<ol> <li>Aplicaciones autenticadoras (Google Authenticator, Authy, Microsoft Authenticator)</li> <li>C\u00f3digo SMS (menos seguro debido a ataques de SIM swapping)</li> <li>Llaves de seguridad f\u00edsicas (YubiKey, Titan Security Key)</li> <li>Aplicaciones requeridas (apps bancarias, Google Prompt)</li> </ol>"},{"location":"eraso_defentsak/autentifikazioa/#implementacion-de-otp-contrasena-de-un-solo-uso","title":"Implementaci\u00f3n de OTP (Contrase\u00f1a de un solo uso)","text":"<pre><code>import pyotp\nimport qrcode\n\ndef configurarMFA(nombre_usuario):\n    # Generar una nueva clave secreta para el usuario\n    clave = pyotp.random_base32()\n\n    # Crear URI para generar c\u00f3digo QR\n    totp_uri = pyotp.totp.TOTP(clave).provisioning_uri(\n        name=nombre_usuario,\n        issuer_name='Tu Aplicaci\u00f3n'\n    )\n\n    # Generar c\u00f3digo QR\n    qr = qrcode.make(totp_uri)\n    qr.save(f'mfa_{nombre_usuario}.png')\n\n    return clave\n\ndef verificarCodigo(clave, codigo_usuario):\n    totp = pyotp.TOTP(clave)\n    return totp.verify(codigo_usuario)\n\n# Ejemplo de uso\nusuario = \"persona@ejemplo.com\"\nclave = configurarMFA(usuario)\nprint(f\"Escanee el c\u00f3digo QR con Google Authenticator: mfa_{usuario}.png\")\n\n# Simular ingreso de c\u00f3digo por el usuario\ncodigo_usuario = input(\"Ingrese el c\u00f3digo de su aplicaci\u00f3n de autenticaci\u00f3n: \")\nif verificarCodigo(clave, codigo_usuario):\n    print(\"\u00a1Autenticaci\u00f3n exitosa!\")\nelse:\n    print(\"C\u00f3digo incorrecto, intente nuevamente.\")\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#consejos-de-seguridad-para-sesiones","title":"Consejos de seguridad para sesiones","text":"<ol> <li>Usar identificadores de sesi\u00f3n largos y aleatorios</li> <li>Establecer tiempos de expiraci\u00f3n apropiados</li> <li>Permitir solo una sesi\u00f3n activa por usuario</li> <li>Implementar cierre de sesi\u00f3n obligatorio</li> <li>Monitorear la ubicaci\u00f3n y navegador habituales del usuario</li> <li>Mostrar al usuario sus sesiones activas</li> </ol>"},{"location":"eraso_defentsak/autentifikazioa/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Control de acceso y configuraci\u00f3n segura</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"eraso_defentsak/injekzioak/","title":"2.1 Defensas contra inyecciones","text":""},{"location":"eraso_defentsak/injekzioak/#inyeccion-sql","title":"Inyecci\u00f3n SQL","text":""},{"location":"eraso_defentsak/injekzioak/#que-es-la-inyeccion-sql","title":"\u00bfQu\u00e9 es la inyecci\u00f3n SQL?","text":"<p>La inyecci\u00f3n SQL es un tipo de ataque que modifica una consulta a la base de datos, lo que ocurre cuando la entrada del usuario se inserta en la consulta sin la validaci\u00f3n adecuada.</p>"},{"location":"eraso_defentsak/injekzioak/#como-funciona","title":"\u00bfC\u00f3mo funciona?","text":"<pre><code>-- Entrada del usuario: ' OR '1'='1\n-- Consulta original:\nSELECT * FROM users WHERE username = '' AND password = 'contrase\u00f1a'\n\n-- Despu\u00e9s de la inyecci\u00f3n:\nSELECT * FROM users WHERE username = '' OR '1'='1' AND password = 'contrase\u00f1a'\n-- Como '1'='1' siempre es verdadero, la consulta devolver\u00e1 todos los usuarios\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#como-prevenirlo","title":"\u00bfC\u00f3mo prevenirlo?","text":""},{"location":"eraso_defentsak/injekzioak/#1-usar-consultas-parametrizadas-prepared-statements","title":"1. Usar consultas parametrizadas (Prepared Statements)","text":"<p>Ejemplo en Python (SQLite):</p> <pre><code>import sqlite3\n\ndef login_seguro(usuario, contrase\u00f1a):\n    conn = sqlite3.connect('base_de_datos.db')\n    cursor = conn.cursor()\n\n    # Usando consulta parametrizada\n    consulta = \"SELECT * FROM users WHERE username = ? AND password = ?\"\n    cursor.execute(consulta, (usuario, contrase\u00f1a))\n\n    usuario = cursor.fetchone()\n    conn.close()\n    return usuario\n</code></pre> <p>Ejemplo en PHP (PDO):</p> <pre><code>&lt;?php\n$usuario = $_POST['usuario'];\n$contrase\u00f1a = $_POST['contrase\u00f1a'];\n\n$pdo = new PDO('mysql:host=localhost;dbname=mi_bd', 'usuario', 'contrase\u00f1a');\n$stmt = $pdo-&gt;prepare('SELECT * FROM users WHERE username = :usuario AND password = :contrase\u00f1a');\n$stmt-&gt;execute(['usuario' =&gt; $usuario, 'contrase\u00f1a' =&gt; $contrase\u00f1a]);\n$usuario = $stmt-&gt;fetch();\n?&gt;\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#xss-cross-site-scripting","title":"XSS (Cross-Site Scripting)","text":""},{"location":"eraso_defentsak/injekzioak/#tipos-de-xss","title":"Tipos de XSS","text":"<ol> <li>XSS Reflejado (Reflected)</li> <li>El atacante env\u00eda un enlace malicioso a la v\u00edctima</li> <li>El sitio web refleja el script en la respuesta</li> <li> <p>El script se ejecuta en el navegador de la v\u00edctima</p> </li> <li> <p>XSS Almacenado (Stored)</p> </li> <li>El script malicioso se guarda en la base de datos</li> <li>Se ejecuta cuando un usuario carga la p\u00e1gina</li> <li> <p>Puede causar m\u00e1s da\u00f1o ya que afecta a m\u00faltiples usuarios</p> </li> <li> <p>XSS basado en DOM</p> </li> <li>Ocurre \u00fanicamente en el navegador</li> <li>Modifica el Modelo de Objetos del Documento (DOM)</li> </ol>"},{"location":"eraso_defentsak/injekzioak/#como-prevenir-xss","title":"\u00bfC\u00f3mo prevenir XSS?","text":""},{"location":"eraso_defentsak/injekzioak/#1-codificar-la-salida","title":"1. Codificar la salida","text":"<p>JavaScript (Node.js):</p> <pre><code>const escapeHtml = (texto) =&gt; {\n  const mapa = {\n    '&amp;': '&amp;amp;',\n    '&lt;': '&amp;lt;',\n    '&gt;': '&amp;gt;',\n    '\"': '&amp;quot;',\n    \"'\": '&amp;#x27;',\n    \"/\": '&amp;#x2F;'\n  };\n  return texto.replace(/[&amp;&lt;&gt;\"'/]/g, caracter =&gt; mapa[caracter]);\n};\n\n// Uso\nconst entradaPeligrosa = \"&lt;script&gt;c\u00f3digo&lt;/script&gt;\";\ndocument.getElementById('nombre').textContent = escapeHtml(entradaPeligrosa);\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#2-usar-apis-seguras","title":"2. Usar APIs seguras","text":"<p>JavaScript seguro:</p> <pre><code>// Incorrecto\ndocument.getElementById('nombre').innerHTML = entradaUsuario;\n\n// Correcto\ndocument.getElementById('nombre').textContent = entradaUsuario;\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#3-usar-content-security-policy-csp","title":"3. Usar Content Security Policy (CSP)","text":"<pre><code>Content-Security-Policy: default-src 'self'; script-src 'self' https://apis.google.com\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#otras-inyecciones","title":"Otras inyecciones","text":""},{"location":"eraso_defentsak/injekzioak/#inyeccion-de-comandos","title":"Inyecci\u00f3n de comandos","text":"<p>Ejemplo peligroso (Python):</p> <pre><code>import os\n\ndef hacer_ping(direccion):\n    # Peligroso: la entrada del usuario puede ejecutar comandos\n    os.system(f\"ping -c 4 {direccion}\")\n</code></pre> <p>Seguro:</p> <pre><code>import subprocess\n\ndef hacer_ping_seguro(direccion):\n    # Seguro: los par\u00e1metros se env\u00edan como lista\n    subprocess.run(['ping', '-c', '4', direccion], check=True)\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#inyeccion-ldap","title":"Inyecci\u00f3n LDAP","text":"<p>Ejemplo peligroso:</p> <pre><code>import ldap\n\ndef autenticar(usuario, contrase\u00f1a):\n    # Peligroso: entrada sin validar\n    consulta = f\"(uid={usuario})(userPassword={contrase\u00f1a})\"\n    # Realizar consulta LDAP\n</code></pre> <p>Seguro:</p> <pre><code>import ldap\nfrom ldap.filter import escape_filter_chars\n\ndef autenticar_seguro(usuario, contrase\u00f1a):\n    # Caracteres especiales escapados\n    usuario_limpio = escape_filter_chars(usuario)\n    pass_limpio = escape_filter_chars(contrase\u00f1a)\n    consulta = f\"(uid={usuario_limpio})(userPassword={pass_limpio})\"\n    # Realizar consulta LDAP\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Crea una p\u00e1gina web simple con inicio de sesi\u00f3n</li> <li>Implementa protecci\u00f3n contra inyecci\u00f3n SQL</li> <li>A\u00f1ade protecci\u00f3n XSS en la entrada y salida de datos</li> <li>Prueba tus defensas con entradas maliciosas</li> </ol>"},{"location":"eraso_defentsak/injekzioak/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Seguridad en autenticaci\u00f3n y sesiones</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"eraso_defentsak/sarbide_kontrola/","title":"2.3 Control de acceso y configuraci\u00f3n segura","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#tipos-de-control-de-acceso","title":"Tipos de control de acceso","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#1-rbac-control-de-acceso-basado-en-roles","title":"1. RBAC (Control de Acceso Basado en Roles)","text":"<p>Los usuarios se clasifican en diferentes roles y cada rol tiene un conjunto de permisos.</p> <p>Ejemplo (Node.js + Express):</p> <pre><code>// Definici\u00f3n de roles\nconst ROLES = {\n  ADMIN: 'admin',\n  EDITOR: 'editor',\n  USER: 'user',\n  ENVIAR: 'enviar'\n};\n\n// Definici\u00f3n de permisos para cada rol\nconst PERMISSIONS = {\n  [ROLES.ADMIN]: ['leer', 'escribir', 'eliminar', 'modificar', 'enviar'],\n  [ROLES.EDITOR]: ['leer', 'escribir', 'enviar'],\n  [ROLES.USER]: ['leer', 'enviar'],\n  [ROLES.ENVIAR]: ['enviar']\n};\n\n// Middleware para verificar permisos\nfunction checkPermission(accion) {\n  return (req, res, next) =&gt; {\n    const rolUsuario = req.user.rol; // Viene del middleware de autenticaci\u00f3n\n\n    if (!rolUsuario || !PERMISSIONS[rolUsuario] || \n        !PERMISSIONS[rolUsuario].includes(accion)) {\n      return res.status(403).json({ error: 'No tienes permiso para realizar esta acci\u00f3n' });\n    }\n    next();\n  };\n}\n\n// Ejemplo de uso\napp.delete('/api/usuarios/:id', \n  authenticateUser, // Primero autenticar\n  checkPermission('eliminar'), // Luego verificar permiso\n  (req, res) =&gt; {\n    // C\u00f3digo para eliminar usuario\n  }\n);\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#2-abac-control-de-acceso-basado-en-atributos","title":"2. ABAC (Control de Acceso Basado en Atributos)","text":"<p>Determina el acceso bas\u00e1ndose en los atributos del usuario y del recurso.</p> <p>Ejemplo (Python + Policy):</p> <pre><code>from functools import wraps\n\ndef check_access(usuario, recurso, accion):\n    # Un ejemplo simple\n    if accion == \"leer\" and recurso.propietario == usuario.id:\n        return True\n    if accion == \"editar\" and usuario.rol == \"admin\":\n        return True\n    if accion == \"enviar\" and usuario.estado == \"activo\":\n        return True\n    return False\n\ndef access_required(accion):\n    def decorator(f):\n        @wraps(f)\n        def funcion_decorada(*args, **kwargs):\n            usuario = get_jwt_identity()\n            recurso = get_recurso(kwargs['recurso_id'])\n\n            if not check_access(usuario, recurso, accion):\n                return {\"error\": \"No tienes permiso\"}, 403\n\n            return f(*args, **kwargs)\n        return funcion_decorada\n    return decorator\n\n# Ejemplo de uso\n@app.route('/documento/&lt;int:documento_id&gt;', methods=['PUT'])\n@jwt_required()\n@access_required('editar')\ndef editar_documento(documento_id):\n    # C\u00f3digo para editar el documento\n    pass\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#ataques-idor-referencia-insegura-a-objetos-directos","title":"Ataques IDOR (Referencia Insegura a Objetos Directos)","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#que-es-idor","title":"\u00bfQu\u00e9 es IDOR?","text":"<p>Es una vulnerabilidad de seguridad que ocurre cuando un usuario cree que tiene acceso directo a un recurso, pero en realidad no deber\u00eda tenerlo.</p>"},{"location":"eraso_defentsak/sarbide_kontrola/#como-prevenirlo","title":"\u00bfC\u00f3mo prevenirlo?","text":"<ol> <li>Validar el acceso a cada recurso</li> </ol> <pre><code>// Ejemplo con MongoDB\napp.get('/api/usuarios/:id', async (req, res) =&gt; {\n  try {\n    const usuario = await User.findById(req.params.id);\n\n    // Verificar si el usuario tiene acceso\n    if (req.user.id !== usuario._id.toString() &amp;&amp; req.user.rol !== 'admin') {\n      return res.status(403).json({ error: 'No tienes permiso' });\n    }\n\n    res.json(usuario);\n  } catch (error) {\n    res.status(404).json({ error: 'Usuario no encontrado' });\n  }\n});\n</code></pre> <ol> <li>Usar UUID o IDs seguros</li> </ol> <pre><code>// Generar IDs seguros\nconst { v4: uuidv4 } = require('uuid');\nconst idSeguro = uuidv4(); // '110ec58a-a0f2-4ac4-8393-c866d813b8d1'\n\n// Ejemplo de uso\nconst usuario = new User({\n  _id: idSeguro,\n  nombre: 'Nombre',\n  email: 'email@example.com'\n});\n</code></pre> <ol> <li>No mostrar IDs directos</li> </ol> <pre><code>&lt;!-- Incorrecto --&gt;\n&lt;a href=\"/usuarios/123\"&gt;Mi perfil&lt;/a&gt;\n\n&lt;!-- Correcto --&gt;\n&lt;a href=\"/mi-perfil\"&gt;Mi perfil&lt;/a&gt;\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#configuracion-segura","title":"Configuraci\u00f3n segura","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#medidas-basicas","title":"Medidas b\u00e1sicas","text":"<ol> <li>No incluir configuraciones sensibles en el c\u00f3digo</li> <li>Usar variables de entorno</li> <li>No subir el archivo <code>.env</code> al control de versiones</li> </ol> <p>config/development.js</p> <pre><code>module.exports = {\n  // Configuraciones para desarrollo\n  database: {\n    host: 'localhost',\n    port: 5432,\n    name: 'miapp_desarrollo',\n    user: 'postgres'\n  },\n  server: {\n    port: 3000,\n    debug: true,\n    cors: {\n      origin: ['http://localhost:8080']\n    }\n  },\n  auth: {\n    jwtSecret: 'clave_secreta_desarrollo',\n    passwordSaltRounds: 10\n  }\n};\n</code></pre> <p>config/production.js</p> <pre><code>module.exports = {\n  // Configuraciones para producci\u00f3n\n  database: {\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    name: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD\n  },\n  server: {\n    port: process.env.PORT || 3000,\n    debug: false,\n    cors: {\n      origin: ['https://tuaplicacion.com']\n    }\n  },\n  auth: {\n    jwtSecret: process.env.JWT_SECRET,\n    passwordSaltRounds: 12\n  }\n};\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#principios-de-configuracion-segura","title":"Principios de configuraci\u00f3n segura","text":"<ol> <li>No incluir configuraciones sensibles en el c\u00f3digo</li> <li>Usar variables de entorno</li> <li> <p>No subir el archivo <code>.env</code> al control de versiones</p> </li> <li> <p>Reforzar las medidas de seguridad <code>http    # Cabeceras HTTP seguras (ejemplo para Express.js)    X-Content-Type-Options: nosniff    X-Frame-Options: DENY    X-XSS-Protection: 1; mode=block    Content-Security-Policy: default-src 'self'    Strict-Transport-Security: max-age=31536000; includeSubDomains</code></p> </li> <li> <p>Registros seguros (Logging)</p> </li> <li>No registrar datos sensibles (contrase\u00f1as, tokens, credenciales)</li> <li>Usar niveles apropiados (DEBUG, INFO, WARN, ERROR)</li> <li>Redirigir errores a sistemas de monitoreo</li> </ol>"},{"location":"eraso_defentsak/sarbide_kontrola/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Crea un sistema RBAC en tu aplicaci\u00f3n</li> <li>Implementa protecciones contra IDOR en tus APIs</li> <li>Configura diferentes entornos (desarrollo, producci\u00f3n)</li> <li>Verifica que tus cabeceras HTTP sean seguras</li> </ol>"},{"location":"eraso_defentsak/sarbide_kontrola/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Gesti\u00f3n segura de datos sensibles</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/","title":"1.3 Visi\u00f3n general de las vulnerabilidades web m\u00e1s comunes (OWASP Top 10)","text":""},{"location":"oinarriak_mehatxuak/owasp_top10/#que-es-el-owasp-top-10","title":"\u00bfQu\u00e9 es el OWASP Top 10?","text":"<p>OWASP (Open Web Application Security Project) es una organizaci\u00f3n que actualiza regularmente una lista de los 10 riesgos m\u00e1s cr\u00edticos en aplicaciones web. La versi\u00f3n actual es de 2021, pero tienen previsto actualizarla este verano u oto\u00f1o.</p> <p>OWASP Top 10</p> <p></p> <p>En la imagen anterior se pueden ver las diferencias entre las versiones de 2017 y 2021.</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#1-controles-de-acceso-rotos-broken-access-control","title":"1. Controles de acceso rotos (Broken Access Control)","text":"<p>Ocurre cuando falla la restricci\u00f3n de que los usuarios solo puedan realizar acciones para las que est\u00e1n autorizados. OWASP Top 10 - Controles de Acceso Rotos</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos","title":"Ejemplos","text":"<ul> <li>Acceder a archivos privados sin autorizaci\u00f3n</li> <li>Editar datos de otros usuarios</li> <li>Tener acceso a funciones administrativas sin los permisos adecuados</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion","title":"Prevenci\u00f3n","text":"<ul> <li>Implementar controles de acceso de forma prioritaria</li> <li>Comenzar con una pol\u00edtica de \"denegar por defecto\"</li> <li>Verificar los permisos en el lado del servidor</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios","title":"Ejercicios","text":"<ul> <li>Broken Access Control</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#2-fallos-criptograficos-cryptographic-failures","title":"2. Fallos criptogr\u00e1ficos (Cryptographic Failures)","text":"<p>Vulnerabilidades o errores en la implementaci\u00f3n de la criptograf\u00eda utilizada para proteger los datos. OWASP Top 10 - Fallos Criptogr\u00e1ficos</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_1","title":"Ejemplos","text":"<ul> <li>Transmitir datos sin cifrar</li> <li>Usar algoritmos de cifrado d\u00e9biles (MD5, SHA1, DES...)</li> <li>Mala gesti\u00f3n de claves privadas</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_1","title":"Prevenci\u00f3n","text":"<ul> <li>Utilizar est\u00e1ndares de cifrado actuales (AES, RSA...)</li> <li>Usar HTTPS siempre</li> <li>Almacenar las claves de forma segura</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_1","title":"Ejercicios","text":"<ul> <li>Cryptographic Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#3-inyeccion-injection","title":"3. Inyecci\u00f3n (Injection)","text":"<p>La inyecci\u00f3n es uno de los riesgos m\u00e1s graves para la seguridad de las aplicaciones web actuales. Los atacantes insertan datos maliciosos en comandos o consultas que la aplicaci\u00f3n interpreta. De esta manera, pueden tomar el control de la aplicaci\u00f3n, obtener datos personales o manipular la base de datos. OWASP Top 10 - Inyecci\u00f3n</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_2","title":"Ejemplos","text":"<ul> <li>Inyecci\u00f3n SQL (SQL Injection): </li> </ul> <p>Este es el tipo de ataque de inyecci\u00f3n m\u00e1s com\u00fan. Afecta a las bases de datos.</p> <pre><code>-- Por ejemplo: Entrada del usuario: ' OR '1'='1' --\n\n-- Consulta SQL resultante:\n\nSELECT * FROM users WHERE username = '' OR '1'='1' -- AND password = '...'\n\n-- El resto de la consulta despu\u00e9s de nuestro c\u00f3digo inyectado no se ejecutar\u00e1.\n</code></pre> <ul> <li>Inyecci\u00f3n de Comandos del Sistema Operativo (OS Command Injection): </li> </ul> <p>La inyecci\u00f3n de comandos del sistema operativo no ocurre en el navegador, sino en el servidor. Para realizar el ataque, el atacante consigue insertar y ejecutar comandos en el sistema operativo del servidor a trav\u00e9s del sitio web.</p> <p>```bash -- Por ejemplo: ping 127.0.0.1 ; ls -l</p> <p>-- Imagina que una aplicaci\u00f3n web tiene un formulario donde el usuario ingresa una direcci\u00f3n IP. La aplicaci\u00f3n, en segundo plano, ejecuta el comando ping del sistema operativo para verificar si la direcci\u00f3n est\u00e1 disponible. Con el ejemplo proporcionado, despu\u00e9s de hacer ping, al ejecutar ls -l, en sistemas Unix y Linux, este comando lista los archivos y carpetas del directorio actual.</p> <p>-- Consulta original:   SELECT * FROM users WHERE username = 'admin' AND password = ''</p> <p>-- Consulta inyectada:   SELECT * FROM users WHERE username = 'admin' --' AND password = ''   ```</p> <p>En este caso, <code>--</code> es un comentario en SQL, y el resto de la consulta no se ejecutar\u00e1. As\u00ed, devolver\u00e1 los datos del usuario con nombre de usuario \"admin\" sin verificar la contrase\u00f1a.</p> <ul> <li>Inyecci\u00f3n de comandos (Command Injection):</li> </ul> <p><code>bash   ; rm -rf /  # Intenta ejecutar un comando malicioso</code></p> <ul> <li>Inyecci\u00f3n LDAP (LDAP Injection):</li> </ul> <p>```bash   -- Por ejemplo:   )(uid=))(|(uid=*</p> <p>-- Imagina una aplicaci\u00f3n web con un formulario de b\u00fasqueda que usa LDAP para autenticaci\u00f3n.   -- Un atacante podr\u00eda inyectar esta entrada para modificar la consulta LDAP y obtener acceso no autorizado.   -- En este ejemplo, la inyecci\u00f3n intenta hacer coincidir cualquier usuario en el directorio LDAP.   ```</p> <p>### Prevenci\u00f3n - Usar consultas parametrizadas (prepared statements) - Emplear ORMs seguros para evitar consultas SQL directas - Validar y desinfectar todas las entradas del usuario - Implementar el principio de m\u00ednimo privilegio en cuentas de base de datos - Usar procedimientos almacenados cuando sea posible - Validar y limpiar todas las entradas de usuario - Aplicar el principio de privilegio m\u00ednimo</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_2","title":"Ejercicios","text":"<ul> <li>Injection</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#4-diseno-inseguro-insecure-design","title":"4. Dise\u00f1o inseguro (Insecure Design)","text":"<p>Problemas de seguridad que se originan en la fase de dise\u00f1o, no solo en la implementaci\u00f3n. OWASP Top 10 - Dise\u00f1o Inseguro</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_3","title":"Ejemplos","text":"<ul> <li>Dise\u00f1o sin principios de seguridad</li> <li>Falta de modelado de amenazas</li> <li>Ausencia de mecanismos contra el uso abusivo</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_2","title":"Prevenci\u00f3n","text":"<ul> <li>Incorporar la seguridad desde la fase de dise\u00f1o</li> <li>Realizar modelado de amenazas</li> <li>Identificar y prevenir casos de abuso</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_3","title":"Ejercicios","text":"<ul> <li>Insecure Design</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#5-configuracion-insegura-security-misconfiguration","title":"5. Configuraci\u00f3n insegura (Security Misconfiguration)","text":"<p>Falta de configuraci\u00f3n de seguridad adecuada o configuraciones incorrectas en la aplicaci\u00f3n. OWASP Top 10 - Configuraci\u00f3n Insegura</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_4","title":"Ejemplos","text":"<ul> <li>Dejar configuraciones predeterminadas sin modificar</li> <li>Mostrar mensajes de error detallados</li> <li>Dejar desactivadas medidas de seguridad adicionales</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_3","title":"Prevenci\u00f3n","text":"<ul> <li>Establecer una configuraci\u00f3n segura</li> <li>Automatizar el proceso de configuraci\u00f3n</li> <li>Actualizar y revisar la configuraci\u00f3n regularmente</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_4","title":"Ejercicios","text":"<ul> <li>Security Misconfiguration</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#6-componentes-vulnerables-y-desactualizados-vulnerable-and-outdated-components","title":"6. Componentes vulnerables y desactualizados (Vulnerable and Outdated Components)","text":"<p>Vulnerabilidades presentes en bibliotecas y componentes de terceros utilizados en la aplicaci\u00f3n. OWASP Top 10 - Componentes Vulnerables y Desactualizados</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_5","title":"Ejemplos","text":"<ul> <li>No estar al tanto de vulnerabilidades conocidas</li> <li>No aplicar actualizaciones disponibles</li> <li>Utilizar componentes con fallos de seguridad conocidos</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_4","title":"Prevenci\u00f3n","text":"<ul> <li>Mantener todos los componentes actualizados</li> <li>Eliminar dependencias no utilizadas</li> <li>Escanear regularmente en busca de vulnerabilidades</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_5","title":"Ejercicios","text":"<ul> <li>Vulnerable Components</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#7-fallos-de-identificacion-y-autenticacion-identification-and-authentication-failures","title":"7. Fallos de identificaci\u00f3n y autenticaci\u00f3n (Identification and Authentication Failures)","text":"<p>Problemas en la verificaci\u00f3n de la identidad de los usuarios y en el proceso de autenticaci\u00f3n. OWASP Top 10 - Fallos de Identificaci\u00f3n y Autenticaci\u00f3n</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_6","title":"Ejemplos","text":"<ul> <li>Aceptar contrase\u00f1as d\u00e9biles</li> <li>Mala gesti\u00f3n de sesiones</li> <li>Funcionalidades de autenticaci\u00f3n d\u00e9biles</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_5","title":"Prevenci\u00f3n","text":"<ul> <li>Implementar autenticaci\u00f3n de m\u00faltiples factores (MFA)</li> <li>Aplicar pol\u00edticas de contrase\u00f1as robustas</li> <li>Validar adecuadamente los identificadores de sesi\u00f3n</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_6","title":"Ejercicios","text":"<ul> <li>Identification and Authentication Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#8-fallos-en-la-integridad-del-software-y-datos-software-and-data-integrity-failures","title":"8. Fallos en la Integridad del Software y Datos (Software and Data Integrity Failures)","text":"<p>Problemas que comprometen la integridad de los datos y la confiabilidad del software. OWASP Top 10 - Fallos en la Integridad del Software y Datos</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_7","title":"Ejemplos","text":"<ul> <li>Modificaci\u00f3n no autorizada de c\u00f3digo o datos</li> <li>Falta de validaci\u00f3n de entradas de usuario</li> <li>C\u00f3digo sin firmar digitalmente</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_6","title":"Prevenci\u00f3n","text":"<ul> <li>Implementar firmas digitales</li> <li>Verificar el origen del c\u00f3digo y los datos</li> <li>Validar la integridad de los datos</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_7","title":"Ejercicios","text":"<ul> <li>Software and Data Integrity Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#9-fallos-en-el-registro-y-monitoreo-de-seguridad-security-logging-and-monitoring-failures","title":"9. Fallos en el Registro y Monitoreo de Seguridad (Security Logging and Monitoring Failures)","text":"<p>Falta de capacidad para detectar y responder a incidentes de seguridad. OWASP Top 10 - Fallos en el Registro y Monitoreo de Seguridad</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_8","title":"Ejemplos","text":"<ul> <li>Falta de configuraci\u00f3n de registro de eventos</li> <li>No recibir alertas de seguridad</li> <li>No contar con procedimientos de respuesta a incidentes</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_7","title":"Prevenci\u00f3n","text":"<ul> <li>Implementar un sistema de registro adecuado</li> <li>Configurar alertas autom\u00e1ticas</li> <li>Establecer procedimientos de respuesta a incidentes</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_8","title":"Ejercicios","text":"<ul> <li>Security Logging and Monitoring Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#10-falsificacion-de-peticion-del-lado-del-servidor-server-side-request-forgery-ssrf","title":"10. Falsificaci\u00f3n de Petici\u00f3n del Lado del Servidor (Server-Side Request Forgery - SSRF)","text":"<p>Cuando un atacante puede controlar las peticiones que el servidor realiza a su red interna. OWASP Top 10 - Falsificaci\u00f3n de Petici\u00f3n del Lado del Servidor</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejemplos_9","title":"Ejemplos","text":"<ul> <li>Realizar peticiones a servicios internos</li> <li>Obtener informaci\u00f3n de configuraci\u00f3n</li> <li>Acceder a recursos de la red interna</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prevencion_8","title":"Prevenci\u00f3n","text":"<ul> <li>Validar y filtrar todas las URLs de entrada</li> <li>Utilizar listas blancas de dominios permitidos</li> <li>Establecer l\u00edmites de conexi\u00f3n y tiempo de espera</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#ejercicios_9","title":"Ejercicios","text":"<ul> <li>Server-Side Request Forgery</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Defensas contra inyecciones</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/","title":"1.1 Introducci\u00f3n a la Ciberseguridad en el Desarrollo Web","text":""},{"location":"oinarriak_mehatxuak/sarrera/#por-que-es-importante-la-ciberseguridad-en-el-desarrollo-web","title":"\u00bfPor qu\u00e9 es importante la ciberseguridad en el desarrollo web?","text":"<p>Las aplicaciones web actualmente funcionan como repositorios de datos sensibles tanto para empresas como para usuarios. Implementar medidas de ciberseguridad ayuda a proteger:</p> <ul> <li>La confidencialidad de los datos personales de los usuarios</li> <li>La integridad y disponibilidad del sitio web</li> <li>La reputaci\u00f3n y confianza de la empresa</li> <li>El cumplimiento normativo (GDPR, CCPA, etc.)</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#el-rol-del-desarrollador-enfoque-shift-left","title":"El rol del desarrollador, enfoque \"Shift Left\"","text":"<p>Tradicionalmente, la seguridad se consideraba al final del proceso de desarrollo. El enfoque \"Shift Left\" propone integrar la seguridad desde el inicio del desarrollo:</p> <ul> <li>Prevenci\u00f3n temprana: Corregir problemas antes de que se conviertan en vulnerabilidades</li> <li>Reducci\u00f3n de costos: Es m\u00e1s econ\u00f3mico identificar problemas en etapas tempranas</li> <li>Mejor calidad de c\u00f3digo: La seguridad se convierte en parte integral del c\u00f3digo</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#el-triangulo-cia-confidencialidad-integridad-disponibilidad","title":"El tri\u00e1ngulo CIA (Confidencialidad, Integridad, Disponibilidad)","text":"<p>Principios fundamentales de la ciberseguridad:</p> <pre><code>1. Confidencialidad (Confidentiality)\n\n- Control de acceso adecuado: usuarios y contrase\u00f1as, autenticaci\u00f3n multifactor (MFA), permisos basados en roles.\n- Cifrado de datos: si alguien roba un archivo cifrado, no podr\u00e1 leerlo sin la clave.\n- Acceso solo para personal autorizado: olo el personal autorizado puede ver cierta informaci\u00f3n (ej. m\u00e9dicos accediendo a historiales cl\u00ednicos).\n\n2. Integridad (Integrity)\n\n- Mecanismos para garantizar la exactitud e integridad de los datos: firmas digitales, hashes (ej. SHA-256) para comprobar que un archivo no fue modificado.\n- Sistemas para detectar cambios no autorizados: auditor\u00edas, logs, sistemas de detecci\u00f3n de intrusos.\n- Seguimiento de transacciones: mantener un registro de todas las operaciones (ej. blockchain, bases de datos con logs de cambios).\n\n3. Disponibilidad (Availability)\n\n- Continuidad del servicio: respaldos, planes de recuperaci\u00f3n ante desastres.\n- Capacidad para manejar ataques y fallos: protecci\u00f3n contra ataques DDoS, redundancia en servidores.\n- Rendimiento adecuado: mantenimiento, monitoreo y escalabilidad para evitar ca\u00eddas.\n</code></pre>"},{"location":"oinarriak_mehatxuak/sarrera/#amenaza-vulnerabilidad-riesgo","title":"Amenaza, vulnerabilidad, riesgo","text":"<p>Es fundamental comprender las ciberamenazas, vulnerabilidades y riesgos:</p> <ul> <li> <p>Amenaza (Threat): evento o actor que puede causar da\u00f1o a un sistema.</p> </li> <li> <p>Vulnerabilidad (Vulnerability): punto d\u00e9bil en un sistema que puede ser explotado por un atacante.</p> </li> <li> <p>Riesgo (Risk): probabilidad e impacto de que una amenaza explote una vulnerabilidad para causar da\u00f1o.</p> </li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#diseno-seguro","title":"Dise\u00f1o seguro","text":""},{"location":"oinarriak_mehatxuak/sarrera/#seguridad-desde-el-diseno-security-by-design","title":"Seguridad desde el Dise\u00f1o (Security by Design)","text":"<p>La seguridad no es un a\u00f1adido, sino que debe ser parte integral del dise\u00f1o. Para ello, siempre se deben aplicar los siguientes puntos:</p> <ul> <li>Integrar la seguridad desde el inicio del desarrollo</li> <li>Aplicar los principios b\u00e1sicos de seguridad</li> <li>Utilizar configuraciones seguras por defecto</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#principio-de-minimo-privilegio","title":"Principio de M\u00ednimo Privilegio","text":"<p>Los usuarios y procesos solo deben tener los permisos m\u00ednimos necesarios para realizar sus tareas:</p> <ul> <li>Separaci\u00f3n de cuentas de usuario</li> <li>Limitaci\u00f3n de privilegios administrativos</li> <li>Restricci\u00f3n de permisos de procesos</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#medidas-basicas-de-seguridad-en-desarrollo-web","title":"Medidas b\u00e1sicas de seguridad en desarrollo web","text":"<ol> <li>Control de Acceso</li> <li>Autenticaci\u00f3n robusta de usuarios</li> <li>Permisos y roles de usuario</li> <li> <p>Gesti\u00f3n segura de sesiones</p> </li> <li> <p>Protecci\u00f3n de Datos</p> </li> <li>Cifrado (en tr\u00e1nsito y en reposo)</li> <li>Procedimientos de eliminaci\u00f3n de datos</li> <li> <p>Pol\u00edticas claras de protecci\u00f3n de datos</p> </li> <li> <p>C\u00f3digo Seguro</p> </li> <li>Validaci\u00f3n de entradas (tanto en cliente como en servidor)</li> <li>Codificaci\u00f3n de salida</li> <li> <p>Consultas preparadas (prepared statements)</p> </li> <li> <p>Configuraci\u00f3n y Mantenimiento</p> </li> <li>Actualizaciones y parches de seguridad</li> <li>Registros y monitorizaci\u00f3n</li> <li>Medidas de protecci\u00f3n f\u00edsica</li> </ol>"},{"location":"oinarriak_mehatxuak/sarrera/#herramientas-basicas","title":"Herramientas b\u00e1sicas","text":"<ul> <li>OWASP ZAP: proxy de interceptaci\u00f3n que te permite detectar vulnerabilidades de seguridad en aplicaciones web.</li> <li>Burp Suite Community: herramienta de interceptaci\u00f3n de tr\u00e1fico web que te permite detectar vulnerabilidades de seguridad en aplicaciones web.</li> <li>Nmap: herramienta de escaneo de red que te permite detectar vulnerabilidades de seguridad en aplicaciones web.</li> <li>Wireshark: herramienta de an\u00e1lisis de tr\u00e1fico que te permite detectar vulnerabilidades de seguridad en aplicaciones web.</li> <li>GitHub Security: herramienta de an\u00e1lisis de c\u00f3digo que te permite detectar vulnerabilidades de seguridad en aplicaciones web.</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Fundamentos del funcionamiento web</li> <li>Visi\u00f3n general de vulnerabilidades web comunes (OWASP Top 10)</li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/","title":"1.2 Fundamentos del funcionamiento web","text":""},{"location":"oinarriak_mehatxuak/web_oinarriak/#introduccion","title":"Introducci\u00f3n","text":"<p>Entender el funcionamiento de los sitios web es fundamental desde el punto de vista de la ciberseguridad. En esta secci\u00f3n, explicaremos c\u00f3mo funcionan los sitios web, sus componentes principales y su comunicaci\u00f3n.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#como-funciona-un-sitio-web","title":"C\u00f3mo funciona un sitio web","text":""},{"location":"oinarriak_mehatxuak/web_oinarriak/#dns-sistema-de-nombres-de-dominio","title":"DNS (Sistema de Nombres de Dominio)","text":"<p>Para que un sitio web funcione, varios componentes y procesos automatizados trabajan juntos. En primer lugar, se utiliza el sistema DNS para traducir un nombre de dominio (por ejemplo, google.com) a una direcci\u00f3n IP. Los dominios siguen una jerarqu\u00eda (subdominios, dominios de segundo nivel, TLDs) y diferentes registros DNS (A, AAAA, CNAME, MX, TXT...) ofrecen diferentes tipos de informaci\u00f3n.</p> <p></p> <p>Al realizar una solicitud DNS, primero se consulta la cach\u00e9; luego, se activan el servidor DNS del ISP, los servidores ra\u00edz, los servidores TLD y los servidores autoritativos hasta obtener la direcci\u00f3n IP. La respuesta de la solicitud tiene un TTL (Time To Live) que especifica cu\u00e1nto tiempo debe almacenarse en cach\u00e9.</p> <p></p> <p>```     1. Paso: Tu Ordenador     Primero, revisa su cach\u00e9 local. Es posible que hayas visitado ese sitio web recientemente y recuerde la direcci\u00f3n IP.     Resultado:     \u2705 Si lo encuentra: Se conecta directamente     \u274c Si no lo encuentra: Pasa al siguiente paso</p> <pre><code>2. Paso: Servidor DNS Recursivo\nEs el servidor proporcionado por tu proveedor de Internet (ISP) o uno que hayas elegido.\nTambi\u00e9n revisa en su cach\u00e9 local.\nPor ejemplo, sitios web populares como Google, Facebook, Twitter se buscan con frecuencia, por lo que probablemente los encontrar\u00e1 aqu\u00ed.\nResultado:\n\u2705 Si lo encuentra: Se lo devuelve a tu ordenador\n\u274c Si no lo encuentra: Se dirige a los servidores ra\u00edz de Internet\n\n3. Paso: Servidores Ra\u00edz (Root DNS)\nSon la \"columna vertebral\" de Internet. Buscan el TLD (.com, .org, .es...) y te dirigen al servidor TLD correspondiente.\nEn nuestro ejemplo: para www.tryhackme.com buscan .com y te dirigen al servidor TLD de .com.\n\n4. Paso: Servidor TLD\nIndica d\u00f3nde se encuentra el servidor de nombres autoritativo del dominio.\nPor ejemplo, los servidores de nombres autoritativos para tryhackme.com son:\nkip.ns.cloudflare.com\numa.ns.cloudflare.com\n\nHay dos para redundancia, por si uno falla.\n\n5. Paso: Servidor de Nombres Autoritativo\nEl servidor que contiene todos los registros DNS de ese dominio.\n\u00bfQu\u00e9 hace?\nBusca la direcci\u00f3n IP necesaria (registro A)\nLa devuelve al servidor DNS recursivo\nEl servidor recursivo la guarda en su cach\u00e9 para futuras solicitudes\nFinalmente, la env\u00eda a tu ordenador\n</code></pre>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#detalles-sobre-http","title":"Detalles sobre HTTP","text":"<p>Una vez obtenida la direcci\u00f3n IP, se realiza una solicitud al servidor mediante HTTP o HTTPS.</p> <p>Es un conjunto de reglas para comunicarse con servidores web y transmitir datos de sitios web.</p> <p>Puede transmitir diferentes tipos de datos:</p> <ul> <li>HTML (contenido del sitio web)</li> <li>Im\u00e1genes (JPG, PNG, GIF...)</li> <li>Videos (MP4, AVI...)</li> <li>Otros archivos (PDF, documentos...)</li> </ul> <p>La versi\u00f3n HTTPS es segura y cifra la comunicaci\u00f3n.</p> <p>Las solicitudes HTTP incluyen encabezados (Host, User-Agent, Cookie...), y el servidor devuelve una respuesta HTTP con un c\u00f3digo de estado (200, 404, 500...) y contenido (HTML, JSON, im\u00e1genes...).</p> <p>URL tiene varias partes: protocolo, usuario, anfitri\u00f3n, puerto, ruta, par\u00e1metros y fragmento. Seg\u00fan la solicitud, el servidor devuelve un recurso espec\u00edfico.</p> <p>Tomemos este ejemplo: http://user:password@tryhackme.com:80/view-room?id=1#task3</p> <p></p> <ul> <li>Scheme (Esquema): La parte http que indica el protocolo a usar. Puede ser HTTP, HTTPS o FTP, por ejemplo.</li> <li>User (Usuario): La parte user:password es para nombre de usuario y contrase\u00f1a en servicios que requieren autenticaci\u00f3n. No se usa mucho hoy en d\u00eda por razones de seguridad.</li> <li>Host (Anfitri\u00f3n): tryhackme.com es el nombre de dominio o direcci\u00f3n IP del servidor. Podr\u00eda ser algo como google.com o 192.168.1.1.</li> <li>Port (Puerto): 80 es el n\u00famero de puerto del servidor. El puerto predeterminado para HTTP es 80, y para HTTPS es 443. Puede ser cualquier n\u00famero del 1 al 65535.</li> <li>Path (Ruta): /view-room es la ubicaci\u00f3n del archivo o p\u00e1gina que deseas. Podr\u00eda ser algo como /blog o /images/photo.jpg.</li> <li>Query String (Cadena de consulta): ?id=1 es para enviar informaci\u00f3n adicional. Por ejemplo, /blog?id=1&amp;category=tech.</li> <li>Fragment (Fragmento): #task3 es para ir a una secci\u00f3n espec\u00edfica de la p\u00e1gina. Se usa para saltar a una secci\u00f3n determinada en una p\u00e1gina larga.</li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#metodos-http","title":"M\u00e9todos HTTP","text":"<p>Los m\u00e9todos HTTP son una forma de que el cliente indique su intenci\u00f3n al realizar una solicitud HTTP. Hay varios m\u00e9todos HTTP, pero explicaremos los m\u00e1s comunes, aunque generalmente se utilizan los m\u00e9todos GET y POST.</p> <ul> <li>GET: Se utiliza para obtener informaci\u00f3n de un servidor web. Por ejemplo, para ver una p\u00e1gina web o obtener datos.</li> <li>POST: Se utiliza para enviar datos a un servidor web y, posiblemente, crear un nuevo registro. Por ejemplo, al completar un formulario.</li> <li>PUT: Se utiliza para enviar datos a un servidor web y actualizar informaci\u00f3n existente.</li> <li>DELETE: Se utiliza para eliminar informaci\u00f3n o registros de un servidor web.</li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#codigos-de-estado-http","title":"C\u00f3digos de estado HTTP","text":"<p>Los c\u00f3digos de estado HTTP indican el estado de la respuesta del servidor a una solicitud. Estos c\u00f3digos se pueden dividir en cinco categor\u00edas:</p> <ul> <li> <p>100-199 - Informaci\u00f3n de respuesta Se utiliza para obtener informaci\u00f3n de un servidor web. Por ejemplo, para ver una p\u00e1gina web o recuperar algunos datos.</p> </li> <li> <p>Solicitud POST Se utiliza para enviar datos a un servidor web y, posiblemente, crear nuevos registros. Por ejemplo, al completar un formulario.</p> </li> <li> <p>Solicitud PUT Se utiliza para enviar datos a un servidor web y actualizar informaci\u00f3n existente.</p> </li> <li> <p>Solicitud DELETE Se utiliza para eliminar informaci\u00f3n o registros de un servidor web.</p> </li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#codigos-de-estado-http_1","title":"C\u00f3digos de Estado HTTP","text":"<p>Los c\u00f3digos de estado HTTP indican el estado de la respuesta del servidor a una solicitud. </p> <p>Estos c\u00f3digos de estado se pueden dividir en 5 categor\u00edas diferentes:</p> <ul> <li>100-199 - Respuesta de Informaci\u00f3n</li> </ul> <p>Se env\u00edan para notificar al cliente que la primera parte de su solicitud ha sido aceptada y debe continuar enviando el resto. Estos c\u00f3digos ya no son muy comunes.</p> <ul> <li>200-299 - \u00c9xito</li> </ul> <p>Este grupo de c\u00f3digos se utiliza para notificar al cliente que su solicitud se ha completado correctamente.</p> <ul> <li>300-399 - Redirecci\u00f3n</li> </ul> <p>Se utilizan para redirigir la solicitud del cliente a otro recurso. Esto puede ser a otra p\u00e1gina web o a un sitio web completamente diferente.</p> <ul> <li>400-499 - Errores del Cliente</li> </ul> <p>Se utiliza para notificar al cliente que ha habido un error en su solicitud.</p> <ul> <li>500-599 - Errores del Servidor</li> </ul> <p>Se guarda para errores que ocurren en el lado del servidor y normalmente indica que el servidor tiene un problema grave al manejar la solicitud.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#encabezados","title":"Encabezados","text":"<p>Los encabezados son peque\u00f1os datos adicionales que puedes enviar al hacer solicitudes a un servidor web. Aunque los encabezados no son estrictamente necesarios para hacer una solicitud HTTP, ser\u00eda dif\u00edcil ver un sitio web correctamente sin ellos.</p> <p>Encabezados de Solicitud Comunes</p> <p>Estos son los encabezados que el cliente (normalmente tu navegador) env\u00eda al servidor.</p> <ul> <li>Host: Algunos servidores web alojan m\u00e1s de un sitio web, por lo que al proporcionar el encabezado host, puedes indicar cu\u00e1l deseas, de lo contrario, obtendr\u00e1s el sitio web predeterminado del servidor.</li> <li>User-Agent: Es el software de tu navegador y su n\u00famero de versi\u00f3n. Informar al servidor web sobre tu navegador ayuda a formatear correctamente el sitio web para \u00e9l, ya que algunos elementos HTML, JavaScript y CSS solo est\u00e1n disponibles en navegadores espec\u00edficos.</li> <li>Content-Length: Al enviar datos a un servidor web, como en un formulario, la longitud del contenido le indica al servidor cu\u00e1ntos datos esperar en la solicitud web. Esto permite al servidor asegurarse de que no se hayan perdido datos.</li> <li>Accept-Encoding: Le dice al servidor web qu\u00e9 m\u00e9todos de compresi\u00f3n admite el navegador, para que los datos se puedan hacer m\u00e1s peque\u00f1os al enviarse a trav\u00e9s de Internet.</li> <li>Cookie: Datos que se env\u00edan al servidor para recordar tu informaci\u00f3n (consulta la secci\u00f3n de cookies para m\u00e1s detalles).</li> </ul> <p>Encabezados de Respuesta Comunes</p> <p>Estos son los encabezados que el servidor devuelve al cliente despu\u00e9s de una solicitud.</p> <ul> <li>Set-Cookie: Informaci\u00f3n que debe guardarse y que se devuelve al servidor web en cada solicitud (consulta la secci\u00f3n de cookies para m\u00e1s detalles).</li> <li>Cache-Control: Cu\u00e1nto tiempo debe almacenarse el contenido de la respuesta en la cach\u00e9 del navegador antes de volver a solicitarlo.</li> <li>Content-Type: Le indica al cliente qu\u00e9 tipo de datos se est\u00e1n devolviendo: HTML, CSS, JavaScript, im\u00e1genes, PDF, video, etc. Los navegadores usan el encabezado Content-Type para saber c\u00f3mo procesar los datos.</li> <li>Content-Encoding: Qu\u00e9 m\u00e9todo se ha utilizado para comprimir los datos y hacerlos m\u00e1s peque\u00f1os al enviarlos a trav\u00e9s de Internet.</li> </ul> <p>En la pr\u00e1ctica, estos encabezados son invisibles para tu navegador, pero proporcionan informaci\u00f3n esencial al servidor sobre c\u00f3mo manejar la solicitud.</p> <p>Por ejemplo, gracias al encabezado User-Agent, un sitio web puede mostrarse de manera diferente en un dispositivo m\u00f3vil que en una computadora de escritorio.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#cookies","title":"Cookies","text":"<p>Las cookies son peque\u00f1os datos que se almacenan en tu computadora. Las cookies se guardan cuando recibes un encabezado \"Set-Cookie\" de un servidor web. En todas las solicitudes posteriores que realices, devolver\u00e1s los datos de la cookie al servidor web. Dado que HTTP no tiene estado (no recuerda tus solicitudes anteriores), las cookies se pueden usar para recordar al servidor web qui\u00e9n eres, guardar configuraciones personales para el sitio web o saber si has estado en ese sitio web antes.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#como-funcionan-los-sitios-web","title":"\u00bfC\u00f3mo funcionan los sitios web?","text":"<p>Cuando visitas un sitio web, tu navegador (como Safari o Google Chrome) hace una solicitud a un servidor web pidiendo la informaci\u00f3n de la p\u00e1gina que est\u00e1s visitando. El servidor responde enviando los datos que tu navegador usar\u00e1 para mostrar la p\u00e1gina. Un servidor web no es m\u00e1s que un ordenador dedicado en alg\u00fan lugar del mundo que maneja tus solicitudes.</p> <p></p> <p>Frontend vs Backend: El Frontend es la parte que ves en tu navegador (HTML, CSS, JS), y el Backend es lo que se ejecuta en el servidor (PHP, Node.js...). El contenido puede ser est\u00e1tico o din\u00e1mico, y un servidor puede manejar m\u00faltiples sitios web a trav\u00e9s de Hosts Virtuales.</p> <p>Cuando tu navegador hace una solicitud a un servidor web, hay muchos procesos involucrados, pero por ahora lo que necesitas entender es que haces una solicitud a un servidor, y este responde enviando los datos que tu navegador usar\u00e1 para mostrar la informaci\u00f3n.</p> <p>HTML, CSS y JavaScript son las tecnolog\u00edas b\u00e1sicas de las p\u00e1ginas web. HTML se usa para la estructura, CSS para el estilo y JavaScript para la interactividad. Los elementos tienen atributos (id, class, src...), y si utilizan entrada del usuario, pueden ser peligrosos si no se filtran correctamente.</p> <p>La exposici\u00f3n de datos sensibles a menudo ocurre en el c\u00f3digo frontend (en comentarios, archivos JavaScript...) cuando se dejan contrase\u00f1as, tokens o enlaces privados. Pueden surgir vulnerabilidades como la inyecci\u00f3n de HTML cuando la entrada del usuario no se filtra y se muestra directamente en la p\u00e1gina.</p> <p>Las herramientas de desarrollo del navegador (Developer Tools) son \u00fatiles para examinar solicitudes, cookies, c\u00f3digo e informaci\u00f3n desde una perspectiva de seguridad. Tenemos paneles como Inspector, Red, Depurador...</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#otros-componentes-importantes","title":"Otros componentes importantes:","text":"<p>CDN (Red de Distribuci\u00f3n de Contenido)</p> <p>Una CDN puede ser un excelente recurso para reducir la carga de tr\u00e1fico en un sitio web concurrido. Puedes alojar archivos est\u00e1ticos de tu sitio web, como JavaScript, CSS, im\u00e1genes y videos, en miles de servidores en todo el mundo. Cuando un usuario solicita uno de los archivos alojados, la CDN calcula qu\u00e9 servidor est\u00e1 f\u00edsicamente m\u00e1s cercano y env\u00eda la solicitud all\u00ed en lugar de al otro lado del mundo.</p> <p>Balanceadores de Carga</p> <p>Cuando el tr\u00e1fico de un sitio web comienza a crecer o cuando se ejecuta una aplicaci\u00f3n que requiere alta disponibilidad, un solo servidor web podr\u00eda no ser suficiente.</p> <p>Cuando solicitas un sitio web que tiene un balanceador de carga, el balanceador de carga recibir\u00e1 primero tu solicitud y luego la enviar\u00e1 a uno de los m\u00faltiples servidores que tiene detr\u00e1s.</p> <p>Los balanceadores de carga utilizan diferentes algoritmos para decidir qu\u00e9 servidor es el m\u00e1s adecuado para manejar una solicitud.</p> <p>WAFs (Cortafuegos de Aplicaci\u00f3n Web)</p> <p>Detectan y bloquean solicitudes maliciosas.</p> <p>Bases de Datos</p> <p>Un WAF se sit\u00faa entre tu solicitud web y el servidor web; su objetivo principal es proteger el servidor web de ataques de hacking o denegaci\u00f3n de servicio.</p> <p></p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Visi\u00f3n general de vulnerabilidades web comunes</li> <li>Volver al inicio</li> </ul>"}]}
{"config":{"lang":["en","es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Zibersegurtasuna Web Garapenean","text":"<p>Ongi etorri Web Garapenerako Zibersegurtasunaren apunteetara. Material honek segurtasun informatikoaren oinarrizko kontzeptuak eta praktika onenak lantzen ditu web garapenean. FROGA</p>"},{"location":"#ikastaroaren-egitura","title":"Ikastaroaren Egitura","text":""},{"location":"#1-oinarriak-eta-mehatxu-arruntak","title":"1. Oinarriak eta mehatxu arruntak","text":"<ul> <li>Web Garapenean Zibersegurtasunaren Sarrera</li> <li>Webaren funtzionamenduaren oinarriak</li> <li>Web ahultasun arrunten ikuspegi orokorra (OWASP Top 10)</li> </ul>"},{"location":"#2-eraso-eta-defentsa-oinarrizkoak","title":"2. Eraso eta defentsa oinarrizkoak","text":"<ul> <li>Injekzioen aurkako defentsak</li> <li>Autentifikazio eta saioen segurtasuna</li> <li>Sarbide-kontrola eta konfigurazio segurua</li> </ul>"},{"location":"#3-datuen-babesa-eta-tresna-praktikoak","title":"3. Datuen babesa eta tresna praktikoak","text":"<ul> <li>Datu sentikorren babesa</li> <li>APIen eta dependentzien segurtasuna</li> <li>Tresna praktikoen sarrera</li> </ul>"},{"location":"#nola-erabili-apunte-hauek","title":"Nola erabili apunte hauek","text":"<ul> <li>Erabili ezkerreko menua gai desberdinetara sartzeko.</li> <li>Gai bakoitzean teoria eta adibide praktikoak aurkituko dituzu.</li> <li>Kode adibideak nabarmenduta daude irakurgarritasuna hobetzeko.</li> </ul>"},{"location":"#baliabide-gehigarriak","title":"Baliabide Gehigarriak","text":"<ul> <li>OWASP</li> <li>OWASP Top 10</li> <li>OWASP Cheat Sheet Series</li> <li>OWASP Euskal Herria</li> </ul> <p>OWASP Juice Shop</p> <ul> <li> <p>OWASP Juice Shop </p> </li> <li> <p>Juice Shop</p> </li> </ul>"},{"location":"#hiztegi-teknikoa","title":"Hiztegi Teknikoa","text":"Euskaraz Gazteleraz Ingeleraz Zibersegurtasuna Ciberseguridad Cybersecurity Webgunea Sitio web Website Zerbitzaria Servidor Server Bezeroa Cliente Client Saioa Sesi\u00f3n Session Autentifikazioa Autenticaci\u00f3n Authentication Baimena Autorizaci\u00f3n Authorization Zifratzea Cifrado Encryption Ahultasuna Vulnerabilidad Vulnerability Mehatxua Amenaza Threat"},{"location":"ariketak/broken_access_control/","title":"Broken Access Control - Erronkak","text":"<p>Sistema informatiko gehienak hainbat erabiltzailerekin erabiltzeko diseinatuta daude. Pribilegioak erabiltzaile batek egin dezakeena esan nahi du. Pribilegio arrunten artean daude fitxategiak ikustea eta editatzea, edo sistemako fitxategiak aldatzea.</p> <p>Pribilegioen gorakadak esan nahi du erabiltzaile batek eskubidea ez duten pribilegioak jasotzen dituela. Pribilegio horiek fitxategiak ezabatzeko, informazio pribatua ikusteko edo nahi ez diren programak (adibidez, birusak) instalatzeko erabil daitezke. Normalean, sistema batek segurtasuna saihesteko aukera ematen duen akats bat duenean gertatzen da, edo, bestela, erabiltzeko moduari buruzko diseinu-hipotesi akastunak dituenean.</p>"},{"location":"ariketak/broken_access_control/#erronkak","title":"Erronkak","text":""},{"location":"ariketak/broken_access_control/#1-erronka-miscellaneous-score-board","title":"1. erronka: Miscellaneous &gt; Score Board","text":"<pre><code>Find the carefully hidden 'Score Board' page.\n\nHau izan beharko da gure lehengo ariketa. Score Borad atalean topatuko bait ditugu gainontzeko ariketak.\n</code></pre>"},{"location":"ariketak/broken_access_control/#2-erronka-whats-the-administrators-email-address","title":"2. erronka: What's the Administrator's email address?","text":"<pre><code>Saiatuko dugu admin erabiltzailearen emaila topatzen.\n</code></pre>"},{"location":"ariketak/broken_access_control/#3-erronka-what-parameter-is-used-for-searching","title":"3. erronka: What parameter is used for searching?","text":"<pre><code>Bilaketa bat egiterakoan, zein da kontsultan erabilitako parametroa?\n</code></pre>"},{"location":"ariketak/broken_access_control/#4-erronka-access-the-administration-section-of-the-store","title":"4. erronka: Access the administration section of the store","text":"<pre><code>Score-board-ekin gertatu den bezala, ez dugu administrazio atalera sartzeko esteka zuzena. Guk aurkitu beharko dugu. Hainbat aukera egon daitezke atala topatzeko.\n\nHau egiteko SQL injection pixkatxo bat ikusi behar dugu.\n</code></pre>"},{"location":"ariketak/broken_access_control/#estekak","title":"Estekak","text":"<ul> <li>OWASP Broken Access Control</li> <li>PortSwigger - Access Control Vulnerabilities</li> </ul> <p>\u2190 Atzera bueltatu OWASP Top 10-ra</p>"},{"location":"ariketak/cryptographic_failures/","title":"Cryptographic Failures","text":"<p>Lehenik eta behin, iragaitzazko eta atsedeneko datuen babes-beharrak zehaztu behar dira. Adibidez, pasahitzek, kreditu txartelen zenbakiek, osasun erregistroek, informazio pertsonalak eta negozio sekretuek aparteko babesa behar dute, batez ere datu horiek pribatutasun legeetan sartzen badira.</p> <p>Datu horiengatik guztiengatik:</p> <ul> <li> <p>Testu argian transmititzen al da daturen bat? Honek HTTP, SMTP, FTP bezalako protokoloei eragiten die. Interneteko kanpoko trafikoa oso arriskutsua da. Barne-trafiko guztia egiaztatzea, adibidez, karga-orekatzaileen, web-zerbitzarien edo back-end sistemen artean.</p> </li> <li> <p>Algoritmo edo protokolo kriptografiko zahar edo ahulen bat erabiltzen da, bai lehenespenez, bai kode zaharragoan?</p> </li> <li> <p>Erabiltzen ari diren kriptografia-gako lehenetsiak, sortutako edo berrerabilitako kriptografia-gako ahulak, edo gakoen kudeaketa edo errotazio egokia falta dira? Kriptografia-gakoak iturburu-kodeen biltegietan aztertzen dira?</p> </li> <li> <p>Enkriptatzea ez da derrigortzen, adibidez, HTTP goiburukoak (nabigatzailea) segurtasun-direktibak edo goiburuak falta dira?</p> </li> <li> <p>Jasotako zerbitzari-ziurtagiria eta konfiantza-katea behar bezala baliozkotuta daude?</p> </li> <li> <p>Etab...</p> </li> </ul>"},{"location":"ariketak/cryptographic_failures/#erronkak","title":"Erronkak","text":""},{"location":"ariketak/cryptographic_failures/#1-erronka-confidential-document","title":"1. erronka: Confidential Document","text":"<p>Access a confidential document. Saiatuko dugu dokumentu konfidentzial bat topatzen, horretarako begirada bat botako genuke privacy, about us eta horrelakoetan, ezta? </p>"},{"location":"ariketak/cryptographic_failures/#2-erronka-sensitive-data-exposure-exposes-credentials","title":"2. erronka: Sensitive Data Exposure &gt; Exposes credentials","text":"<p>A developer was careless with hardcoding unused, but still valid credentials for a testing account on the client-side.</p>"},{"location":"ariketak/cryptographic_failures/#estekak","title":"Estekak","text":"<ul> <li>OWASP Cryptographic Failures</li> <li>OWASP Cryptographic Storage Cheat Sheet</li> </ul> <p>\u2190 Atzera bueltatu OWASP Top 10-ra</p>"},{"location":"ariketak/identification_authentication_failures/","title":"Identification and Authentication Failures","text":""},{"location":"ariketak/identification_authentication_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas en la identificaci\u00f3n y autenticaci\u00f3n ocurren cuando las funciones relacionadas con la identidad de los usuarios se implementan incorrectamente. Esta categor\u00eda ocupa el s\u00e9ptimo puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/identification_authentication_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar debilidades en la autenticaci\u00f3n</li> <li>Aprender sobre autenticaci\u00f3n de m\u00faltiples factores</li> <li>Implementar controles de autenticaci\u00f3n seguros</li> </ul>"},{"location":"ariketak/identification_authentication_failures/#tareas","title":"Tareas","text":"<ol> <li>Probar la fortaleza de las contrase\u00f1as</li> <li>Verificar la gesti\u00f3n de sesiones</li> <li>Evaluar la recuperaci\u00f3n de cuentas</li> </ol>"},{"location":"ariketak/identification_authentication_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Authentication Cheat Sheet</li> <li>OWASP Session Management Cheat Sheet</li> </ul>"},{"location":"ariketak/injection/","title":"Injection","text":""},{"location":"ariketak/injection/#introduccion","title":"Introducci\u00f3n","text":"<p>Las inyecciones ocurren cuando datos no confiables son enviados a un int\u00e9rprete como parte de un comando o consulta. Esta categor\u00eda ocupa el tercer puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/injection/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Entender los diferentes tipos de inyecci\u00f3n</li> <li>Aprender a identificar puntos de inyecci\u00f3n</li> <li>Implementar pr\u00e1cticas seguras para prevenir inyecciones</li> </ul>"},{"location":"ariketak/injection/#tareas","title":"Tareas","text":"<ol> <li>Probar inyecci\u00f3n SQL</li> <li>Identificar inyecci\u00f3n de comandos del sistema</li> <li>Probar inyecci\u00f3n NoSQL</li> </ol>"},{"location":"ariketak/injection/#recursos","title":"Recursos","text":"<ul> <li>OWASP Injection</li> <li>OWASP SQL Injection Prevention Cheat Sheet</li> </ul>"},{"location":"ariketak/insecure_design/","title":"Insecure Design","text":""},{"location":"ariketak/insecure_design/#introduccion","title":"Introducci\u00f3n","text":"<p>El dise\u00f1o inseguro se refiere a fallas en el dise\u00f1o de la aplicaci\u00f3n que conducen a vulnerabilidades de seguridad. Esta es una nueva categor\u00eda en el OWASP Top 10 2021, ocupando el cuarto puesto.</p>"},{"location":"ariketak/insecure_design/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los riesgos del dise\u00f1o inseguro</li> <li>Aprender principios de dise\u00f1o seguro</li> <li>Identificar patrones de dise\u00f1o inseguros</li> </ul>"},{"location":"ariketak/insecure_design/#tareas","title":"Tareas","text":"<ol> <li>Revisar el modelo de amenazas</li> <li>Identificar controles de seguridad faltantes</li> <li>Evaluar el flujo de autorizaci\u00f3n</li> </ol>"},{"location":"ariketak/insecure_design/#recursos","title":"Recursos","text":"<ul> <li>OWASP Insecure Design</li> <li>OWASP Secure Design Principles</li> </ul>"},{"location":"ariketak/security_logging_monitoring_failures/","title":"Security Logging and Monitoring Failures","text":""},{"location":"ariketak/security_logging_monitoring_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas en el registro y monitoreo de seguridad dificultan la detecci\u00f3n de incidentes. Esta categor\u00eda ocupa el noveno puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/security_logging_monitoring_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Implementar registro de seguridad efectivo</li> <li>Configurar sistemas de monitoreo</li> <li>Desarrollar planes de respuesta a incidentes</li> </ul>"},{"location":"ariketak/security_logging_monitoring_failures/#tareas","title":"Tareas","text":"<ol> <li>Revisar registros de auditor\u00eda</li> <li>Configurar alertas de seguridad</li> <li>Probar la detecci\u00f3n de incidentes</li> </ol>"},{"location":"ariketak/security_logging_monitoring_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Logging Cheat Sheet</li> <li>OWASP AppSensor</li> </ul>"},{"location":"ariketak/security_misconfiguration/","title":"Security Misconfiguration","text":""},{"location":"ariketak/security_misconfiguration/#introduccion","title":"Introducci\u00f3n","text":"<p>La mala configuraci\u00f3n de seguridad ocurre cuando los controles de seguridad no se implementan correctamente. Esta categor\u00eda ocupa el quinto puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/security_misconfiguration/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar configuraciones inseguras</li> <li>Aprender pr\u00e1cticas seguras de configuraci\u00f3n</li> <li>Implementar hardening de sistemas</li> </ul>"},{"location":"ariketak/security_misconfiguration/#tareas","title":"Tareas","text":"<ol> <li>Revisar configuraciones por defecto</li> <li>Verificar encabezados de seguridad</li> <li>Comprobar la exposici\u00f3n de informaci\u00f3n sensible</li> </ol>"},{"location":"ariketak/security_misconfiguration/#recursos","title":"Recursos","text":"<ul> <li>OWASP Security Misconfiguration</li> <li>OWASP Configuration Management Cheat Sheet</li> </ul>"},{"location":"ariketak/server_side_request_forgery/","title":"Server-Side Request Forgery (SSRF)","text":""},{"location":"ariketak/server_side_request_forgery/#introduccion","title":"Introducci\u00f3n","text":"<p>La falsificaci\u00f3n de solicitudes del lado del servidor (SSRF) ocurre cuando un atacante puede hacer que el servidor realice solicitudes a recursos internos o externos. Esta categor\u00eda es nueva en el OWASP Top 10 2021, ocupando el d\u00e9cimo puesto.</p>"},{"location":"ariketak/server_side_request_forgery/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los vectores de ataque SSRF</li> <li>Aprender a identificar vulnerabilidades SSRF</li> <li>Implementar protecciones contra SSRF</li> </ul>"},{"location":"ariketak/server_side_request_forgery/#tareas","title":"Tareas","text":"<ol> <li>Identificar puntos finales que realizan solicitudes</li> <li>Probar la validaci\u00f3n de URLs</li> <li>Evaluar el filtrado de direcciones IP</li> </ol>"},{"location":"ariketak/server_side_request_forgery/#recursos","title":"Recursos","text":"<ul> <li>OWASP SSRF</li> <li>OWASP SSRF Prevention Cheat Sheet</li> </ul>"},{"location":"ariketak/software_data_integrity_failures/","title":"Software and Data Integrity Failures","text":""},{"location":"ariketak/software_data_integrity_failures/#introduccion","title":"Introducci\u00f3n","text":"<p>Las fallas de integridad del software y los datos ocurren cuando la integridad del c\u00f3digo y la infraestructura no se verifican adecuadamente. Esta es una nueva categor\u00eda en el OWASP Top 10 2021, ocupando el octavo puesto.</p>"},{"location":"ariketak/software_data_integrity_failures/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Comprender los riesgos de integridad</li> <li>Aprender sobre firmas digitales</li> <li>Implementar verificaciones de integridad</li> </ul>"},{"location":"ariketak/software_data_integrity_failures/#tareas","title":"Tareas","text":"<ol> <li>Verificar firmas de c\u00f3digo</li> <li>Evaluar la cadena de suministro</li> <li>Revisar actualizaciones autom\u00e1ticas</li> </ol>"},{"location":"ariketak/software_data_integrity_failures/#recursos","title":"Recursos","text":"<ul> <li>OWASP Software and Data Integrity Failures</li> <li>OWASP Dependency Track</li> </ul>"},{"location":"ariketak/vulnerable_obsolete_components/","title":"Vulnerable and Outdated Components","text":""},{"location":"ariketak/vulnerable_obsolete_components/#introduccion","title":"Introducci\u00f3n","text":"<p>El uso de componentes con vulnerabilidades conocidas es uno de los riesgos m\u00e1s comunes. Esta categor\u00eda ocupa el sexto puesto en el OWASP Top 10 2021.</p>"},{"location":"ariketak/vulnerable_obsolete_components/#objetivos-del-ejercicio","title":"Objetivos del Ejercicio","text":"<ul> <li>Identificar componentes vulnerables</li> <li>Aprender a gestionar dependencias</li> <li>Implementar procesos de actualizaci\u00f3n</li> </ul>"},{"location":"ariketak/vulnerable_obsolete_components/#tareas","title":"Tareas","text":"<ol> <li>Inventariar componentes de terceros</li> <li>Identificar versiones vulnerables</li> <li>Planificar actualizaciones</li> </ol>"},{"location":"ariketak/vulnerable_obsolete_components/#recursos","title":"Recursos","text":"<ul> <li>OWASP Vulnerable Components</li> <li>OWASP Dependency Check</li> </ul>"},{"location":"datu_babesa/api_segurtasuna/","title":"3.2 API Seguruak eta Autentifikazioa","text":""},{"location":"datu_babesa/api_segurtasuna/#oauth-20-eta-openid-connect","title":"OAuth 2.0 eta OpenID Connect","text":""},{"location":"datu_babesa/api_segurtasuna/#oauth-20-fluxu-osoa-authorization-code-flow-pkce","title":"OAuth 2.0 Fluxu Osoa (Authorization Code Flow + PKCE)","text":"<pre><code>sequenceDiagram\n    participant Erabiltzailea\n    participant Bezero Aplikazioa\n    participant Autorizazio Zerbitzaria\n    participant Baliabide Zerbitzaria\n\n    Erabiltzailea-&gt;&gt;Bezero Aplikazioa: Sartzen saiatzen da\n    Bezero Aplikazioa-&gt;&gt;Erabiltzailea: Bideratzen du /login-era\n    Erabiltzailea-&gt;&gt;Autorizazio Zerbitzaria: Sartu kredentzialak\n    Autorizazio Zerbitzaria-&gt;&gt;Erabiltzailea: Autentifikatuta, bideratzen du callback-era\n    Bezero Aplikazioa-&gt;&gt;Autorizazio Zerbitzaria: Trukatzen du kodea token baterako\n    Autorizazio Zerbitzaria--&gt;&gt;Bezero Aplikazioa: Itzultzen du access_token eta refresh_token\n    Bezero Aplikazioa-&gt;&gt;Baliabide Zerbitzaria: Eskaera access_token-ekin\n    Baliabide Zerbitzaria--&gt;&gt;Bezero Aplikazioa: Itzultzen ditu datuak\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#pkce-proof-key-for-code-exchange-inplementazioa-react-nodejs","title":"PKCE (Proof Key for Code Exchange) inplementazioa (React + Node.js)","text":"<p>Bezeroaren aldea (React):</p> <pre><code>// PKCE kodea sortzeko funtzio lagungarriak\nconst generateRandomString = (length) =&gt; {\n  const array = new Uint32Array(length);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec =&gt; ('0' + dec.toString(16)).substr(-2)).join('');\n};\n\nconst sha256 = async (plain) =&gt; {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  const hash = await window.crypto.subtle.digest('SHA-256', data);\n  return Array.from(new Uint8Array(hash))\n    .map(b =&gt; b.toString(16).padStart(2, '0'))\n    .join('');\n};\n\nconst base64URLEncode = (str) =&gt; {\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(str)))\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n};\n\n// Login funtzioan\nconst handleLogin = async () =&gt; {\n  // 1. Sortu code_verifier eta code_challenge\n  const codeVerifier = generateRandomString(64);\n  const hashed = await sha256(codeVerifier);\n  const codeChallenge = base64URLEncode(hashed);\n\n  // 2. Gorde code_verifier sesioan\n  sessionStorage.setItem('code_verifier', codeVerifier);\n\n  // 3. Bideratu erabiltzailea autorizazio-endpointera\n  const authUrl = new URL('https://auth.zure-zerbitzaria.com/authorize');\n  const params = {\n    response_type: 'code',\n    client_id: 'zure_client_id',\n    redirect_uri: window.location.origin + '/callback',\n    code_challenge: codeChallenge,\n    code_challenge_method: 'S256',\n    scope: 'openid profile email',\n    state: generateRandomString(16)\n  };\n\n  Object.keys(params).forEach(key =&gt; \n    authUrl.searchParams.append(key, params[key])\n  );\n\n  window.location.href = authUrl.toString();\n};\n</code></pre> <p>Zerbitzariaren aldea (Node.js + Express):</p> <pre><code>const express = require('express');\nconst { createHmac } = require('crypto');\nconst jwt = require('jsonwebtoken');\n\nconst app = express();\napp.use(express.json());\n\n// Datuak gordetzeko (produkzioan datu-base bat erabili)\nconst codeVerifiers = new Map();\nconst refreshTokens = new Map();\n\n// 1. Autorizazio kodea itzuli\napp.get('/authorize', (req, res) =&gt; {\n  const { client_id, redirect_uri, code_challenge, state } = req.query;\n\n  // Egiaztatu bezeroa eta redirect_uria\n  if (client_id !== 'zure_client_id') {\n    return res.status(400).send('Client ID desegokia');\n  }\n\n  // Gorde code_challenge (normalean sesio batean)\n  const authCode = generateRandomString(32);\n  codeVerifiers.set(authCode, {\n    codeChallenge: code_challenge,\n    clientId: client_id,\n    redirectUri: redirect_uri,\n    createdAt: Date.now()\n  });\n\n  // Erabiltzaileari erakutsi baimen-orria eta gero...\n  // Erabiltzaileak baimena eman ondoren, redirect egiten du callback-era\n  const redirectUrl = new URL(redirect_uri);\n  redirectUrl.searchParams.append('code', authCode);\n  redirectUrl.searchParams.append('state', state);\n\n  res.redirect(redirectUrl.toString());\n});\n\n// 2. Trukaketa kodea token batekin\napp.post('/token', async (req, res) =&gt; {\n  const { client_id, code, code_verifier, redirect_uri, grant_type } = req.body;\n\n  // Egiaztatu parametroak\n  if (grant_type !== 'authorization_code') {\n    return res.status(400).json({ error: 'grant_type baliogabea' });\n  }\n\n  // Egiaztatu kodea\n  const codeData = codeVerifiers.get(code);\n  if (!codeData) {\n    return res.status(400).json({ error: 'Kodea baliogabea' });\n  }\n\n  // Egiaztatu code_verifier\n  const hashed = await sha256(code_verifier);\n  const codeChallenge = base64URLEncode(hashed);\n\n  if (codeChallenge !== codeData.codeChallenge) {\n    return res.status(400).json({ error: 'Code verifier desegokia' });\n  }\n\n  // Sortu tokenak\n  const accessToken = jwt.sign(\n    { sub: 'user123', client_id },\n    process.env.JWT_SECRET,\n    { expiresIn: '1h' }\n  );\n\n  const refreshToken = generateRandomString(64);\n  refreshTokens.set(refreshToken, { \n    sub: 'user123',\n    client_id,\n    expiresAt: Date.now() + 30 * 24 * 60 * 60 * 1000 // 30 egun\n  });\n\n  // Ezabatu kodea berrerabiltzea eragozteko\n  codeVerifiers.delete(code);\n\n  // Itzuli tokenak\n  res.json({\n    access_token: accessToken,\n    token_type: 'Bearer',\n    expires_in: 3600,\n    refresh_token: refreshToken,\n    id_token: '...' // OpenID Connect kasurako\n  });\n});\n\n// 3. Egiaztatu tokena (Resource Server)\nfunction authenticateToken(req, res, next) {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader &amp;&amp; authHeader.split(' ')[1];\n\n  if (!token) return res.sendStatus(401);\n\n  jwt.verify(token, process.env.JWT_SECRET, (err, user) =&gt; {\n    if (err) return res.sendStatus(403);\n    req.user = user;\n    next();\n  });\n}\n\napp.get('/api/datuak', authenticateToken, (req, res) =&gt; {\n  // Erabiltzailearen datuak itzuli\n  res.json({ \n    message: 'Datuak lortu dira',\n    user: req.user \n  });\n});\n\n// Laguntzaile funtzioak\nfunction generateRandomString(length) {\n  return require('crypto').randomBytes(length).toString('hex');\n}\n\nasync function sha256(plain) {\n  return createHmac('sha256', '').update(plain).digest('hex');\n}\n\nfunction base64URLEncode(str) {\n  return Buffer.from(str, 'hex').toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () =&gt; {\n  console.log(`Zerbitzaria ${PORT} portuan entzuten...`);\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#api-segurtasun-hobespenak-security-headers","title":"API Segurtasun Hobespenak (Security Headers)","text":""},{"location":"datu_babesa/api_segurtasuna/#helmetjs-erabilita-nodejs","title":"Helmet.js erabilita (Node.js)","text":"<pre><code>const express = require('express');\nconst helmet = require('helmet');\n\nconst app = express();\n\n// Segurtasun-neurri orokorrak\napp.use(helmet());\n\n// Content Security Policy (CSP)\napp.use(\n  helmet.contentSecurityPolicy({\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\n        \"'self'\",\n        \"'unsafe-inline'\", // Saiestu hau kentzen ahal bezain laster\n        \"https://apis.google.com\"\n      ],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\", \"https://*.example.com\"],\n      connectSrc: [\"'self'\", \"https://api.zure-zerbitzaria.com\"],\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n      objectSrc: [\"'none'\"],\n      upgradeInsecureRequests: []\n    }\n  })\n);\n\n// X-XSS-Protection\napp.use(helmet.xssFilter());\n\n// MIME-type sniffing ekidin\napp.use(helmet.noSniff());\n\n// Clickjacking ekidin\napp.use(helmet.frameguard({ action: 'deny' }));\n\n// HSTS (HTTPS behartzea)\nconst oneYearInSeconds = 31536000;\napp.use(helmet.hsts({\n  maxAge: oneYearInSeconds,\n  includeSubDomains: true,\n  preload: true\n}));\n\n// X-Powered-By ezkutatu\napp.use(helmet.hidePoweredBy());\n\n// DNS Prefetch kontrola\napp.use(helmet.dnsPrefetchControl({ allow: false }));\n\n// X-Download-Options (IE8+) - kontu fitxategiak zabaltzeko modua kontrolatzeko\napp.use(helmet.ieNoOpen());\n\n// X-Content-Type-Options\napp.use(helmet.noSniff());\n\n// X-Permitted-Cross-Domain-Policies\napp.use(helmet.permittedCrossDomainPolicies());\n\n// X-Frame-Options\napp.use(helmet.frameguard({ action: 'deny' }));\n\n// XSS Filter (zaharkitua, baina bateragarritasunerako)\napp.use((req, res, next) =&gt; {\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  next();\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#api-segurtasun-hobespenak-oso-garrantzitsua","title":"API Segurtasun Hobespenak (Oso garrantzitsua!)","text":""},{"location":"datu_babesa/api_segurtasuna/#1-sarrera-balidazioa","title":"1. Sarrera balidazioa","text":"<pre><code>// express-validator erabiliz\nconst { body, validationResult } = require('express-validator');\n\napp.post('/api/erabiltzaileak', [\n  // Izena: 2-50 karaktere, letrak eta zuriuneak bakarrik\n  body('izena')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .matches(/^[\\p{L}\\s]+$/u)\n    .withMessage('Izenak 2-50 karaktere izan behar ditu eta letrak eta zuriuneak bakarrik'),\n\n  // Emaila: baliozkoa izan behar da\n  body('email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Mesedez, sartu helbide elektroniko baliagarri bat'),\n\n  // Pasahitza: 8+ karaktere, letra larri/ xehe bat, zenbaki bat eta karaktere berezi bat\n  body('pasahitza')\n    .isStrongPassword({\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })\n    .withMessage('Pasahitzak gutxienez 8 karaktere, letra larri bat, xehe bat, zenbaki bat eta karaktere berezi bat izan behar ditu')\n], async (req, res) =&gt; {\n  // Egiaztatu balidazio-emaitzak\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n\n  // Jarraitu prozesamendua\n  try {\n    // Erabiltzailea sortu...\n    res.status(201).json({ message: 'Erabiltzailea ondo sortu da' });\n  } catch (error) {\n    console.error('Errorea erabiltzailea sortzean:', error);\n    res.status(500).json({ error: 'Errorea zerbitzarian' });\n  }\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#2-rate-limiting-atzipen-muga","title":"2. Rate Limiting (Atzipen-muga)","text":"<pre><code>const rateLimit = require('express-rate-limit');\n\n// Oinarrizko rate limiting\nconst apiLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutuko leihoa\n  max: 100, // Leiho bakoitzeko gehienezko eskaera kopurua\n  message: { error: 'Eskaera gehiegi, saiatu berriro beranduago' },\n  standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers\n  legacyHeaders: false, // Disable the `X-RateLimit-*` headers\n});\n\n// APIrako muga aplikatu\napp.use('/api/', apiLimiter);\n\n// Erabiltzailearen araberako rate limiting\nconst userLimiter = rateLimit({\n  windowMs: 60 * 60 * 1000, // Ordu 1\n  max: async (req, res) =&gt; {\n    // Erabiltzailearen IDa lortu (adibidez, tokenetik)\n    const userId = req.user?.id || req.ip;\n\n    // Erabiltzailearen plana lortu (adibidez, datu-base batetik)\n    const userPlan = await getUserPlan(userId);\n\n    // Planaren arabera itzuli muga\n    switch (userPlan) {\n      case 'free': return 100;\n      case 'pro': return 1000;\n      case 'enterprise': return 10000;\n      default: return 100;\n    }\n  },\n  keyGenerator: (req) =&gt; req.user?.id || req.ip,\n  message: { error: 'Zure erabiltzaile-planak muga bat du orduko eskaeretan' }\n});\n\napp.use('/api/erabiltzaile/datuak', userLimiter);\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#3-errore-kudeaketa-segurua","title":"3. Errore-kudeaketa segurua","text":"<pre><code>// Errore-kudeatzaile orokorra\napp.use((err, req, res, next) =&gt; {\n  console.error(err.stack);\n\n  // Errore-mezu orokorra\n  const response = {\n    error: {\n      message: 'Errorea zerbitzarian',\n      code: 'internal_server_error',\n      requestId: req.id // request-id header bat erabiliz\n    }\n  };\n\n  // Garapenerako informazio gehiago\n  if (process.env.NODE_ENV === 'development') {\n    response.error.details = {\n      message: err.message,\n      stack: err.stack,\n      ...err\n    };\n  }\n\n  // HTTP egoera kodea\n  const statusCode = err.statusCode || 500;\n\n  // Erantzuna bidali\n  res.status(statusCode).json(response);\n});\n\n// 404 kudeaketa\napp.use((req, res) =&gt; {\n  res.status(404).json({\n    error: {\n      message: 'Ez da baliabidea aurkitu',\n      code: 'not_found',\n      path: req.path\n    }\n  });\n});\n</code></pre>"},{"location":"datu_babesa/api_segurtasuna/#ariketa-praktikoa","title":"Ariketa praktikoa","text":"<ol> <li>Inplementatu OAuth 2.0 + PKCE zure React/Node.js aplikazioan</li> <li>Konfiguratu CSP zure webgunean eta probatu Content-Security-Policy-Report-Only</li> <li>Egiaztatu zure API-aren segurtasuna OWASP ZAP edo Burp Suite erabiliz</li> <li>Inplementatu rate limiting zure API kritikoetan</li> </ol>"},{"location":"datu_babesa/api_segurtasuna/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Tresna praktikoak eta segurtasun-ebaluazioa</li> <li>Atzera itzuli aurreko atalera</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/","title":"3.1 Datu sentikorren kudeaketa eta babesa","text":""},{"location":"datu_babesa/datu_sentikorrak/#datuen-zifraketa","title":"Datuen zifraketa","text":""},{"location":"datu_babesa/datu_sentikorrak/#zergatik-da-garrantzitsua-zifraketa-erabiltzea","title":"Zergatik da garrantzitsua zifraketa erabiltzea?","text":"<ul> <li>Datuak lapurtuz gero, ezingo dira irakurri</li> <li>Datuak transferitzerakoan segurtasuna bermatzen du</li> <li>Lege betetzea (GDPR, HIPAA, etab.)</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#zifraketa-motak","title":"Zifraketa motak","text":""},{"location":"datu_babesa/datu_sentikorrak/#1-zifraketa-simetrikoa-aes","title":"1. Zifraketa simetrikoa (AES)","text":"<p>Gako berbera erabiltzen da zifratu eta deszifratzeko.</p> <p>Python adibidea (PyCryptodome):</p> <pre><code>from Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\nfrom Crypto.Util.Padding import pad, unpad\nimport base64\n\ndef zifratu(mezua, gakoa=None):\n    if gakoa is None:\n        gakoa = get_random_bytes(32)  # 256 bit-eko gakoa\n\n    # Sortu ausazko hasieratze-vektorea (IV)\n    iv = get_random_bytes(16)\n\n    # Sortu zifratzailea\n    cipher = AES.new(gakoa, AES.MODE_CBC, iv)\n\n    # Zifratu mezua (paddatu behar da 16 byte-ko blokeetarako)\n    mezua_ordokitua = pad(mezua.encode('utf-8'), AES.block_size)\n    testu_zifratua = cipher.encrypt(mezua_ordokitua)\n\n    # Itzuli base64 formatuan (IV + testu zifratua)\n    return base64.b64encode(iv + testu_zifratua).decode('utf-8')\n\ndeszifratu(mezua_zifratua, gakoa):\n    try:\n        # Deskodetu base64\n        datuak = base64.b64decode(mezua_zifratua)\n\n        # Atera IV eta testu zifratua\n        iv = datuak[:16]\n        testu_zifratua = datuak[16:]\n\n        # Sortu zifratzailea\n        cipher = AES.new(gakoa, AES.MODE_CBC, iv)\n\n        # Deszifratu eta kendu padding-a\n        mezua_ordokitua = cipher.decrypt(testu_zifratua)\n        mezua = unpad(mezua_ordokitua, AES.block_size).decode('utf-8')\n\n        return mezua\n    except Exception as e:\n        print(f\"Errorea deszifratzean: {e}\")\n        return None\n\n# Adibidea\ngakoa = get_random_bytes(32)  # Gorde seguruan gako hau!\nmezua = \"Hau sekretu bat da!\"\n\n# Zifratu\nmezua_zifratua = zifratu(mezua, gakoa)\nprint(f\"Zifratua: {mezua_zifratua}\")\n\n# Deszifratu\ndeszifratua = deszifratu(mezua_zifratua, gakoa)\nprint(f\"Deszifratua: {deszifratua}\")\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#2-zifraketa-asimetrikoa-rsa","title":"2. Zifraketa asimetrikoa (RSA)","text":"<p>Gako pribatu/publiko bikotea erabiltzen du.</p> <p>Python adibidea (cryptography):</p> <pre><code>from cryptography.hazmat.primitives.asymmetric import rsa, padding\nfrom cryptography.hazmat.primitives import serialization, hashes\n\ndef sortu_gakoak():\n    # Sortu gako pribatua\n    pribatua = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=4096\n    )\n\n    # Atera gako publikoa\n    publikoa = pribatua.public_key()\n\n    return pribatua, publikoa\n\ndef zifratu_rsa(mezua, gako_publicoa):\n    # Zifratu gako publikoarekin\n    testu_zifratua = gako_publicoa.encrypt(\n        mezua.encode('utf-8'),\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n    return testu_zifratua\n\ndeszifratu_rsa(testu_zifratua, gako_pribatua):\n    # Deszifratu gako pribatuarekin\n    mezua = gako_pribatua.decrypt(\n        testu_zifratua,\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n    return mezua.decode('utf-8')\n\n# Adibidea\npribatua, publikoa = sortu_gakoak()\nmezua = \"Hau ere sekretu bat da!\"\n\n# Zifratu\ntestu_zifratua = zifratu_rsa(mezua, publikoa)\nprint(f\"Zifratua: {testu_zifratua.hex()}\")\n\n# Deszifratu\ndeszifratua = deszifratu_rsa(testu_zifratua, pribatua)\nprint(f\"Deszifratua: {deszifratua}\")\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#datuak-transferitzerakoan-tlshttps","title":"Datuak transferitzerakoan (TLS/HTTPS)","text":""},{"location":"datu_babesa/datu_sentikorrak/#nola-konfiguratu-https-nodejs-n-express","title":"Nola konfiguratu HTTPS Node.js-n (Express)","text":"<pre><code>const https = require('https');\nconst fs = require('fs');\nconst express = require('express');\n\nconst app = express();\n\n// Konfiguratu segurtasun-neurriak\napp.use(helmet());\n\n// HSTS (HTTP Strict Transport Security)\napp.use(helmet.hsts({\n  maxAge: 31536000, // 1 urte\n  includeSubDomains: true,\n  preload: true\n}));\n\n// Beste segurtasun-headerrak\napp.use(helmet.frameguard({ action: 'deny' }));\napp.use(helmet.xssFilter());\napp.use(helmet.noSniff());\n\n// Irakurri SSL/TLS gakoak\nconst options = {\n  key: fs.readFileSync('path/to/private.key'),\n  cert: fs.readFileSync('path/to/certificate.crt'),\n  // Aukera gehigarriak\n  minVersion: 'TLSv1.2',\n  ciphers: [\n    'ECDHE-ECDSA-AES256-GCM-SHA384',\n    'ECDHE-RSA-AES256-GCM-SHA384',\n    // ...\n  ].join(':')\n};\n\n// Abiarritu HTTPS zerbitzaria\nhttps.createServer(options, app).listen(443, () =&gt; {\n  console.log('HTTPS zerbitzaria 443 portuan entzuten...');\n});\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#datuak-gordetzeko-aholkuak","title":"Datuak gordetzeko aholkuak","text":""},{"location":"datu_babesa/datu_sentikorrak/#1-ez-gorde-datu-sentikorrik-behar-ez-baduzu","title":"1. Ez gorde datu sentikorrik behar ez baduzu","text":"<ul> <li>Ez gorde pasahitzak, baizik eta hash egindako bertsioak</li> <li>Ez gorde kreditu-txartel zenbakiak behar ez baduzu</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#2-datuen-minimizazioa","title":"2. Datuen minimizazioa","text":"<ul> <li>Biltzean: Biltzeko baimena duzun datu minimoa baino ez bildu</li> <li>Gordean: Beharrezkoak diren datuak soilik gorde</li> <li>Iraungitzean: Datuak ezabatu epearen amaieran</li> </ul>"},{"location":"datu_babesa/datu_sentikorrak/#3-datuak-maskatu-erakusteko","title":"3. Datuak maskatu erakusteko","text":"<pre><code>function maskatuZenbakiKontua(zenbakiKontua) {\n  if (!zenbakiKontua) return '';\n  const luzeera = zenbakiKontua.length;\n  if (luzeera &lt;= 4) return zenbakiKontua;\n  return '*'.repeat(luzeera - 4) + zenbakiKontua.slice(-4);\n}\n\n// Adibidea\nconsole.log(maskatuZenbakiKontua('1234567890123456')); // \"************3456\"\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#tokenen-kudeaketa-segurua","title":"Tokenen kudeaketa segurua","text":""},{"location":"datu_babesa/datu_sentikorrak/#jwt-tokenak-seguru-gordetzeko","title":"JWT tokenak seguru gordetzeko","text":"<p>Adibidea (React + localStorage erabiliz - ez da gomendagarria):</p> <pre><code>// Tokena gordetzeko modu OSO SINPLEA (ez da segurua)\nconst gordeTokena = (token) =&gt; {\n  try {\n    localStorage.setItem('token', token);\n  } catch (error) {\n    console.error('Ezin izan da tokena gorde:', error);\n  }\n};\n</code></pre> <p>Hobea (HTTP-only Cookie erabiliz, zerbitzarian):</p> <pre><code>// Zerbitzariaren erantzuna (Node.js + Express)\nres.cookie('token', token, {\n  httpOnly: true,\n  secure: true, // HTTPS bidez bakarrik\n  sameSite: 'strict',\n  maxAge: 24 * 60 * 60 * 1000 // 1 egun\n});\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#tokenen-iraungipena","title":"Tokenen iraungipena","text":"<pre><code>// Token bat sortzean (Node.js)\nfunction sortuTokena(erabiltzailea) {\n  return jwt.sign(\n    {\n      sub: erabiltzailea.id,\n      iat: Math.floor(Date.now() / 1000), // Noiz sortua\n      exp: Math.floor(Date.now() / 1000) + (60 * 60), // 1 ordu barru iraungiko da\n      // Beste eremuak...\n    },\n    process.env.JWT_SECRET,\n    { algorithm: 'HS256' }\n  );\n}\n\n// Bezeroan tokena egiaztatu (React)\nuseEffect(() =&gt; {\n  const egiaztatuTokena = async () =&gt; {\n    try {\n      const erantzuna = await fetch('/api/egiaztatu-tokena', {\n        credentials: 'include' // Cookie bidaltzeko\n      });\n\n      if (!erantzuna.ok) {\n        // Tokena baliogabea da, erabiltzailea deskonektatu\n        await deskonektatu();\n      }\n    } catch (error) {\n      console.error('Errorea tokena egiaztatzean:', error);\n    }\n  };\n\n  // Egiaztatu tokena noizbehinka\n  const interval = setInterval(egiaztatuTokena, 5 * 60 * 1000); // 5 minutero\n\n  return () =&gt; clearInterval(interval);\n}, []);\n</code></pre>"},{"location":"datu_babesa/datu_sentikorrak/#ariketa-praktikoa","title":"Ariketa praktikoa","text":"<ol> <li>Inplementatu zifraketa simetrikoa datu sentikorrak gordetzeko</li> <li>Konfiguratu HTTPS zure proiektuan</li> <li>Sortu tokenen kudeaketa sistema bat HTTP-only cookie-kin</li> <li>Egiaztatu zure webgunearen segurtasun-neurriak (helmet, CSP, etb.)</li> </ol>"},{"location":"datu_babesa/datu_sentikorrak/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>API seguruak eta autentifikazioa</li> <li>Atzera itzuli aurreko atalera</li> </ul>"},{"location":"datu_babesa/tresnak/","title":"3.3 Segurtasun-tresna praktikoak","text":""},{"location":"datu_babesa/tresnak/#garapen-segurua-devsecops","title":"Garapen Segurua (DevSecOps)","text":""},{"location":"datu_babesa/tresnak/#1-sast-static-application-security-testing","title":"1. SAST (Static Application Security Testing)","text":"<p>ESLint segurtasun-pluginarekin (JavaScript/TypeScript)</p> <pre><code># Instalatu beharrezko paketeak\nnpm install --save-dev eslint eslint-plugin-security\n</code></pre> <p>.eslintrc.js konfigurazioa:</p> <pre><code>module.exports = {\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:security/recommended\"\n  ],\n  \"plugins\": [\"security\"],\n  \"rules\": {\n    \"security/detect-buffer-noassert\": \"error\",\n    \"security/detect-child-process\": \"error\",\n    \"security/detect-disable-mustache-escapes\": \"error\",\n    \"security/detect-eval-with-expression\": \"error\",\n    \"security/detect-no-csrf-before-method-override\": \"error\",\n    \"security/detect-non-literal-fs-filename\": \"warn\",\n    \"security/detect-non-literal-regexp\": \"error\",\n    \"security/detect-non-literal-require\": \"warn\",\n    \"security/detect-object-injection\": \"off\", // Piztu behar bada, kode asko aldatu behar da\n    \"security/detect-possible-timing-attacks\": \"error\",\n    \"security/detect-pseudoRandomBytes\": \"error\",\n    \"security/detect-unsafe-regex\": \"error\"\n  }\n};\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-dast-dynamic-application-security-testing","title":"2. DAST (Dynamic Application Security Testing)","text":"<p>OWASP ZAP erabiliz (Docker bidez):</p> <pre><code># OWASP ZAP abiarazi Docker-en\n# Web Interfazea: http://localhost:8080\n# API: http://localhost:8081\n\ndocker run -u zap -p 8080:8080 -p 8081:8081 \\\n  -i owasp/zap2docker-stable zap-webswing.sh\n\n# Automatizatutako eskaneatzea\n# (ZAPen komando-lerro bidez)\ndocker run -i owasp/zap2docker-stable zap-baseline.py \\\n  -t https://zure-aplikazioa.eus \\\n  -r test-report.html \\\n  -l INFO \\\n  -a  # Aktiboki probatu arazoak\n</code></pre>"},{"location":"datu_babesa/tresnak/#3-sca-software-composition-analysis","title":"3. SCA (Software Composition Analysis)","text":"<p>Dependabot konfigurazioa GitHub-en (<code>.github/dependabot.yml</code>):</p> <pre><code>version: 2\nupdates:\n  # JavaScript/Node.js eguneraketak\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    # Segurtasun eguneraketak berehala exekutatu\n    pull-request-branch-name:\n      separator: \"-\"\n    labels:\n      - \"dependencies\"\n      - \"javascript\"\n    # OpenSSF Scorecard bidezko segurtasun-azterketa\n    open-pull-requests-limit: 10\n    # Segurtasun-bulletin baten araberako eguneraketak\n    vulnerability-alerts:\n      enabled: true\n\n  # Docker irudiak eguneratu\n  - package-ecosystem: \"docker\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    labels:\n      - \"dependencies\"\n      - \"docker\"\n</code></pre>"},{"location":"datu_babesa/tresnak/#segurtasun-probak-automatzeko","title":"Segurtasun-probak automatzeko","text":""},{"location":"datu_babesa/tresnak/#1-nikto-web-vulnerability-scanner","title":"1. Nikto (Web Vulnerability Scanner)","text":"<pre><code># Instalazioa (Ubuntu/Debian)\nsudo apt install nikto\n\n# Oinarrizko erabilera\nnikto -h https://zure-aplikazioa.eus\n\n# Erreportea HTML formatuan gordetzeko\nnikto -h https://zure-aplikazioa.eus -o nikto_scan.html -F htm\n\n# Proxy bat erabiliz (adibidez, OWASP ZAP)\nnikto -h https://zure-aplikazioa.eus -useproxy http://localhost:8080\n\n# Cookie bat gehitu saioari jarraitzeko\nnikto -h https://zure-aplikazioa.eus -C \"sessionid=abc123; secure;\"\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-nmap-sareko-eskanerra","title":"2. Nmap (Sareko eskanerra)","text":"<pre><code># Portu irekiak aurkitu\nnmap -sS -p- -T4 -v zure-zerbitzaria.eus\n\n# Zerbitzuak eta bertsioak detektatu\nnmap -sV -sC -p 80,443,8080 zure-zerbitzaria.eus\n\n# NSE (Nmap Scripting Engine) erabiliz\nnmap --script=http-security-headers,http-csrf,http-sql-injection -p 80,443 zure-zerbitzaria.eus\n\n# Irteera XML formatuan gordetzeko\nnmap -oX scan_results.xml -sV -sC zure-zerbitzaria.eus\n</code></pre>"},{"location":"datu_babesa/tresnak/#kodearen-analisi-estatikoa","title":"Kodearen Analisi Estatikoa","text":""},{"location":"datu_babesa/tresnak/#1-sonarqube-sonarlint","title":"1. SonarQube + SonarLint","text":"<p>SonarQube konfigurazioa (Docker):</p> <pre><code># docker-compose.yml\nversion: '3'\nservices:\n  sonarqube:\n    image: sonarqube:community\n    ports:\n      - \"9000:9000\"\n    environment:\n      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true\n      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar\n      - SONAR_JDBC_USERNAME=sonar\n      - SONAR_JDBC_PASSWORD=sonar\n    volumes:\n      - sonarqube_data:/opt/sonarqube/data\n      - sonarqube_extensions:/opt/sonarqube/extensions\n    depends_on:\n      - db\n\n  db:\n    image: postgres:13\n    environment:\n      - POSTGRES_USER=sonar\n      - POSTGRES_PASSWORD=sonar\n      - POSTGRES_DB=sonar\n    volumes:\n      - postgresql_data:/var/lib/postgresql/data\n      - postgresql_data_db:/var/lib/postgresql/data/db\n\nvolumes:\n  sonarqube_data:\n  sonarqube_extensions:\n  postgresql_data:\n  postgresql_data_db:\n</code></pre> <p>Sonar-scanner erabilera (proiektu bakoitzean):</p> <pre><code># sonar-project.properties fitxategia\nsonar.projectKey=proiektuaren-izena\nsonar.projectName=\"Proiektuaren Izena\"\nsonar.projectVersion=1.0\nsonar.sources=.\nsonar.sourceEncoding=UTF-8\nsonar.exclusions=**/node_modules/**,**/*.spec.js\nsonar.javascript.lcov.reportPaths=coverage/lcov.info\n\n# Exekutatu analisia\ndocker run --rm \\\n  -v \"$(pwd):/usr/src\" \\\n  -w /usr/src \\\n  sonarsource/sonar-scanner-cli\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-snyk-dependency-vulnerabilities","title":"2. Snyk (Dependency Vulnerabilities)","text":"<pre><code># Instalatu Snyk CLI\nnpm install -g snyk\n\n# Erabiltzailearekin autentifikatu\nsnyk auth\n\n# Proiektu baten analisia egiteko\nsnyk test\n\n# Monitoretik jarraitu dependientziak\nsnyk monitor\n\n# Docker irudi baten analisia\nsnyk container test ubuntu:latest\n\n# IaC (Terraform, CloudFormation) analisia\nsnyk iac test\n</code></pre>"},{"location":"datu_babesa/tresnak/#segurtasun-probak-automatzeko-cicd","title":"Segurtasun-probak automatzeko (CI/CD)","text":""},{"location":"datu_babesa/tresnak/#github-actions-adibidea","title":"GitHub Actions adibidea","text":"<pre><code># .github/workflows/security-scan.yml\nname: Security Scan\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main, develop ]\n  schedule:\n    - cron: '0 0 * * 0' # Astero igandero\n\njobs:\n  security-scan:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    # Node.js ingurunea konfiguratu\n    - name: Use Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18.x'\n        cache: 'npm'\n\n    # Instalatu dependientziak\n    - name: Install dependencies\n      run: npm ci\n\n    # Exekutatu testak\n    - name: Run tests\n      run: npm test\n\n    # Exekutatu linterra\n    - name: Run linter\n      run: npx eslint . --ext .js,.jsx,.ts,.tsx\n\n    # Snyk bidezko segurtasun-azterketa\n    - name: Run Snyk to check for vulnerabilities\n      uses: snyk/actions/node@master\n      env:\n        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\n      with:\n        args: --severity-threshold=high\n\n    # OWASP ZAP eskaneatzea (Docker bidez)\n    - name: OWASP ZAP Scan\n      uses: zaproxy/action-baseline@v0.6.0\n      with:\n        target: 'https://zure-aplikazioa.eus'\n        rules_file_name: '.zap/rules.tsv'\n        risk: '1,2,3'  # 1: Informazioa, 2: Arriskutsua, 3: Kritikoa\n        fail_action: true  # Erroreak badaude, workflowa apurtu\n\n    # Trivy bidezko irudiaren analisia (Docker)\n    - name: Run Trivy vulnerability scanner\n      uses: aquasecurity/trivy-action@master\n      with:\n        image-ref: 'zure-irudia:etiqueta'\n        format: 'table'\n        exit-code: '1'\n        ignore-unfixed: true\n        severity: 'CRITICAL'\n</code></pre>"},{"location":"datu_babesa/tresnak/#segurtasun-neurriak-probatzeko-laborategiak","title":"Segurtasun-neurriak probatzeko laborategiak","text":""},{"location":"datu_babesa/tresnak/#1-owasp-juice-shop","title":"1. OWASP Juice Shop","text":"<pre><code># Docker bidez abiarazi\ndocker run --rm -p 3000:3000 bkimminich/juice-shop\n\n# Eta ondoren nabigatu http://localhost:3000\n</code></pre>"},{"location":"datu_babesa/tresnak/#2-dvwa-damn-vulnerable-web-application","title":"2. DVWA (Damn Vulnerable Web Application)","text":"<pre><code># Docker bidez abiarazi\ndocker run --rm -it -p 80:80 vulnerables/web-dvwa\n\n# Eta ondoren nabigatu http://localhost\n# Saio-hasierako lehenetsitako kredentzialak:\n# Erabiltzailea: admin\n# Pasahitza: password\n</code></pre>"},{"location":"datu_babesa/tresnak/#3-webgoat","title":"3. WebGoat","text":"<pre><code># Docker bidez abiarazi\ndocker run -it -p 8080:8080 -p 9090:9090 -e TZ=Europe/Madrid \\\n  -e WEBGOAT_ADMIN_PASSWORD=ChangeMe! \\\n  --name webgoat webgoat/goatandwolf:v8.2.2\n\n# Eta ondoren nabigatu http://localhost:8080/WebGoat\n</code></pre>"},{"location":"datu_babesa/tresnak/#ariketa-praktikoa","title":"Ariketa praktikoa","text":"<ol> <li>Konfiguratu GitHub Actions zure proiektuarentzat segurtasun-eskaneatze automatikoak egiteko</li> <li>Exekutatu OWASP ZAP zure aplikazio lokalaren kontra eta konpondu aurkitutako arazoak</li> <li>Erabili Snyk edo Dependabot zure proiektuaren dependientzien segurtasuna aztertzeko</li> <li>Instalatu SonarLint zure IDEan eta konpondu aurkitutako arazoak</li> </ol>"},{"location":"datu_babesa/tresnak/#bukatzeko-aholkuak","title":"Bukatzeko aholkuak","text":"<ul> <li>Segurtasuna ez da produktu bat, prozesu bat da: Eguneratu eta aztertu zure aplikazioa etengabe</li> <li>\"Secure by Default\": Segurtasuna hasieratik txertatu garapenean</li> <li>Gutxieneko pribilegioen printzipioa: Erabiltzaileek eta prozesuek baimen minimoak izan ditzatela</li> <li>Neurri anitzak: Ez fidatu defentsa bakarrean, erabili hainbat geruza</li> <li>Eduki segurtasun-politika argi bat: Zure taldeak jakin behar du zer den onartzen den eta zer ez</li> </ul>"},{"location":"datu_babesa/tresnak/#baliabide-gehiago","title":"Baliabide gehiago","text":"<ul> <li>OWASP Cheat Sheet Series</li> <li>Mozilla Web Security Guidelines</li> <li>PortSwigger Web Security Academy</li> <li>Snyk Learn</li> </ul>"},{"location":"datu_babesa/tresnak/#amaiera","title":"Amaiera","text":"<p>Zorionak! Zibersegurtasunaren oinarriak eta tresna praktikoak ikasi dituzu web garapenean. Gogoan izan segurtasuna ez dela helmuga bat, bidaia bat baizik. Jarri ezazu ikasitakoa praktikan eta mantendu zure gaitasunak eguneratzen!</p>"},{"location":"eraso_defentsak/autentifikazioa/","title":"2.2 Autentifikazio eta saioen segurtasuna","text":""},{"location":"eraso_defentsak/autentifikazioa/#pasahitzen-kudeaketa-segurua","title":"Pasahitzen kudeaketa segurua","text":""},{"location":"eraso_defentsak/autentifikazioa/#zergatik-ez-da-nahikoa-pasahitzak-zuzenean-gordetzea","title":"Zergatik ez da nahikoa pasahitzak zuzenean gordetzea?","text":"<ul> <li>Datuak lapurtuz gero, erabiltzaileen pasahitzak eskuragarri egongo lirateke</li> <li>Erabiltzaileek pasahitz berbera erabiltzen dute hainbat zerbitzutan</li> <li>Legezko erabiltzaileak ere ezingo lituzke pasahitzak ikusi</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#pasahitzak-hasheatu","title":"Pasahitzak hasheatu","text":""},{"location":"eraso_defentsak/autentifikazioa/#bcrypt-erabiliz-python","title":"bcrypt erabiliz (Python)","text":"<pre><code>import bcrypt\n\ndef sortu_pasahitza(pasahitza: str) -&gt; bytes:\n    # Gatza sortu ausaz\n    gatza = bcrypt.gensalt()\n    # Pasahitza hasheatu\n    hash_ondarra = bcrypt.hashpw(pasahitza.encode('utf-8'), gatza)\n    return hash_ondarra\n\ndef egiaztatu_pasahitza(pasahitza: str, gordetako_hash: bytes) -&gt; bool:\n    # Pasahitza egiaztatu\n    return bcrypt.checkpw(pasahitza.encode('utf-8'), gordetako_hash)\n\n# Adibidea\nerabiltzaile_pasahitza = \"nire_pasahitz_sekretua\"\nhash_ondarra = sortu_pasahitza(erabiltzaile_pasahitza)\nprint(f\"Gordetako hasha: {hash_ondarra.decode()}\")\n\n# Egiaztatu\ndoitu = egiaztatu_pasahitza(\"pasahitz_okerra\", hash_ondarra)\nprint(f\"Pasahitz okerra: {doitu}\")  # False\n\ndoitu = egiaztatu_pasahitza(erabiltzaile_pasahitza, hash_ondarra)\nprint(f\"Pasahitz zuzena: {doitu}\")  # True\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#gatza-salt-zergatik-da-garrantzitsua","title":"Gatza (Salt) zergatik da garrantzitsua?","text":"<ul> <li>Pasahitz berdinak hash desberdinak sortzen ditu</li> <li>Eraso aurrez kalkulatuek (rainbow tables) ez dute funtzionatuko</li> <li>Erasotzaileak ezin du hash berdina duten bi erabiltzaile identifikatu</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#saioen-kudeaketa-segurua","title":"Saioen kudeaketa segurua","text":""},{"location":"eraso_defentsak/autentifikazioa/#cookie-seguruak-konfiguratu","title":"Cookie seguruak konfiguratu","text":"<p>Express.js adibidea:</p> <pre><code>const session = require('express-session');\nconst crypto = require('crypto');\n\n// Sortu ausazko gako sekretua sesioen sinadurak egiteko\nconst SESSION_SECRET = crypto.randomBytes(32).toString('hex');\n\napp.use(session({\n    secret: SESSION_SECRET,\n    name: 'sessionId',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n        secure: true,      // HTTPS bidez bakarrik bidali\n        httpOnly: true,    // JavaScript-ek ezin du atzitu\n        sameSite: 'lax',   // CSRF erasoetatik babesteko\n        maxAge: 1000 * 60 * 60 * 24, // 1 egun\n        domain: '.zure-domeinua.eus'\n    }\n}));\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#jwt-json-web-tokens","title":"JWT (JSON Web Tokens)","text":"<p>Token bat sortu eta egiaztatu (Node.js):</p> <pre><code>const jwt = require('jsonwebtoken');\nconst crypto = require('crypto');\n\n// Ingurune-aldagaitik kargatu edo sortu gako sekretu sendo bat\nconst JWT_SECRET = process.env.JWT_SECRET || crypto.randomBytes(64).toString('hex');\n\n// Token bat sortu\nfunction sortuTokena(erabiltzailea) {\n    return jwt.sign(\n        {\n            sub: erabiltzailea.id,\n            email: erabiltzailea.email,\n            // Ez sartu informazio sentikorrik\n        },\n        JWT_SECRET,\n        { \n            expiresIn: '1h',\n            issuer: 'ZureAplikazioa',\n            audience: 'zureaplikazioa.eus'\n        }\n    );\n}\n\n// Token bat egiaztatu\nfunction egiaztatuTokena(token) {\n    try {\n        const decoded = jwt.verify(token, JWT_SECRET, {\n            issuer: 'ZureAplikazioa',\n            audience: 'zureaplikazioa.eus'\n        });\n        return { baliozkoa: true, edukia: decoded };\n    } catch (error) {\n        return { \n            baliozkoa: false, \n            errorea: error.message \n        };\n    }\n}\n\n// Adibidea\nconst erabiltzailea = { id: 123, email: 'erabiltzailea@adibidea.eus' };\nconst token = sortuTokena(erabiltzailea);\nconsole.log('Sortutako tokena:', token);\n\nconst emaitza = egiaztatuTokena(token);\nconsole.log('Tokena egiaztatuta:', emaitza);\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#autentifikazio-anizkoitza-mfa","title":"Autentifikazio Anizkoitza (MFA)","text":""},{"location":"eraso_defentsak/autentifikazioa/#zergatik-erabili-mfa","title":"Zergatik erabili MFA?","text":"<ul> <li>Pasahitzak konprometitu arren, sarbidea eragozten du</li> <li>\"Zerbait dakizu\" + \"Zerbait duzu\" + \"Zara zu\"</li> </ul>"},{"location":"eraso_defentsak/autentifikazioa/#mfa-motak","title":"MFA motak:","text":"<ol> <li>Aplikazio autentifikatzaileak (Google Authenticator, Authy, Microsoft Authenticator)</li> <li>SMS kodea (ez da hain segurua SIM swap delako erasoengatik)</li> <li>Hardware gakoak (YubiKey, Titan Security Key)</li> <li>Beharrezko aplikazioak (banku aplikazioak, Google Prompt)</li> </ol>"},{"location":"eraso_defentsak/autentifikazioa/#otp-one-time-password-inplementazioa","title":"OTP (One-Time Password) inplementazioa","text":"<pre><code>import pyotp\nimport qrcode\n\ndef konfiguratuMFA(erabiltzaile_izena):\n    # Sortu gako sekretu berria erabiltzailearentzat\n    gakoa = pyotp.random_base32()\n\n    # Sortu OTP URI bat QR kodea sortzeko\n    totp_uri = pyotp.totp.TOTP(gakoa).provisioning_uri(\n        name=erabiltzaile_izena,\n        issuer_name='Zure Aplikazioa'\n    )\n\n    # Sortu QR kodea\n    qr = qrcode.make(totp_uri)\n    qr.save(f'mfa_{erabiltzaile_izena}.png')\n\n    return gakoa\n\ndef egiaztatuKodea(gakoa, erabiltzailearen_kodea):\n    totp = pyotp.TOTP(gakoa)\n    return totp.verify(erabiltzailearen_kodea)\n\n# Erabilera adibidea\nerabiltzaile_izena = \"pertsona@adibidea.eus\"\ngakoa = konfiguratuMFA(erabiltzaile_izena)\nprint(f\"Eskaneatu QR kodea Google Authenticatorrekin: mfa_{erabiltzaile_izena}.png\")\n\n# Erabiltzaileak kodea sartu duela simulatu\nerabiltzailearen_kodea = input(\"Sartu zure autentifikazio aplikazioko kodea: \")\nif egiaztatuKodea(gakoa, erabiltzailearen_kodea):\n    print(\"Autentifikazioa arrakastatsua!\")\nelse:\n    print(\"Kode okerra, saiatu berriro.\")\n</code></pre>"},{"location":"eraso_defentsak/autentifikazioa/#saioen-segurtasunerako-aholkuak","title":"Saioen segurtasunerako aholkuak","text":"<ol> <li>Saio-identifikatzaile luze eta ausazkoak erabili</li> <li>Saioak iraungitzeko denbora-tarte egokiak ezarri</li> <li>Saio bakarra baimendu erabiltzaileko</li> <li>Saioa ixteko aukera ezarri</li> <li>Erabiltzailearen ohiko kokapena eta nabigatzailea monitorizatu</li> <li>Saio aktiboak erakutsi erabiltzaileari</li> </ol>"},{"location":"eraso_defentsak/autentifikazioa/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Sarbide-kontrola eta konfigurazio segurua</li> <li>Atzera itzuli aurreko atalera</li> </ul>"},{"location":"eraso_defentsak/injekzioak/","title":"2.1 Injekzioen aurkako defentsak","text":""},{"location":"eraso_defentsak/injekzioak/#sql-injekzioa","title":"SQL injekzioa","text":""},{"location":"eraso_defentsak/injekzioak/#zer-da-sql-injekzioa","title":"Zer da SQL injekzioa?","text":"<p>SQL injekzioa datu-basearen kontsulta bat aldatzen duen eraso mota bat da, erabiltzailearen sarrera egoki balioztatu gabe kontsultan txertatzen denean gertatzen dena.</p>"},{"location":"eraso_defentsak/injekzioak/#nola-funtzionatzen-du","title":"Nola funtzionatzen du?","text":"<pre><code>-- Erabiltzailearen sarrera: ' OR '1'='1\n-- Kontsulta originala:\nSELECT * FROM users WHERE username = '' AND password = 'hasia'\n\n-- Injekzioaren ondoren:\nSELECT * FROM users WHERE username = '' OR '1'='1' AND password = 'hasia'\n-- '1'='1' beti egia denez, kontsultak erabiltzaile guztiak itzuliko ditu\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#nola-ekidin","title":"Nola ekidin?","text":""},{"location":"eraso_defentsak/injekzioak/#1-parametro-kontsultak-erabili-prepared-statements","title":"1. Parametro kontsultak erabili (Prepared Statements)","text":"<p>Python adibidea (SQLite):</p> <pre><code>import sqlite3\n\ndef login_segurua(erabiltzailea, pasahitza):\n    conn = sqlite3.connect('datu_basea.db')\n    cursor = conn.cursor()\n\n    # Parametro kontsulta erabiliz\n    kontsulta = \"SELECT * FROM users WHERE username = ? AND password = ?\"\n    cursor.execute(kontsulta, (erabiltzailea, pasahitza))\n\n    erabiltzailea = cursor.fetchone()\n    conn.close()\n    return erabiltzailea\n</code></pre> <p>PHP adibidea (PDO):</p> <pre><code>&lt;?php\n$erabiltzailea = $_POST['erabiltzailea'];\n$pasahitza = $_POST['pasahitza'];\n\n$pdo = new PDO('mysql:host=localhost;dbname=nire_db', 'erabiltzailea', 'pasahitza');\n$stmt = $pdo-&gt;prepare('SELECT * FROM users WHERE username = :erabiltzailea AND password = :pasahitza');\n$stmt-&gt;execute(['erabiltzailea' =&gt; $erabiltzailea, 'pasahitza' =&gt; $pasahitza]);\n$erabiltzailea = $stmt-&gt;fetch();\n?&gt;\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#xss-cross-site-scripting","title":"XSS (Cross-Site Scripting)","text":""},{"location":"eraso_defentsak/injekzioak/#xss-motak","title":"XSS motak","text":"<ol> <li>Ispatutako XSS (Reflected)</li> <li>Erasotzaileak biktimari URL maltzur bat bidaltzen dio</li> <li>Webguneak erantzunean script-a islatzen du</li> <li> <p>Script-a biktimaren nabigatzailean exekutatzen da</p> </li> <li> <p>Gordetako XSS (Stored)</p> </li> <li>Script maltzurra datu-basean gordetzen da</li> <li>Erabiltzaileak orria kargatzen duenean exekutatzen da</li> <li> <p>Kalte handiagoak eragin ditzake</p> </li> <li> <p>DOM XSS</p> </li> <li>Nabigatzailean gertatzen da soilik</li> <li>Dokumentuaren objektu-eredua (DOM) aldatzen du</li> </ol>"},{"location":"eraso_defentsak/injekzioak/#nola-ekidin-xss-a","title":"Nola ekidin XSS-a?","text":""},{"location":"eraso_defentsak/injekzioak/#1-irteera-kodifikatu","title":"1. Irteera kodifikatu","text":"<p>JavaScript (Node.js):</p> <pre><code>const escapeHtml = (text) =&gt; {\n  const map = {\n    '&amp;': '&amp;amp;',\n    '&lt;': '&amp;lt;',\n    '&gt;': '&amp;gt;',\n    '\"': '&amp;quot;',\n    \"'\": '&amp;#x27;',\n    \"/\": '&amp;#x2F;'\n  };\n  return text.replace(/[&amp;&lt;&gt;\"'/]/g, m =&gt; map[m]);\n};\n\n// Erabilera\nconst sarreraArriskutsua = \"&lt;script&gt;kodea&lt;/script&gt;\";\ndocument.getElementById('izena').innerHTML = escapeHtml(sarreraArriskutsua);\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#2-erabili-seguruak-diren-api-ak","title":"2. Erabili seguruak diren API-ak","text":"<p>JavaScript segurua:</p> <pre><code>// Txarra\ndocument.getElementById('izena').innerHTML = erabiltzailearenSarrera;\n\n// Hobea\ndocument.getElementById('izena').textContent = erabiltzailearenSarrera;\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#3-content-security-policy-csp-erabili","title":"3. Content Security Policy (CSP) erabili","text":"<pre><code>Content-Security-Policy: default-src 'self'; script-src 'self' https://apis.google.com\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#beste-injekzio-batzuk","title":"Beste injekzio batzuk","text":""},{"location":"eraso_defentsak/injekzioak/#komando-injekzioa","title":"Komando-injekzioa","text":"<p>Adibide arriskutsua (Python):</p> <pre><code>import os\n\ndef ping_helbidea(helbidea):\n    # Arriskutsua: erabiltzailearen sarrerak komandoak exekuta ditzake\n    os.system(f\"ping -c 4 {helbidea}\")\n</code></pre> <p>Segurua:</p> <pre><code>import subprocess\n\ndef ping_helbidea_segurua(helbidea):\n    # Segurua: parametro modura bidaltzen da\n    subprocess.run(['ping', '-c', '4', helbidea], check=True)\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#ldap-injekzioa","title":"LDAP injekzioa","text":"<p>Adibide arriskutsua:</p> <pre><code>import ldap\n\ndef autentifikatu(erabiltzailea, pasahitza):\n    # Arriskutsua: sarrera garbitu gabe\n    kontsulta = f\"(uid={erabiltzailea})(userPassword={pasahitza})\"\n    # LDAP kontsulta egin\n</code></pre> <p>Segurua:</p> <pre><code>import ldap\nfrom ldap.filter import escape_filter_chars\n\ndef autentifikatu_segurua(erabiltzailea, pasahitza):\n    # Karaktere bereziak iragazita\n    erab_garbitua = escape_filter_chars(erabiltzailea)\n    pass_garbitua = escape_filter_chars(pasahitza)\n    kontsulta = f\"(uid={erab_garbitua})(userPassword={pass_garbitua})\"\n    # LDAP kontsulta egin\n</code></pre>"},{"location":"eraso_defentsak/injekzioak/#ariketa-praktikoa","title":"Ariketa praktikoa","text":"<ol> <li>Sortu web orri sinple bat erabiltzaile-izen eta pasahitzarekin</li> <li>Inplementatu SQL injekzioaren aurkako babesa</li> <li>Gehitu XSS babesa sarrera eta irteeran</li> <li>Probatu zure babesak sarrera arriskutsuekin</li> </ol>"},{"location":"eraso_defentsak/injekzioak/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Autentifikazio eta saioen segurtasuna</li> <li>Atzera itzuli aurreko atalera</li> </ul>"},{"location":"eraso_defentsak/sarbide_kontrola/","title":"2.3 Sarbide-kontrola eta konfigurazio segurua","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#sarbide-kontrol-motak","title":"Sarbide-kontrol motak","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#1-rbac-role-based-access-control","title":"1. RBAC (Role-Based Access Control)","text":"<p>Erabiltzaileak rol ezberdinetan sailkatzen dira eta rol bakoitzak baimen multzo bat du.</p> <p>Adibidea (Node.js + Express):</p> <pre><code>// Rolen definizioa\nconst ROLES = {\n  ADMIN: 'admin',\n  EDITOR: 'editor',\n  USER: 'user',\n  BIDALI: 'bidali'\n};\n\n// Baimenen definizioa rol bakoitzarentzat\nconst PERMISSIONS = {\n  [ROLES.ADMIN]: ['irakurri', 'idatzi', 'ezabatu', 'aldatu', 'bidali'],\n  [ROLES.EDITOR]: ['irakurri', 'idatzi', 'bidali'],\n  [ROLES.USER]: ['irakurri', 'bidali'],\n  [ROLES.BIDALI]: ['bidali']\n};\n\n// Middleware baimenak egiaztatzeko\nfunction checkPermission(ekintza) {\n  return (req, res, next) =&gt; {\n    const erabiltzaileRola = req.user.rola; // Autentifikazio middlewaretik dator\n\n    if (!erabiltzaileRola || !PERMISSIONS[erabiltzaileRola] || \n        !PERMISSIONS[erabiltzaileRola].includes(ekintza)) {\n      return res.status(403).json({ error: 'Ez duzu baimenik ekintza hau egiteko' });\n    }\n    next();\n  };\n}\n\n// Erabilera adibidea\napp.delete('/api/erabiltzaileak/:id', \n  authenticateUser, // Lehenik autentifikatu\n  checkPermission('ezabatu'), // Ondoren baimena egiaztatu\n  (req, res) =&gt; {\n    // Kodea erabiltzailea ezabatzeko\n  }\n);\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#2-abac-attribute-based-access-control","title":"2. ABAC (Attribute-Based Access Control)","text":"<p>Erabiltzailearen eta baliabidearen atributuen arabera erabakitzen du sarbidea.</p> <p>Adibidea (Python + Policy):</p> <pre><code>from functools import wraps\n\ndef check_access(erabiltzailea, baliabidea, ekintza):\n    # Adibide sinple bat\n    if ekintza == \"irakurri\" and baliabidea.jabea == erabiltzailea.id:\n        return True\n    if ekintza == \"editatu\" and erabiltzailea.rola == \"admin\":\n        return True\n    if ekintza == \"bidali\" and erabiltzailea.egoera == \"aktiboa\":\n        return True\n    return False\n\ndef access_required(ekintza):\n    def decorator(f):\n        @wraps(f)\n        def decorated_function(*args, **kwargs):\n            erabiltzailea = get_jwt_identity()\n            baliabidea = get_baliabidea(kwargs['balibide_id'])\n\n            if not check_access(erabiltzailea, baliabidea, ekintza):\n                return {\"error\": \"Ez duzu baimenik\"}, 403\n\n            return f(*args, **kwargs)\n        return decorated_function\n    return decorator\n\n# Erabilera adibidea\n@app.route('/dokumentua/&lt;int:dokumentu_id&gt;', methods=['PUT'])\n@jwt_required()\n@access_required('editatu')\ndef editatu_dokumentua(dokumentu_id):\n    # Dokumentua editatzeko kodea\n    pass\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#idor-insecure-direct-object-reference-erasoak","title":"IDOR (Insecure Direct Object Reference) erasoak","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#zer-da-idor","title":"Zer da IDOR?","text":"<p>Erabiltzaileak baliabideetarako sarbide zuzena duela uste duen baina benetan ez duenean gertatzen den segurtasun akatsa.</p>"},{"location":"eraso_defentsak/sarbide_kontrola/#nola-prebenitu","title":"Nola prebenitu?","text":"<ol> <li>Balidatu sarbidea baliabide bakoitzeko</li> </ol> <pre><code>// Adibidea Express.js-n\napp.get('/api/erabiltzaileak/:id', async (req, res) =&gt; {\n  try {\n    const erabiltzailea = await Erabiltzailea.findById(req.params.id);\n\n    // Egiaztatu erabiltzaileak baimena duen baliabidea ikusteko\n    if (req.user.id !== erabiltzailea.id &amp;&amp; req.user.rola !== 'admin') {\n      return res.status(403).json({ error: 'Ez duzu baimenik' });\n    }\n\n    res.json(erabiltzailea);\n  } catch (error) {\n    res.status(404).json({ error: 'Erabiltzailea ez da aurkitu' });\n  }\n});\n</code></pre> <ol> <li>Erabili UUID edo token seguruak ID sekuentzialen ordez</li> </ol> <pre><code>import uuid\nfrom django.db import models\n\nclass Dokumentua(models.Model):\n    # ID sekretua erabiliz\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    izena = models.CharField(max_length=255)\n    edukia = models.TextField()\n    jabea = models.ForeignKey(User, on_delete=models.CASCADE)\n\n# URL adibidea: /dokumentuak/3F2504E0-4F89-11D3-9A0C-0305E82C3301/\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#konfigurazio-segurua","title":"Konfigurazio segurua","text":""},{"location":"eraso_defentsak/sarbide_kontrola/#ingurunearen-araberako-konfigurazioa","title":"Ingurunearen araberako konfigurazioa","text":"<p>config/development.js</p> <pre><code>module.exports = {\n  // Garapenerako ezarpenak\n  database: {\n    host: 'localhost',\n    port: 5432,\n    name: 'nireapp_garapena',\n    user: 'postgres'\n  },\n  server: {\n    port: 3000,\n    debug: true,\n    cors: {\n      origin: ['http://localhost:8080']\n    }\n  },\n  auth: {\n    jwtSecret: 'garapeneko_giltza_bakarra',\n    passwordSaltRounds: 10\n  }\n};\n</code></pre> <p>config/production.js</p> <pre><code>module.exports = {\n  // Produkzioko ezarpenak\n  database: {\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    name: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD\n  },\n  server: {\n    port: process.env.PORT || 3000,\n    debug: false,\n    cors: {\n      origin: ['https://zureaplikazioa.eus']\n    }\n  },\n  auth: {\n    jwtSecret: process.env.JWT_SECRET,\n    passwordSaltRounds: 12\n  }\n};\n</code></pre>"},{"location":"eraso_defentsak/sarbide_kontrola/#konfigurazio-seguruaren-printzipioak","title":"Konfigurazio seguruaren printzipioak","text":"<ol> <li>Ez bidali konfigurazio sentikorrak koderik</li> <li>Erabili ingurune aldagaiak</li> <li> <p>Ez bidali <code>.env</code> fitxategia kontrol bertsioetara</p> </li> <li> <p>Segurtasun neurriak indartu <code>http    # HTTP headers seguruak (adibidea Express.js-ra)    X-Content-Type-Options: nosniff    X-Frame-Options: DENY    X-XSS-Protection: 1; mode=block    Content-Security-Policy: default-src 'self'    Strict-Transport-Security: max-age=31536000; includeSubDomains</code></p> </li> <li> <p>Erregistro seguruak (Logging)</p> </li> <li>Ez erregistratu datu sentikorrik (pasahitzak, tokenak, kredentzialak)</li> <li>Erabili maila egokiak (DEBUG, INFO, WARN, ERROR)</li> <li>Birbideratu erroreak monitorizaziorako sistemetara</li> </ol>"},{"location":"eraso_defentsak/sarbide_kontrola/#ariketa-praktikoa","title":"Ariketa praktikoa","text":"<ol> <li>Sortu RBAC sistema bat zure aplikazioan</li> <li>Inplementatu IDOR babesak zure APIetan</li> <li>Konfiguratu ingurune desberdinak (garapena, produkzioa)</li> <li>Egiaztatu zure HTTP headerek seguruak diren</li> </ol>"},{"location":"eraso_defentsak/sarbide_kontrola/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Datu sentikorren kudeaketa segurua</li> <li>Atzera itzuli aurreko atalera</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/","title":"1.3 Web ahultasun arrunten ikuspegi orokorra (OWASP Top 10)","text":""},{"location":"oinarriak_mehatxuak/owasp_top10/#zer-da-owasp-top-10","title":"Zer da OWASP Top 10?","text":"<p>OWASP (Open Web Application Security Project) erakundeak web aplikazioetako 10 arrisku kritikoen zerrenda eguneratzen du. 2021eko bertsioa da egungoa, baina uda honetan edo udazkenean berrizteko asmoa dute.</p> <p>OWASP Top 10</p> <p></p> <p>Aurreko irudian 2017 eta 2021-ren arteko ezberdintasunak ikus daitezke.</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#1-sarbide-kontrol-hauskorrak-broken-access-control","title":"1. Sarbide-kontrol hauskorrak (Broken Access Control)","text":"<p>Erabiltzaileek soilik baimendutako ekintzak bakarrik egin ditzaten mugatzea huts egiten duenean gertatzen da. OWASP Top 10 - Broken Access Control</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak","title":"Adibideak","text":"<ul> <li>Baimenik gabeko fitxategi pribatura sartzea</li> <li>Beste erabiltzaileen datuak editatzea</li> <li>Administrazio-funtzioetarako sarbidea izatea baimenik gabe</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa","title":"Prebentzioa","text":"<ul> <li>Sarbide-kontrola aplikatu lehentasunez</li> <li>\"Baimenik ez\" jarrerarekin hasi</li> <li>Erabiltzaile-zerbitzari aldean sarbidea egiaztatu</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak","title":"Erronkak","text":"<ul> <li>Broken Access Control</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#2-zifraketa-akatsak-cryptographic-failures","title":"2. Zifraketa-akatsak (Cryptographic Failures)","text":"<p>Datuak zifratzeko erabiltzen diren ahultasunak edo akatsak. OWASP Top 10 - Cryptographic Failures</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_1","title":"Adibideak","text":"<ul> <li>Datuak zifratu gabe transmititzea</li> <li>Zifratze ahula erabiltzea (MD5, SHA1, DES...)</li> <li>Gako pribatuen kudeaketa txarra</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_1","title":"Prebentzioa","text":"<ul> <li>Erabili indarrean dauden zifratze estandarrak (AES, RSA...)</li> <li>HTTPS erabili beti</li> <li>Gakoak modu seguruan gorde</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_1","title":"Erronkak","text":"<ul> <li>Cryptographic Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#3-injekzioa-injection","title":"3. Injekzioa (Injection)","text":"<p>Injekzioa gaur egungo web-aplikazioen segurtasunerako arrisku larrienetakoa da. Erasotzaileak datu maltzurrak sartzen ditu aplikazio batek interpretatzen dituen komando edo kontsulta batean. Horrela, aplikazioaren kontrola hartu, datu pertsonalak eskuratu edo datu-basea manipula dezake. OWASP Top 10 - Injection</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_2","title":"Adibideak","text":"<ul> <li>SQL Injekzioa (SQL Injection): </li> </ul> <p>Hau da injekzio-eraso ohikoena. Datu-baseetan eragiten du.</p> <pre><code>-- Adibidez: Erabiltzailearen sarrera: ' OR '1'='1' --\n\n-- SQL kontsulta:\n\nSELECT * FROM users WHERE username = '' OR '1'='1' -- AND password = '...'\n\n-- Aurreko SQL-ean geratuko dena izango da guk sartutako kodearen ondoren dagoen guztia ez dela exekutatuko.\n</code></pre> <ul> <li>OS Komando Injekzioa (OS Command Injection): </li> </ul> <p>OS Komando Injekzioa ez da nabigatzailean gertatzen, baizik eta zerbitzarian. Erasoa egiteko, erasotzaileak webgunearen bidez lortzen du zerbitzariaren sistema eragilean komandoak sartzea eta exekutatzea.</p> <pre><code>-- Adibidez:\nping 127.0.0.1 ; ls -l\n\n-- Imajinatu web-aplikazio batek formulario bat duela, non erabiltzaileak IP helbide bat sartzen duen. Aplikazioak, atzealdean, sistema eragilearen ping komandoa exekutatzen du, helbidea eskuragarri dagoen egiaztatzeko.\nEmandako adibidearekin, ping egin ostean, ls -l exekutatzean, Unix eta Linux sistemetan, komando honek uneko direktorioko fitxategiak eta karpetak zerrendatzen ditu.\n\n</code></pre> <ul> <li>LDAP Injekzioa (LDAP Injection): </li> </ul> <p>LDAP protokoloa (Lightweight Directory Access Protocol) sareko direktorio-zerbitzuak atzitzeko eta kudeatzeko erabiltzen den protokolo estandar bat da. LDAP-en funtzio nagusia autentifikazioa eta baimenen kudeaketa zentralizatzea da.</p> <p>LDAP Injekzioa ez da nabigatzailean gertatzen, baizik eta zerbitzarian. Erasoa egiteko, erasotzaileak webgunearen bidez lortzen du zerbitzariaren sistema eragilean komandoak sartzea eta exekutatzea.</p> <pre><code>-- Adibidez:\n*)(uid=*))(|(uid=*\n\n-- Imajinatu web-aplikazio batek erabiltzaileen autentifikazioa LDAP zerbitzari baten bidez egiten duela. Erabiltzaileak bere UID (erabiltzaile-identifikatzailea) eta pasahitza sartzen ditu, eta aplikazioak LDAP kontsulta bat eraikitzen du horrekin.\n- Jatorrizko LDAP kontsulta (normalean ezkutuan):\n(uid=erabiltzailearen_sarrera)(userPassword=pasahitza)\n- Erasoa: Erasotzaileak LDAP sintaxiaren karaktere bereziak (adibidez, *, (, |) erabiltzen ditu kontsultaren logika aldatzeko. Horrek SQL Injekzioaren ' OR '1'='1' adibidearen antzeko efektua sortzen du.\n\n*)(uid=*))(|(uid=*\n\n- Lortutako kontsulta:\n(uid=*)(uid=*))(|(uid=*)(userPassword=pasahitza)\n\n- Ondorioa: Kontsulta hau, LDAP-ek aztertuta, hainbat baldintza sortzen ditu. Horrek uid eta pasahitz-baldintza originala saihesten du, eta erabiltzaile guztien datuak itzultzen ditu edo autentifikazioa gainditzen du. Erasotzaileak lortzen du LDAP zerbitzarian saioa hastea, pasahitza jakin gabe, edo erabiltzaile-informazio sentikorra lortzea.\n\n</code></pre>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_2","title":"Prebentzioa","text":"<ul> <li>Parametro kontsultak erabili (prepared statements)</li> <li>ORM seguruak erabiliz, SQL kontsulta zuzenak saihestu</li> <li>Sarrera guztiak balioztatu eta garbitu</li> <li>Pribilegio minimoen printzipioa aplikatu</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_2","title":"Erronkak","text":"<ul> <li>Injection</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#4-diseinu-ez-segurua-insecure-design","title":"4. Diseinu ez segurua (Insecure Design)","text":"<p>Segurtasun-arazoak diseinu-fasean sortzen direnean, eta ez bakarrik inplementazioan. OWASP Top 10 - Insecure Design</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_3","title":"Adibideak","text":"<ul> <li>Segurtasun-irizpiderik gabeko diseinua</li> <li>Mehatxuen eredurik ez</li> <li>Abusuzko erabileraren aurkako mekanismorik ez</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_3","title":"Prebentzioa","text":"<ul> <li>Segurtasuna hasieratik kontuan hartu diseinuan</li> <li>Mehatxuen ereduak egin</li> <li>Abusu-kasuak identifikatu eta prebenitu</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_3","title":"Erronkak","text":"<ul> <li>Insecure Design</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#5-konfigurazio-oker-eta-ahula-security-misconfiguration","title":"5. Konfigurazio oker eta ahula (Security Misconfiguration)","text":"<p>Segurtasun-konfigurazio egokirik ez izatea edo konfigurazio okerrak izatea. OWASP Top 10 - Security Misconfiguration</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_4","title":"Adibideak","text":"<ul> <li>Konfigurazio lehenetsiak aldatu gabe uztea</li> <li>Mezuen erakuspen detaileak erakustea</li> <li>Segurtasun-neurri osagarriak aktibatu gabe uztea</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_4","title":"Prebentzioa","text":"<ul> <li>Konfigurazio seguru bat ezarri</li> <li>Automatizatu konfigurazioa</li> <li>Eguneratu eta berrikusi konfigurazioa maiz</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_4","title":"Erronkak","text":"<ul> <li>Security Misconfiguration</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#6-konponente-bulnerable-eta-zaharkituak-vulnerable-and-outdated-components","title":"6. Konponente bulnerable eta zaharkituak (Vulnerable and Outdated Components)","text":"<p>Hirugarreneko liburutegi eta osagaietan dauden ahultasunak. OWASP Top 10 - Vulnerable and Outdated Components</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_5","title":"Adibideak","text":"<ul> <li>Ezagutzen diren ahultasunen berri ez izatea</li> <li>Eguneraketarik gabe uztea</li> <li>Osagai ez seguruak erabiltzea</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_5","title":"Prebentzioa","text":"<ul> <li>Osagaiak eguneratu maiz</li> <li>Ez erabili osagai zaharkiturik</li> <li>Eskaneatu osagaiak ahultasunen bila</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_5","title":"Erronkak","text":"<ul> <li>Vulnerable and Outdated Components</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#7-autentifikazio-akatsak-identification-and-authentication-failures","title":"7. Autentifikazio-akatsak (Identification and Authentication Failures)","text":"<p>Erabiltzaileak identifikatu eta autentifikatzeko arazoak. OWASP Top 10 - Identification and Authentication Failures</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_6","title":"Adibideak","text":"<ul> <li>Pasahitz ahulak onartzea</li> <li>Saio-kudeaketa txarra</li> <li>Autentifikazio-funtzionaltasun ahulak</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_6","title":"Prebentzioa","text":"<ul> <li>Inplementatu autentifikazio anizkoitza (2FA)</li> <li>Erabili pasahitz-politika sendoak</li> <li>Egiaztatu saio-identifikatzaileak</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_6","title":"Erronkak","text":"<ul> <li>Identification and Authentication Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#8-datuak-eta-datuen-osotasunaren-galera-software-and-data-integrity-failures","title":"8. Datuak eta datuen osotasunaren galera (Software and Data Integrity Failures)","text":"<p>Datuen osotasuna eta jatorriaren ziurtasuna arriskuan jartzen direnean. OWASP Top 10 - Software and Data Integrity Failures</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_7","title":"Adibideak","text":"<ul> <li>Kode edo datu aldaketa baimenik gabe</li> <li>Erabiltzailearen sarrerak egiaztatu gabe</li> <li>Sinadura digitalik gabeko kodeak</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_7","title":"Prebentzioa","text":"<ul> <li>Erabili sinadura digitalak</li> <li>Egiaztatu kode eta datuen jatorria</li> <li>Inplementatu osotasunaren egiaztapena</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_7","title":"Erronkak","text":"<ul> <li>Software and Data Integrity Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#9-segurtasunaren-monitorizazio-falta-security-logging-and-monitoring-failures","title":"9. Segurtasunaren monitorizazio falta (Security Logging and Monitoring Failures)","text":"<p>Erasoak detektatu eta erantzuteko gaitasun falta. OWASP Top 10 - Security Logging and Monitoring Failures</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_8","title":"Adibideak","text":"<ul> <li>Erregistroak gordetzeko konfiguraziorik ez</li> <li>Alertarik ez jasotzea</li> <li>Erantzun-prozedurarik ez izatea</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_8","title":"Prebentzioa","text":"<ul> <li>Ezarri erregistro-sistema egokia</li> <li>Konfiguretu alerta automatikoak</li> <li>Planifikatu erantzun-prozedurak</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_8","title":"Erronkak","text":"<ul> <li>Security Logging and Monitoring Failures</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#10-zerbitzariaren-aldeko-eskaera-faltsuketa-server-side-request-forgery-ssrf","title":"10. Zerbitzariaren aldeko eskaera-faltsuketa (Server-Side Request Forgery - SSRF)","text":"<p>Erasotzaileak zerbitzariak barne-sarean egindako eskaerak kontrolatzen dituenean. OWASP Top 10 - Server-Side Request Forgery</p>"},{"location":"oinarriak_mehatxuak/owasp_top10/#adibideak_9","title":"Adibideak","text":"<ul> <li>Barne-zerbitzuei eskaerak egitea</li> <li>Konfigurazio-informazioa eskuratzea</li> <li>Barne-sareko baliabideetara sartzea</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#prebentzioa_9","title":"Prebentzioa","text":"<ul> <li>Egiaztatu eta iragazi sarrerako URL guztiak</li> <li>Erabili zerrenda zuri bat onartutako helbideentzako</li> <li>Ezarri konexio-mugen eta denbora-mugen politika</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#erronkak_9","title":"Erronkak","text":"<ul> <li>Server-Side Request Forgery</li> </ul>"},{"location":"oinarriak_mehatxuak/owasp_top10/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Injekzioen aurkako defentsak</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/","title":"1.1 Web Garapenean Zibersegurtasunaren Sarrera","text":""},{"location":"oinarriak_mehatxuak/sarrera/#zergatik-da-garrantzitsua-zibersegurtasuna-web-garapenean","title":"Zergatik da garrantzitsua zibersegurtasuna web garapenean?","text":"<p>Web aplikazioak gaur egun enpresen eta erabiltzaileen datu sentikorren biltegi gisa funtzionatzen dute. Zibersegurtasuna ezartzeak honako hauek babesten laguntzen du:</p> <ul> <li>Erabiltzaileen datu pribatuen konfidentzialtasuna</li> <li>Webgunearen osotasuna eta erabilgarritasuna</li> <li>Enpresaren ospea eta konfiantza</li> <li>Lege betetzea (GDPR, CCPA, etab.)</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#garatzailearen-rola-shift-left-ikuspegia","title":"Garatzailearen rola, \"Shift Left\" ikuspegia","text":"<p>Tradizionalki, segurtasuna garapen prozesuaren amaieran kontuan hartzen zen. \"Shift Left\" ikuspegiak segurtasuna garapenaren hasieran txertatzea proposatzen du:</p> <ul> <li>Aurretiko prebentzioa: Akatsak sortu aurretik konpontzea</li> <li>Kostu murrizketa: Arazoen aurrekariak aurkitzea merkeagoa da</li> <li>Kode kalitate hobea: Segurtasuna kodearen zati integrala bihurtzen da</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#cia-triangelua-konfidentzialtasuna-osotasuna-erabilgarritasuna","title":"CIA triangelua (Konfidentzialtasuna, Osotasuna, Erabilgarritasuna)","text":"<p>Zibersegurtasunaren oinarrizko printzipioak:</p> <pre><code>1. Konfidentzialtasuna (Confidentiality)\n\n- Sarbide kontrol egokia\n- Datuen zifraketa\n- Baimendutako pertsonek soilik sarbidea\n\n2. Osotasuna (Integrity)\n\n- Datuen zehaztasuna eta osotasuna bermatzeko mekanismoak\n- Ez-legezko aldaketak detektatzeko sistemak\n- Transakzioen jarraipena\n\n3. Erabilgarritasuna (Availability)\n\n- Zerbitzuaren jarraitasuna\n- Erasoak eta huts-egoerak kudeatzeko gaitasuna\n- Errendimendu egokia\n</code></pre>"},{"location":"oinarriak_mehatxuak/sarrera/#mehatxua-ahultasuna-arriskua","title":"Mehatxua, ahultasuna, arriskua","text":"<p>Zibermehatxuak, ahultasunak eta arriskuak ulertzea funtsezkoa da:</p> <ul> <li> <p>Mehatxua (Threat): sistemaren aurkako kalte bat eragin dezakeen gertakari edo aktore bat.</p> </li> <li> <p>Ahultasuna (Vulnerability): sistemaren puntu ahul bat, erasotzaile batek aprobetxa dezakeena.</p> </li> <li> <p>Arriskua (Risk): mehatxu batek ahultasun bat erabiliz kalte bat eragiteko probabilitatea eta inpaktua.</p> </li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#diseinu-segurua","title":"Diseinu segurua","text":""},{"location":"oinarriak_mehatxuak/sarrera/#segurtasuna-diseinutik-security-by-design","title":"Segurtasuna Diseinutik (Security by Design)","text":"<p>Segurtasuna ez da gehigarri bat, baizik eta diseinuaren parte izan behar du. Horretarako hurrengo puntuak aplikatu behar dira beti:</p> <ul> <li>Segurtasuna garapenaren hasieran txertatzea</li> <li>Oinarrizko segurtasun printzipioak aplikatzea</li> <li>Defektuz seguruak diren konfigurazioak erabiltzea</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#sakoneko-defentsa-defense-in-depth","title":"Sakoneko Defentsa (Defense in Depth)","text":"<p>Segurtasunaren babes sistema geruza ezberdinetan antolatzea da, bakoitzak bere babesa eskaintzen duena. Horrela, geruza batek huts egiten badu, hurrengoak oraindik babesa eskain dezake eta erasoa geldiarazi edo mugatu daiteke. Horretarako: </p> <ul> <li>Segurtasun geruza anitzak ezartzea</li> <li>Hainbat defentsa mekanismo erabiltzea</li> <li>Erasotzaileak geruza bat gainditzen badu, beste batek geldiarazteko aukera izatea</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#pribilegio-gutxiena-least-privilege","title":"Pribilegio Gutxiena (Least Privilege)","text":"<p>Erabiltzaile edo prozesu batek egin behar duena bakarrik egiteko baimena izatea. Hau da: </p> <ul> <li>Erabiltzaile eta prozesuei beraien eginkizuna betetzeko behar duten baimen minimoak ematea</li> <li>Administratzaile baimenak mugatzea</li> <li>Baimenen kudeaketa aktiboa</li> </ul>"},{"location":"oinarriak_mehatxuak/sarrera/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Webaren funtzionamenduaren oinarriak</li> <li>Web ahultasun arrunten ikuspegi orokorra</li> </ul>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/","title":"Web Hacking-erako sarrera","text":""},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#walking-an-application","title":"Walking An Application","text":"<p>Ikusiko dugu web aplikazio bat eskuz nola aztertu segurtasun arazoak aurkitzeko, nabigatzailearen tresna integratuak soilik erabiliz. Gehienetan, segurtasun tresna automatizatuek eta scriptek ahultasun potentzial eta informazio erabilgarri asko galduko dituzte.</p> <p>Hona hemen gela osoan zehar erabiliko dituzun nabigatzailearen tresna integratuen laburpen labur bat:</p> <ul> <li>Iturria ikusi (View Source): Nabigatzailea erabili webgune baten giza irakurgarria den iturburu-kodea ikusteko.</li> <li>Ikuskatzailea (Inspector): Orrialdeko elementuak nola aztertu eta aldaketak nola egin ikasi, normalean blokeatutako edukia ikusteko.</li> <li>Araztailea (Debugger): Orrialde baten JavaScript-aren fluxua aztertu eta kontrolatu.</li> <li>Sarea (Network): Orrialde batek egiten dituen sare-eskaera guztiak ikusi.</li> </ul>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#exploring-the-website","title":"Exploring The Website","text":"<p>Penetrazio probatzaile gisa, zure rola webgune edo web aplikazio bat aztertzean da ahulak izan daitezkeen ezaugarriak aurkitzea eta horiek ustiatzen saiatzea ahulak diren ala ez ebaluatzeko. Ezaugarri hauek normalean webgunearen erabiltzailearekin elkarrekintzaren bat eskatzen duten zatiak izaten dira. Webgunearen zati interaktiboak aurkitzea hain erraza izan daiteke login formulario bat ikustea bezain erraza, edota webgunearen JavaScript-a eskuz aztertzea bezain konplexua. Hasteko leku bikaina da nabigatzailearekin webgunea esploratzea eta orrialde/area/ezaugarri indibidualak ohar hartzea, bakoitzaren laburpen batekin. Acme IT Support webgunearen azterketa adibide bat honelakoa izango litzateke:</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#orriaren-iturburua-ikustea","title":"Orriaren iturburua ikustea","text":"<p>Webgune bat bisitatzen dugunean, gure nabigatzaileak eskaera bat egiten dio zerbitzariari, eta horrek kode bat itzultzen du: hau da page source edo orrialdearen iturburua. Kode horrek adierazten dio nabigatzaileari zer eduki erakutsi, nola aurkeztu eta nola jokatu behar duen. Iturburuko kodean HTML, CSS eta JavaScript izaten dira:</p> <pre><code>- **HTML** edukia eta egitura adierazteko.\n- **CSS** itxura definitzeko (koloreak, letra-tamaina\u2026).\n- **JavaScript** funtzionaltasun interaktiboak gehitzeko.\n</code></pre> <p>Orrialdearen iturburua begiratzea oso erabilgarria izan daiteke webgune bati buruzko informazio gehiago jasotzeko, batez ere segurtasunari buruzko ikuspuntutik.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#nola-ikusten-dut-orriaren-iturburua","title":"Nola ikusten dut orriaren iturburua?","text":"<p>Page source-a ikusteko modu hauek daude:</p> <pre><code>- Webgune baten gainean saguaren eskuin botoiaz klik eginda, \"Ikusi orriaren iturburua\" (edo antzeko) aukera agertzen da.\n- Nabigatzaileko URLa honela alda daiteke:\n</code></pre> <p>view-source:https://www.adibidea.com     - Nabigatzailearen menuan, \"Developer tools\" edo \"Tresna gehiago\" izeneko ataletan ere aurki daiteke aukera hau.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#ikus-dezagun-jatorrizko-orrialderen-bat","title":"Ikus dezagun jatorrizko orrialderen bat?","text":"<p>Page source-a ikusita, hainbat elementu interesgarri aurki ditzakegu:</p> <pre><code>- Iruzkinak (&lt;!-- ... --&gt;): programatzaileek kodean uzten dituzten oharrak dira. Ez dira orrian agertzen, baina pistak eman ditzakete (adib. orri bat behin-behinekoa dela esatea).\n- Estekak (&lt;a href=\"...\"&gt;): orriko beste atal edo orrialdeetara eramaten gaituzten loturak dira. Batzuetan, ezkutuko estekak ere aurki daitezke.\n- Kanpoko fitxategiak (CSS, JS, irudiak...): HTMLn bidez lotuta egoten dira. Batzuetan, direktorio osoa ikusgai egoten da konfigurazio akatsengatik.\n- Frameworkaren aipamenak: Webgunea framework batekin egina badago, kodean bere izena eta bertsioa ager daitezke. Bertsio zaharra bada, segurtasun arriskuak egon daitezke.\n</code></pre>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#garatzaile-tresnak-developers-tools","title":"Garatzaile Tresnak (Developers Tools)","text":""},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#1-inspektorea","title":"1. Inspektorea","text":"<p>Web-orrian une horretan agertzen denaren \u201cargazki bizia\u201d erakusten du. Orriko iturburu-kodea (HTML) beti ez da berdina, CSS edo JavaScript-ek alda dezakeelako. Inspektoreak benetan zer ikusten ari garen erakusten digu. Elementuak zuzenean alda ditzakezu: testua, koloreak, tamainak\u2026 horrela, akatsak errazago aurkitzen eta konpontzen dira.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#2-debugger","title":"2. Debugger","text":"<p>Orriko JavaScript kodeari pausoz pauso jarraitzeko balioko digu.</p> <p>\u201cBreakpoint\u201d-ak jartzen dira, hau da, kodea geldi dadin nahi dugun puntuan. Horri esker, aldagaiak eta funtzio-deien emaitzak une berean ikus ditzakegu, eta ulertu zergatik gertatzen diren akatsak.</p> <p>Garatzaileen tresnetako panel hau JavaScript arazteko pentsatuta dago, eta berriro ere ezaugarri bikaina da zerbait zergatik ez dabilen funtzionatzen landu nahi duten web garatzaileentzat. Baina sartze-probatzaile gisa, JavaScript kodean sakontzeko aukera ematen digu. Firefox eta Safari nabigatzaileetan ezaugarri honek Debugger du izena, baina Google Chrome nabigatzailean Sources du izena.</p> <p>Laburbilduz, breakpointak menderatzeak bezero-kodearen exekuzioa erabat kontrolatzen du:</p> <ul> <li>Irakurketa: barne aldagaiak eta funtzio \u201cpribatuak\u201d ikusten dituzu.</li> <li>Aldaketa: balio berriak injektatzen dituzu edo funtzionalitateak mozten dituzten kodearen adarrak saihesten dituzu.</li> <li>Birbidaltzea: harrapaketak eta irteerako eskaerak aldatzea.</li> </ul> <p>Hori guztia, segurtasun-ikuskaritzei, pentestei edo arazketa sinpleari aplikatuta, logika-ahultasunak aurkitzeko, sarbide-kontrolak ez egiteko edo garatzaileak zuzenean azaldu nahi izan ez zituen datu sentikorrak aurkitzeko aukera ematen du.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#3-network","title":"3. Network","text":"<p>Garatzailearen tresnen sare-fitxa web orri batek egiten duen kanpoko eskaera bakoitzaren jarraipena egiteko erabil daiteke. Sarea fitxan klik egin eta gero orria freskatzen baduzu, orria eskatzen ari den fitxategi guztiak ikusiko dituzu.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#edukien-aurkikuntza","title":"Edukien Aurkikuntza","text":""},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#zer-da-edukien-aurkikuntza","title":"Zer da edukien aurkikuntza?","text":"<p>Lehenik eta behin, galdetu behar dugu, web aplikazioen segurtasunaren testuinguruan, zer da edukia? Edukia gauza asko izan daiteke, fitxategi bat, bideoa, irudia, segurtasun-kopia, webgunearen eginbidea. Edukien aurkikuntzaz hitz egiten dugunean, ez gara webgune batean ikus ditzakegun gauza nabariez ari; berehala aurkezten ez zaizkigun eta beti sarbide publikora bideratuta ez zeuden gauzez ari gara.</p> <p>Eduki hori izan liteke, adibidez, langileen erabilerarako orriak edo atariak, webgunearen bertsio zaharragoak, babeskopia-fitxategiak, konfigurazio-fitxategiak, administrazio-panelak, etab. Edukiak ezagutzeko hiru modu nagusi daude landuko dugun webgune batean: Eskuz, automatizatua eta OSINT (Open-Source Intelligence).</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#robotstxt","title":"Robots.txt","text":"<p><code>robots.txt</code> fitxategia bilatzaileei zein orri diren eta bilatzaileen emaitzetan erakusteko baimenik ez duten edo bilatzaile zehatzei webgunea guztiz arakatzea debekatzen dien dokumentua da. Ohikoa izan daiteke web gune jakin batzuk mugatzea bilatzaileen emaitzetan ez bistaratzeko. Orrialde hauek administrazio atariak edo webgunearen bezeroentzako fitxategiak izan daitezke. Fitxategi honek webguneko kokapenen zerrenda handia ematen digu, jabeek sartze-probatzaile gisa aurkitzerik nahi ez dutena.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#favicon","title":"Favicon","text":"<p>Favicon nabigatzaileko helbide-barran edo fitxan agertzen den ikono txiki bat da, webgune bat markatzeko erabiltzen dena.</p> <p>Batzuetan, webgune bat eraikitzeko markoak erabiltzen direnean, instalazioaren parte den favicon bat soberan geratzen da, eta webgunearen garatzaileak hau pertsonalizatutako beste batekin ordezkatzen ez badu, horrek pista bat eman diezaguke erabiltzen ari den markoari buruz. OWASPek esparru-ikono komunen datu-base bat ostatatzen du, helburuen favicon-arekin OWASP_favicon_database. Alderatzeko erabil dezakezuna. Behin esparru-pila ezagututa, kanpoko baliabideak erabil ditzakegu hari buruz gehiago jakiteko. Eguneratuago dago beste webgune hau: OWASP_favicon_database </p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#sitemapxml","title":"Sitemap.xml","text":"<p><code>robots.txt</code> fitxategiak ez bezala, bilaketa-motorreko arakatzaileek ikus dezaketena murrizten baitu, <code>sitemap.xml</code> fitxategiak webgunearen jabeak bilatzaile batean zerrendatzea nahi duen fitxategi bakoitzaren zerrenda ematen du.  Horiek, batzuetan, nabigatzeko zailxeagoak diren webguneko eremuak izan ditzakete, edo baita uneko guneak jada erabiltzen ez dituen baina eszenen atzean lanean jarraitzen duten web orri zahar batzuk zerrendatzea ere.</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#http-goiburuak","title":"HTTP Goiburuak","text":"<p>Web-zerbitzariari eskaerak egiten dizkiogunean, zerbitzariak hainbat HTTP goiburu itzultzen ditu. Goiburu horiek, batzuetan, informazio erabilgarria izan dezakete, hala nola webzerbitzariaren softwarea eta, agian, erabiltzen ari den programazio-/script-lengoaia. </p> <p>Beheko adibidean, webzerbitzaria NGINX 1.18.0 bertsioa da eta PHP 7.4.3 bertsioa exekutatzen du. Informazio hori erabiliz, erabiltzen ari diren softwarearen bertsio ahulak aurki genitzake.</p> <p>Saiatu beheko curl komandoa web zerbitzariaren aurka exekutatzen, non -v kommutadoreak verbose modua gaitzen duen, goiburuak aterako dituena (zerbait interesgarria egon daiteke! ).</p>"},{"location":"oinarriak_mehatxuak/web_hacking_sarrera/#framework-stack","title":"Framework Stack","text":"<p>Webgune baten markoa ezarri ondoren, bai aurreko favicon adibidearekin edo orriaren iturburuan pistak bilatuz, hala nola iruzkinak, copyright oharrak edo kredituak, ondoren webgunearen framework-a aurki dezakezu.  Hortik aurrera, softwareari eta beste informazio batzuei buruz gehiago ikasi ahal izango dugu, agian aurkitu dezakegun eduki gehiagora eramanez.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/","title":"1.2 Webaren funtzionamenduaren oinarriak","text":""},{"location":"oinarriak_mehatxuak/web_oinarriak/#sarrera","title":"Sarrera","text":"<p>Webguneen funtzionamendua ulertzea ezinbestekoa da zibersegurtasunaren ikuspegitik. Atal honetan, webguneek nola funtzionatzen duten azalduko dugu, haien osagai nagusiak eta haien arteko komunikazioa.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#webgune-batek-nola-funtzionatzen-duen","title":"Webgune batek nola funtzionatzen duen","text":""},{"location":"oinarriak_mehatxuak/web_oinarriak/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<p>Webgune bat funtzionatzeko hainbat osagai eta prozesu automatizatu elkarlanean aritzen dira. Lehenik, DNS sistema erabiltzen da domeinu bat (adib. google.com) IP helbide batera itzultzeko. Domeinuek hierarkia bat jarraitzen dute (azpidomeinuak, bigarren mailako domeinuak, TLD-ak), eta DNS erregistro ezberdinak (A, AAAA, CNAME, MX, TXT\u2026) informazio mota desberdinak eskaintzen dituzte.</p> <p></p> <p>DNS eskaera bat egiterakoan, lehenik cachea begiratzen da; ondoren, ISParen DNS zerbitzaria, erro zerbitzariak, TLD zerbitzariak eta autoritatezko zerbitzariak aktibatzen dira IP helbidea lortu arte. Eskaeraren erantzunak TTL (Time To Live) du, cachean zenbat denboraz gorde behar den zehazteko.</p> <p></p> <pre><code>    1. Urratsa: Zure Ordenagailua\n    Lehenik bere cache lokalean begiratzen du.  Baliteke duela gutxi webgune hori bisitatu izana eta IP helbidea oroitzea.\n    Emaitza:\n    \u2705 Aurkitzen badu: Zuzenean konektatzen da\n    \u274c Ez badu aurkitzen: Hurrengo urratsera pasatzen da\n\n\n    2. Urratsa: Rekurtsiboko DNS Zerbitzaria\n    Zure Internet hornitzaileak (ISP) ematen duen zerbitzaria (edo zuk aukeratutako bat).\n    Berak ere bere cache lokalean begiratzen du.\n    Adibidez, Google, Facebook, Twitter bezalako webgune ospetsuak maiz bilatu ohi dira, beraz seguruenik hemen aurkituko ditu.\n    Emaitza:\n    \u2705 Aurkitzen badu: Itzultzen dio zure ordenagailuari\n    \u274c Ez badu aurkitzen: Interneten erro-zerbitzarietara joaten da\n\n\n    3. Urratsa: Erro-zerbitzariak (Root DNS)\n    Interneten \"bizkarrezurra\" dira hauek . TLD (.com, .org, .es...) begiratzen dute eta egokiko TLD zerbitzarira bidaltzen zaituzte.\n    Gure adibidean: www.tryhackme.com-en .com ikusten dute eta .com TLD zerbitzarira bidaltzen zaituzte.\n\n    4. Urratsa: TLD Zerbitzaria\n    Domeinuaren autoritatezko zerbitzaria non dagoen esaten du.\n    Adibidez, tryhackme.com domeinuaren autoritatezko zerbitzariak dira:\n    kip.ns.cloudflare.com\n    uma.ns.cloudflare.com\n\n    Bi egoten dira, bat hondatzen bada, bestea erabiltzeko (babeskopia).\n\n    5. Urratsa: Autoritatezko DNS Zerbitzaria\n    Domeinu horren DNS erregistro guztiak gordetzen dituen zerbitzaria.\n    Zer egiten du?\n    Behar den IP helbidea bilatzen du (A erregistroa)\n    Itzultzen du Rekurtsiboko DNS zerbitzarira\n    Rekurtsibokoak bere cache-an gordetzen du etorkizuneko eskaeretarako\n    Azkenean zure ordenagailuari bidaltzen dio\n</code></pre>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#http-xehetasunez","title":"HTTP xehetasunez","text":"<p>IP helbidea lortuta, HTTP edo HTTPS bidezko eskaera egiten da zerbitzarira. </p> <p>Web zerbitzariekin komunikatzeko eta webguneetako datuak transmititzeko arau multzoa da. </p> <p>Mota askotako datuak trasmititu ditzake: </p> <ul> <li>HTML (webgunearen edukia)</li> <li>Irudiak (JPG, PNG, GIF...)</li> <li>Bideoak (MP4, AVI...)</li> <li>Bestelako fitxategiak (PDF, dokumentuak...)</li> </ul> <p>HTTPS bertsioa segurua da eta komunikazioa zifratzen du. </p> <p>HTTP eskaerek goiburuak daramatzate (Host, User-Agent, Cookie...), eta zerbitzariak HTTP erantzuna itzultzen du: egoera kode batekin (200, 404, 500...) eta eduki batekin (HTML, JSON, irudiak...).</p> <p>URL egitura honek hainbat atal ditu: protokoloa, erabiltzailea, ostalaria, ataka, bidea, parametroak eta fragmentua. Eskaeraren arabera, zerbitzariak baliabide jakin bat itzultzen du.</p> <p>Adibide hau hartzen badugu: http://user:password@tryhackme.com:80/view-room?id=1#task3</p> <p></p> <ul> <li>Scheme (Eskema): http zatia da erabili beharreko protokoloa adierazten duena. HTTP, HTTPS edo FTP izan daiteke adibidez.</li> <li>User (Erabiltzailea): user:password zatia da sarbidea behar duten zerbitzuetarako erabiltzaile-izena eta pasahitza. Gaur egun ez da asko erabiltzen ez delako segurua.</li> <li>Host (Ostalaria): tryhackme.com zatia da zerbitzariaren domeinu-izena edo IP helbidea. google.com edo 192.168.1.1 bezalako zerbait izan daiteke.</li> <li>Port (Ataka): 80 zatia da zerbitzariaren ataka zenbakia. HTTP-rentzat 80 da lehenetsita, eta HTTPS-rentzat 443. Edozein zenbaki izan daiteke 1etik 65535era.</li> <li>Path (Bidea): /view-room zatia da nahi dugun fitxategiaren edo orriaren kokapena. /blog edo /images/photo.jpg bezalako zerbait izan daiteke.</li> <li>Query String (Kontsulta katea): ?id=1 zatia da informazio gehigarria bidaltzeko. /blog?id=1&amp;category=tech adibidez.</li> <li>Fragment (Zatia): #task3 zatia da orriaren zati zehatz batera joateko. Orri luze batean sekzioa jakin batera salto egiteko erabiltzen da.</li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#http-metodoak","title":"HTTP Metodoak","text":"<p>HTTP metodoak bezeroari bere asmoa adierazteko modu bat dira HTTP eskaera bat egiterakoan. HTTP metodo asko daude, baina ohikoenak azalduko ditugu, nahiz eta gehienetan GET eta POST metodoekin lan egingo duzun.</p> <ul> <li> <p>GET Eskaera Web zerbitzari batetik informazioa lortzeko erabiltzen da. Adibidez, web orri bat ikusteko edo datu batzuk eskuratzeko.</p> </li> <li> <p>POST Eskaera Web zerbitzarira datuak bidaltzeko eta, litekeena da, erregistro berriak sortzeko erabiltzen da. Formulario bat betetzean, adibidez.</p> </li> <li> <p>PUT Eskaera Web zerbitzarira datuak bidaltzeko eta dagoeneko badagoen informazioa eguneratzeko erabiltzen da.</p> </li> <li> <p>DELETE Eskaera Web zerbitzaritik informazioa edo erregistroak ezabatzeko erabiltzen da.</p> </li> </ul>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#http-egoera-kodeak","title":"HTTP Egoera Kodeak","text":"<p>HTTP egoera kodeak zerbitzariak eskaeraren erantzun egoera adierazten ditu. </p> <p>Egoera kode hauek 5 talde ezberdinetan banatu daitezke:</p> <ul> <li>100-199 - Informazio Erantzuna</li> </ul> <p>Hauek bezeroari jakinarazteko bidaltzen dira bere eskeararen lehen zatia onartu dela eta gainerakoa bidaltzen jarraitu behar duela. Kode hauek ez dira jada oso ohikoak.</p> <ul> <li>200-299 - Arrakasta</li> </ul> <p>Kode talde hau bezeroari bere eskaera ondo burutu dela jakinarazteko erabiltzen da.</p> <ul> <li>300-399 - Birbideraketa</li> </ul> <p>Bezeroaren eskaera beste baliabide batera birbideratzeko erabiltzen dira. Hau beste web orri batera edo osorik beste webgune batera izan daiteke.</p> <ul> <li>400-499 - Bezeroaren Erroreak</li> </ul> <p>Bezeroari bere eskaeran errore bat egon dela jakinarazteko erabiltzen da.</p> <ul> <li>500-599 - Zerbitzariaren Erroreak</li> </ul> <p>Zerbitzariaren aldean gertatzen diren erroreentza gordetzen da eta normalean zerbitzariak eskaera kudeatzean arazo handia duela adierazten du.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#goiburuak","title":"Goiburuak","text":"<p>Goiburuak web zerbitzarira eskaerak egiterakoan bidali ditzakezun datu gehigarri txikiak dira. Nahiz eta HTTP eskaera bat egiteko goiburu beharrezkoak ez diren, zaila izango da webgune bat behar bezala ikustea haiek gabe.</p> <p>Ohiko Eskaera Goiburuak</p> <p>Hauek bezeroak (normalean zure nabigatzaileak) zerbitzarira bidaltzen dituen goiburuak dira.</p> <ul> <li>Host: Web zerbitzari batzuek webgune bat baino gehiago ostatatzen dituzte, beraz host goiburua emanez zein nahi duzun esan diezaiokezu, bestela zerbitzariaren webgune lehenetsia jasoko duzu.</li> <li>User-Agent: Zure nabigatzailearen softwarea eta bertsio zenbakia da. Web zerbitzariari zure nabigatzailearen softwarea jakinarazteak webgunea zure nabigatzailearentzat behar bezala formateatzen laguntzen dio, eta HTML, JavaScript eta CSS elementu batzuk nabigatzaile jakin batzuetan bakarrik daude eskuragarri.</li> <li>Content-Length: Formulario batean bezala web zerbitzarira datuak bidaltzerakoan, eduki luzerak web zerbitzariari web eskaeran zenbat datu espero dituen esaten dio. Modu honetan zerbitzariak ziurtatu dezake ez duela daturik galdu.</li> <li>Accept-Encoding: Web zerbitzariari nabigatzaileak zein konpresio metodo onartzen dituen esaten dio, datuak txikiago egin ahal izateko internetez bidaltzerakoan.</li> <li>Cookie: Zure informazioa gogoratzeko zerbitzarira bidaltzen diren datuak (informazio gehiagorako ikusi cookie-en ataza).</li> </ul> <p>Ohiko Erantzun Goiburuak</p> <p>Hauek eskaera baten ondoren zerbitzariak bezeroari itzultzen dizkion goiburuak dira.</p> <ul> <li>Set-Cookie: Gorde beharreko informazioa, eskaera bakoitzean web zerbitzarira itzultzen dena (informazio gehiagorako ikusi cookie-en ataza).</li> <li>Cache-Control: Zenbat denboran gorde behar den erantzunaren edukia nabigatzailearen cache-an berriz eskatu aurretik.</li> <li>Content-Type: Bezeroari zer datu mota itzultzen ari den esaten dio: HTML, CSS, JavaScript, irudiak, PDF, bideoa, etab. Content-type goiburua erabiliz nabigatzaileak dakite nola prozesatu datuak.</li> <li>Content-Encoding: Zer metodo erabili den datuak konprimitzeko internetez bidaltzerakoan txikiago egiteko.</li> </ul> <p>Praktikan, goiburu hauek ikusezinak dira zure nabigatzailearentzat, baina funtsezko informazioa ematen diote zerbitzariari nola kudeatu eskaera. </p> <p>Adibidez, User-Agent goiburuagatik webgune bat ezberdin ikus daiteke mugikor batean eta ordenagailu batean.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#cookie-ak","title":"Cookie-ak","text":"<p>Cookieak zure ordenagailuan gordetzen diren datu txiki bat besterik ez dira. Cookieak gorde egiten dira web zerbitzari batetik \"Set-Cookie\" goiburua jasotzen duzunean. Ondoren egingo dituzun eskaera guztietan, cookie datuak itzuli egingo dizkiozu web zerbitzariari. HTTP estaturik gabea delako (ez ditu zure aurreko eskaerak gogoratzen), cookieak web zerbitzariari zu nor zaren gogorarazteko erabil daitezke, webgunearentzako ezarpen pertsonal batzuk gordetzeko edo webgune hartan lehenago egon zaren jakiteko.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#nola-funtzionatzen-dute-webguneek","title":"Nola funtzionatzen dute webguneek?","text":"<p>Webgune batera joaten zarenean, zure nabigatzaileak (Safari edo Google Chrome bezala) web zerbitzari batera eskaera bat egiten du bisitatzen ari zaren orriaren informazioa eskatuz. Zerbitzariak zure nabigatzaileak orria erakusteko erabiliko dituen datuak bidaltzen ditu erantzunez. Web zerbitzari bat munduko beste nonbait dagoen ordenagailu dedikatu bat besterik ez da, zure eskaerak kudeatzen dituena.</p> <p></p> <p>Frontend vs Backend: Frontend-a bezeroaren nabigatzailean ikusten den zatia da (HTML, CSS, JS), eta Backend-a zerbitzarian exekutatzen dena (PHP, Node.js...). Edukia estatikoa edo dinamikoa izan daiteke, eta zerbitzariak Virtual Host bidez hainbat webgune kudea ditzake.</p> <p>Zure nabigatzaileak web zerbitzari batera eskaera bat egitean beste prozesu asko daude inplikatuta, baina oraingoz ulertu behar duzuna da zerbitzari batera eskaera bat egiten duzula, eta honek zure nabigatzaileak informazioa erakusteko erabiliko dituen datuak bidaltzen dizkizula erantzunez.</p> <p>HTML, CSS eta JavaScript dira web orrien oinarrizko teknologiak. HTML egiturarako, CSS itxurarako eta JavaScript interaktibitatearako erabiltzen dira. Elementuek atributuak dituzte (id, class, src...), eta erabiltzailearen sarrera baliatzen badute, arriskutsuak izan daitezke baldin eta ez badira behar bezala iragazten.</p> <p>Datu sentikorraren esposizioa askotan gertatzen da frontend kodean (komentarioetan, JavaScript fitxategietan...) pasahitz, token edo esteka pribatuak uzten direnean. HTML injekzioa bezalako ahultasunak sor daitezke erabiltzailearen sarrera iragazten ez denean eta zuzenean orrian bistaratzen denean.</p> <p>Nabigatzailearen garatzaile tresnak (Developer Tools) erabilgarriak dira eskaerak, cookie-ak, kodea eta segurtasunaren ikuspegitik informazioa aztertzeko. Inspector, Network, Debugger... panelak eskura ditugu.</p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#beste-osagai-garrantzitsu-batzuk","title":"Beste osagai garrantzitsu batzuk:","text":"<p>CDN-ak</p> <p>CDN bat baliabide bikaina izan daiteke webgune okupatu baten trafikoa murrizteko. Zure webguneko fitxategi estatikoak ostatu ditzakezu, JavaScript, CSS, irudiak, bideoak bezala, eta munduan zehar dauden milaka zerbitzarietan ostatu. Erabiltzaile batek ostatutako fitxategietako bat eskatzen duenean, CDN-ak zein den gertuena dagoen zerbitzaria fisikoki kokatuta kalkulatzen du eta eskaera horra bidaltzen du munduko beste aldearen ordez.</p> <p>Karga banatzaileak</p> <p>Webgune baten trafikoa handia bihurtzen hasten denean edo eskuragarritasun altua behar duen aplikazio bat exekutatzen denean, web zerbitzari bakar bat agian ez da nahikoa izango. </p> <p>Karga banatzaile bat duen webgune bat eskatzen duzunean, karga banatzaileak zure eskaera jasoko du lehenik eta ondoren atzean dauden zerbitzari anitzetan batera bidaliko du. </p> <p>Karga banatzaileak algoritmo ezberdinak erabiltzen ditu zein zerbitzari egokien den eskaera kudeatzeko erabakitzeko. </p> <p>WAF-ak (Web Application Firewall)</p> <p>Eskaera gaiztoak detektatu eta blokeatzeko.</p> <p>Datu-baseak</p> <p>WAF bat zure web eskeararen eta web zerbitzariaren artean kokatzen da; bere helburu nagusia web zerbitzaria hacking edo zerbitzua ukatzeko erasoetatik babestea da. </p> <p></p>"},{"location":"oinarriak_mehatxuak/web_oinarriak/#hurrengo-urratsak","title":"Hurrengo urratsak","text":"<ul> <li>Web ahultasun arrunten ikuspegi orokorra</li> <li>Atzera itzuli hasierara</li> </ul>"},{"location":"es/","title":"Ciberseguridad en el Desarrollo Web","text":"<p>Bienvenido a los apuntes de Ciberseguridad para el Desarrollo Web. Este material aborda los conceptos b\u00e1sicos y las buenas pr\u00e1cticas de la seguridad inform\u00e1tica aplicadas al desarrollo web.</p>"},{"location":"es/#estructura-del-curso","title":"Estructura del curso","text":""},{"location":"es/#1-fundamentos-y-amenazas-comunes","title":"1. Fundamentos y amenazas comunes","text":"<ul> <li>Introducci\u00f3n a la Ciberseguridad en el Desarrollo Web</li> <li>Fundamentos del funcionamiento de la web</li> <li>Visi\u00f3n general de vulnerabilidades comunes (OWASP Top 10)</li> </ul>"},{"location":"es/#2-ataques-y-defensas-basicas","title":"2. Ataques y defensas b\u00e1sicas","text":"<ul> <li>Defensas frente a inyecciones</li> <li>Seguridad de autenticaci\u00f3n y sesiones</li> <li>Control de acceso y configuraci\u00f3n segura</li> </ul>"},{"location":"es/#3-proteccion-de-datos-y-herramientas-practicas","title":"3. Protecci\u00f3n de datos y herramientas pr\u00e1cticas","text":"<ul> <li>Protecci\u00f3n de datos sensibles</li> <li>Seguridad de APIs y dependencias</li> <li>Introducci\u00f3n a herramientas pr\u00e1cticas</li> </ul>"},{"location":"es/#como-usar-estos-apuntes","title":"C\u00f3mo usar estos apuntes","text":"<ul> <li>Utiliza el men\u00fa de la izquierda para acceder a los diferentes temas.</li> <li>En cada tema encontrar\u00e1s teor\u00eda y ejemplos pr\u00e1cticos.</li> <li>Los ejemplos de c\u00f3digo est\u00e1n resaltados para mejorar la legibilidad.</li> </ul>"},{"location":"es/#recursos-adicionales","title":"Recursos adicionales","text":"<ul> <li>OWASP</li> <li>OWASP Top 10</li> <li>OWASP Cheat Sheet Series</li> <li>OWASP Euskal Herria</li> </ul> <p>OWASP Juice Shop</p> <ul> <li>OWASP Juice Shop </li> <li>Juice Shop</li> </ul>"},{"location":"es/#glosario-tecnico","title":"Glosario t\u00e9cnico","text":"Euskera Espa\u00f1ol Ingl\u00e9s Zibersegurtasuna Ciberseguridad Cybersecurity Webgunea Sitio web Website Zerbitzaria Servidor Server Bezeroa Cliente Client Saioa Sesi\u00f3n Session Autentifikazioa Autenticaci\u00f3n Authentication Baimena Autorizaci\u00f3n Authorization Zifratzea Cifrado Encryption Ahultasuna Vulnerabilidad Vulnerability Mehatxua Amenaza Threat"},{"location":"es/ariketak/broken_access_control/","title":"Broken Access Control - Retos","text":"<p>La mayor\u00eda de los sistemas inform\u00e1ticos est\u00e1n dise\u00f1ados para ser usados por varios usuarios. Los privilegios definen lo que un usuario puede hacer. Entre los privilegios comunes est\u00e1n ver y editar archivos, o modificar archivos del sistema.</p> <p>La elevaci\u00f3n de privilegios significa que un usuario obtiene privilegios que no le corresponden. Con ellos podr\u00eda borrar archivos, ver informaci\u00f3n privada o instalar programas no deseados (por ejemplo, virus). Suele ocurrir cuando existe un fallo que permite eludir las medidas de seguridad del sistema o cuando hay suposiciones de dise\u00f1o equivocadas sobre su uso.</p>"},{"location":"es/ariketak/broken_access_control/#retos","title":"Retos","text":""},{"location":"es/ariketak/broken_access_control/#1-reto-miscellaneous-score-board","title":"1. Reto: Miscellaneous &gt; Score Board","text":"<pre><code>Find the carefully hidden 'Score Board' page.\n\nEste ser\u00e1 nuestro primer ejercicio, ya que en la secci\u00f3n Score Board encontraremos el resto de retos.\n</code></pre>"},{"location":"es/ariketak/broken_access_control/#2-reto-whats-the-administrators-email-address","title":"2. Reto: What's the Administrator's email address?","text":"<pre><code>Intentaremos encontrar el correo electr\u00f3nico del usuario administrador.\n</code></pre>"},{"location":"es/ariketak/broken_access_control/#3-reto-what-parameter-is-used-for-searching","title":"3. Reto: What parameter is used for searching?","text":"<pre><code>Al realizar una b\u00fasqueda, \u00bfqu\u00e9 par\u00e1metro se utiliza en la consulta?\n</code></pre>"},{"location":"es/ariketak/broken_access_control/#4-reto-access-the-administration-section-of-the-store","title":"4. Reto: Access the administration section of the store","text":"<pre><code>Igual que con el Score Board, no tenemos un enlace directo a la secci\u00f3n de administraci\u00f3n; tendremos que encontrarla. Hay varias formas posibles de localizarla.\n\nPara ello, conviene revisar un poco de SQL injection.\n</code></pre>"},{"location":"es/ariketak/broken_access_control/#enlaces","title":"Enlaces","text":"<ul> <li>OWASP Broken Access Control</li> <li>PortSwigger - Access Control Vulnerabilities</li> </ul> <p>\u2190 Volver al OWASP Top 10</p>"},{"location":"es/ariketak/cryptographic_failures/","title":"Cryptographic Failures","text":"<p>Primero, es necesario definir las necesidades de protecci\u00f3n de los datos en tr\u00e1nsito y en reposo. Por ejemplo, las contrase\u00f1as, n\u00fameros de tarjetas de cr\u00e9dito, historiales m\u00e9dicos, informaci\u00f3n personal y secretos comerciales requieren protecci\u00f3n adicional, especialmente si est\u00e1n cubiertos por leyes de privacidad.</p> <p>Por todo lo anterior, verifica:</p> <ul> <li> <p>\u00bfSe transmite alg\u00fan dato en texto claro? Esto afecta a protocolos como HTTP, SMTP o FTP. El tr\u00e1fico externo en Internet es muy arriesgado. Revisa tambi\u00e9n el tr\u00e1fico interno (entre balanceadores, servidores web o sistemas de back-end).</p> </li> <li> <p>\u00bfSe est\u00e1n utilizando algoritmos o protocolos criptogr\u00e1ficos obsoletos o d\u00e9biles, ya sea por defecto o en c\u00f3digo heredado?</p> </li> <li> <p>\u00bfSe usan claves criptogr\u00e1ficas por defecto, generadas de forma insegura o reutilizadas? \u00bfFaltan una gesti\u00f3n y rotaci\u00f3n adecuadas de claves? \u00bfAparecen claves en repositorios de c\u00f3digo?</p> </li> <li> <p>\u00bfNo se fuerza el cifrado, por ejemplo, por ausencia de cabeceras/directivas de seguridad (del navegador) adecuadas?</p> </li> <li> <p>\u00bfSe validan correctamente los certificados del servidor y la cadena de confianza?</p> </li> <li> <p>Etc.</p> </li> </ul>"},{"location":"es/ariketak/cryptographic_failures/#retos","title":"Retos","text":""},{"location":"es/ariketak/cryptographic_failures/#1-reto-confidential-document","title":"1. Reto: Confidential Document","text":"<p>Access a confidential document. Intentaremos localizar un documento confidencial. Para ello conviene revisar secciones como privacy, about us y similares en la aplicaci\u00f3n.</p>"},{"location":"es/ariketak/cryptographic_failures/#2-reto-sensitive-data-exposure-exposes-credentials","title":"2. Reto: Sensitive Data Exposure &gt; Exposes credentials","text":"<p>A developer was careless with hardcoding unused, but still valid credentials for a testing account on the client-side.</p>"},{"location":"es/ariketak/cryptographic_failures/#enlaces","title":"Enlaces","text":"<ul> <li>OWASP Cryptographic Failures</li> <li>OWASP Cryptographic Storage Cheat Sheet</li> </ul> <p>\u2190 Volver al OWASP Top 10</p>"},{"location":"es/datu_babesa/api_segurtasuna/","title":"3.2 APIs seguras y Autenticaci\u00f3n","text":""},{"location":"es/datu_babesa/api_segurtasuna/#oauth-20-y-openid-connect","title":"OAuth 2.0 y OpenID Connect","text":""},{"location":"es/datu_babesa/api_segurtasuna/#flujo-de-autorizacion-con-pkce-authorization-code-flow-pkce","title":"Flujo de autorizaci\u00f3n con PKCE (Authorization Code Flow + PKCE)","text":"<pre><code>sequenceDiagram\n    participant Usuario\n    participant App Cliente\n    participant Servidor de Autorizaci\u00f3n\n    participant Servidor de Recursos\n\n    Usuario-&gt;&gt;App Cliente: Intenta iniciar sesi\u00f3n\n    App Cliente-&gt;&gt;Usuario: Redirige a /login\n    Usuario-&gt;&gt;Servidor de Autorizaci\u00f3n: Introduce credenciales\n    Servidor de Autorizaci\u00f3n-&gt;&gt;Usuario: Autenticado, redirige al callback\n    App Cliente-&gt;&gt;Servidor de Autorizaci\u00f3n: Intercambia c\u00f3digo por token\n    Servidor de Autorizaci\u00f3n--&gt;&gt;App Cliente: access_token y refresh_token\n    App Cliente-&gt;&gt;Servidor de Recursos: Petici\u00f3n con access_token\n    Servidor de Recursos--&gt;&gt;App Cliente: Devuelve datos\n</code></pre>"},{"location":"es/datu_babesa/api_segurtasuna/#pkce-en-cliente-react-y-servidor-nodejs","title":"PKCE en cliente (React) y servidor (Node.js)","text":"<p>El c\u00f3digo y ejemplos pueden mantenerse en ingl\u00e9s para claridad t\u00e9cnica.</p> <pre><code>// React: generate code_verifier &amp; code_challenge, redirect to authorize...\n</code></pre> <pre><code>// Node.js: /authorize, /token, verify JWT, etc.\n</code></pre>"},{"location":"es/datu_babesa/api_segurtasuna/#cabeceras-de-seguridad-para-apis","title":"Cabeceras de seguridad para APIs","text":"<p>Ejemplo con Helmet (Node.js):</p> <pre><code>const express = require('express');\nconst helmet = require('helmet');\n\nconst app = express();\napp.use(helmet());\n\napp.use(\n  helmet.contentSecurityPolicy({\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"https://apis.google.com\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n      imgSrc: [\"'self'\", \"data:\"],\n      objectSrc: [\"'none'\"],\n      upgradeInsecureRequests: []\n    }\n  })\n);\n</code></pre>"},{"location":"es/datu_babesa/api_segurtasuna/#buenas-practicas-para-apis","title":"Buenas pr\u00e1cticas para APIs","text":"<ul> <li>Validaci\u00f3n de entradas en servidor</li> <li>Rate limiting</li> <li>Gesti\u00f3n segura de errores (sin filtrar datos sensibles)</li> <li>Logs con niveles y sin secretos</li> </ul> <pre><code>// express-validator, rate-limit, error handler ...\n</code></pre>"},{"location":"es/datu_babesa/api_segurtasuna/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Implementa OAuth 2.0 + PKCE en tu app</li> <li>Configura CSP y prueba en modo Report-Only</li> <li>Escanea tu API con OWASP ZAP o Burp Suite</li> <li>A\u00f1ade rate limiting en endpoints cr\u00edticos</li> </ol>"},{"location":"es/datu_babesa/api_segurtasuna/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Herramientas pr\u00e1cticas y evaluaci\u00f3n de seguridad</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"es/datu_babesa/datu_sentikorrak/","title":"3.1 Gesti\u00f3n y protecci\u00f3n de datos sensibles","text":""},{"location":"es/datu_babesa/datu_sentikorrak/#cifrado-de-datos","title":"Cifrado de datos","text":""},{"location":"es/datu_babesa/datu_sentikorrak/#por-que-es-importante-cifrar","title":"\u00bfPor qu\u00e9 es importante cifrar?","text":"<ul> <li>Si roban los datos, no podr\u00e1n leerlos</li> <li>Asegura la protecci\u00f3n durante la transmisi\u00f3n</li> <li>Cumplimiento normativo (GDPR, HIPAA, etc.)</li> </ul>"},{"location":"es/datu_babesa/datu_sentikorrak/#tipos-de-cifrado","title":"Tipos de cifrado","text":""},{"location":"es/datu_babesa/datu_sentikorrak/#1-cifrado-simetrico-aes","title":"1. Cifrado sim\u00e9trico (AES)","text":"<p>Se usa la misma clave para cifrar y descifrar.</p> <p>Ejemplo en Python (PyCryptodome):</p> <pre><code>from Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\nfrom Crypto.Util.Padding import pad, unpad\nimport base64\n\ndef cifrar(mensaje, clave=None):\n    if clave is None:\n        clave = get_random_bytes(32)  # 256 bits\n    iv = get_random_bytes(16)\n    cipher = AES.new(clave, AES.MODE_CBC, iv)\n    bloqueado = pad(mensaje.encode('utf-8'), AES.block_size)\n    texto_cifrado = cipher.encrypt(bloqueado)\n    return base64.b64encode(iv + texto_cifrado).decode('utf-8')\n\n# ... funci\u00f3n descifrar an\u00e1loga ...\n</code></pre>"},{"location":"es/datu_babesa/datu_sentikorrak/#2-cifrado-asimetrico-rsa","title":"2. Cifrado asim\u00e9trico (RSA)","text":"<p>Usa un par de claves p\u00fablica/privada.</p> <p>Ejemplo en Python (cryptography):</p> <pre><code>from cryptography.hazmat.primitives.asymmetric import rsa, padding\nfrom cryptography.hazmat.primitives import serialization, hashes\n\ndef generar_claves():\n    privada = rsa.generate_private_key(public_exponent=65537, key_size=4096)\n    publica = privada.public_key()\n    return privada, publica\n</code></pre>"},{"location":"es/datu_babesa/datu_sentikorrak/#transmision-de-datos-tlshttps","title":"Transmisi\u00f3n de datos (TLS/HTTPS)","text":""},{"location":"es/datu_babesa/datu_sentikorrak/#configurar-https-en-nodejs-express","title":"Configurar HTTPS en Node.js (Express)","text":"<pre><code>const https = require('https');\nconst fs = require('fs');\nconst express = require('express');\nconst helmet = require('helmet');\n\nconst app = express();\napp.use(helmet());\n\nconst options = {\n  key: fs.readFileSync('path/to/private.key'),\n  cert: fs.readFileSync('path/to/certificate.crt'),\n  minVersion: 'TLSv1.2'\n};\n\nhttps.createServer(options, app).listen(443, () =&gt; {\n  console.log('Servidor HTTPS en 443...');\n});\n</code></pre>"},{"location":"es/datu_babesa/datu_sentikorrak/#consejos-para-almacenamiento","title":"Consejos para almacenamiento","text":"<ul> <li>No almacenes datos sensibles si no es necesario</li> <li>Minimiza datos recopilados y almacenados</li> <li>Enmascara datos al mostrarlos</li> </ul> <pre><code>function enmascararCuenta(n) {\n  if (!n) return '';\n  return '*'.repeat(Math.max(0, n.length - 4)) + n.slice(-4);\n}\n</code></pre>"},{"location":"es/datu_babesa/datu_sentikorrak/#gestion-segura-de-tokens","title":"Gesti\u00f3n segura de tokens","text":"<ul> <li>Prefiere cookies HTTP-only seguras para almacenar tokens</li> <li>Define expiraci\u00f3n adecuada y rotaci\u00f3n de tokens</li> </ul> <pre><code>res.cookie('token', token, {\n  httpOnly: true,\n  secure: true,\n  sameSite: 'strict',\n  maxAge: 24 * 60 * 60 * 1000\n});\n</code></pre>"},{"location":"es/datu_babesa/datu_sentikorrak/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Implementa cifrado sim\u00e9trico para datos sensibles</li> <li>Configura HTTPS en tu proyecto</li> <li>Dise\u00f1a un sistema de tokens con cookies HTTP-only</li> <li>Verifica medidas de seguridad (helmet, CSP, etc.)</li> </ol>"},{"location":"es/datu_babesa/datu_sentikorrak/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>APIs seguras y autenticaci\u00f3n</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"es/datu_babesa/tresnak/","title":"3.3 Herramientas pr\u00e1cticas de seguridad","text":""},{"location":"es/datu_babesa/tresnak/#desarrollo-seguro-devsecops","title":"Desarrollo Seguro (DevSecOps)","text":""},{"location":"es/datu_babesa/tresnak/#1-sast-static-application-security-testing","title":"1. SAST (Static Application Security Testing)","text":"<p>ESLint con plugin de seguridad (JavaScript/TypeScript):</p> <pre><code>npm install --save-dev eslint eslint-plugin-security\n</code></pre> <p>.eslintrc.js:</p> <pre><code>module.exports = {\n  extends: [\n    'eslint:recommended',\n    'plugin:security/recommended'\n  ],\n  plugins: ['security']\n};\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#2-dast-dynamic-application-security-testing","title":"2. DAST (Dynamic Application Security Testing)","text":"<p>OWASP ZAP (Docker):</p> <pre><code>docker run -u zap -p 8080:8080 -p 8081:8081 -i owasp/zap2docker-stable zap-webswing.sh\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#3-sca-software-composition-analysis","title":"3. SCA (Software Composition Analysis)","text":"<p>Dependabot (.github/dependabot.yml):</p> <pre><code>version: 2\nupdates:\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#automatizacion-de-pruebas-de-seguridad","title":"Automatizaci\u00f3n de pruebas de seguridad","text":""},{"location":"es/datu_babesa/tresnak/#1-nikto","title":"1. Nikto","text":"<pre><code>nikto -h https://tu-aplicacion.es\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#2-nmap","title":"2. Nmap","text":"<pre><code>nmap -sV -sC -p 80,443 tu-servidor.es\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#analisis-estatico-del-codigo","title":"An\u00e1lisis est\u00e1tico del c\u00f3digo","text":""},{"location":"es/datu_babesa/tresnak/#1-sonarqube-sonarlint","title":"1. SonarQube + SonarLint","text":"<p>Docker Compose:</p> <pre><code>version: '3'\nservices:\n  sonarqube:\n    image: sonarqube:community\n    ports:\n      - \"9000:9000\"\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#2-snyk","title":"2. Snyk","text":"<pre><code>snyk auth\nsnyk test\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#cicd-escaneos-de-seguridad","title":"CI/CD: escaneos de seguridad","text":"<p>GitHub Actions (ejemplo):</p> <pre><code>name: Security Scan\non:\n  push:\n    branches: [ main, develop ]\njobs:\n  security-scan:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: '18.x'\n      - name: Run Snyk\n        uses: snyk/actions/node@master\n        env:\n          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\n        with:\n          args: --severity-threshold=high\n</code></pre>"},{"location":"es/datu_babesa/tresnak/#laboratorios-de-practica","title":"Laboratorios de pr\u00e1ctica","text":"<ul> <li>OWASP Juice Shop (Docker): <code>docker run --rm -p 3000:3000 bkimminich/juice-shop</code></li> <li>DVWA: <code>docker run --rm -it -p 80:80 vulnerables/web-dvwa</code></li> <li>WebGoat: ver documentaci\u00f3n oficial</li> </ul>"},{"location":"es/datu_babesa/tresnak/#consejos-finales","title":"Consejos finales","text":"<ul> <li>La seguridad es un proceso continuo</li> <li>Secure by Default</li> <li>Principio de m\u00ednimo privilegio</li> <li>Varias capas defensivas</li> <li>Pol\u00edtica de seguridad clara</li> </ul>"},{"location":"es/eraso_defentsak/autentifikazioa/","title":"2.2 Seguridad de autenticaci\u00f3n y sesiones","text":""},{"location":"es/eraso_defentsak/autentifikazioa/#gestion-segura-de-contrasenas","title":"Gesti\u00f3n segura de contrase\u00f1as","text":""},{"location":"es/eraso_defentsak/autentifikazioa/#por-que-no-es-suficiente-almacenar-contrasenas-en-texto-claro","title":"\u00bfPor qu\u00e9 no es suficiente almacenar contrase\u00f1as en texto claro?","text":"<ul> <li>Si roban los datos, las contrase\u00f1as quedar\u00edan expuestas</li> <li>Los usuarios reutilizan contrase\u00f1as en varios servicios</li> <li>Ni siquiera los usuarios leg\u00edtimos deber\u00edan poder verlas</li> </ul>"},{"location":"es/eraso_defentsak/autentifikazioa/#hashear-contrasenas","title":"Hashear contrase\u00f1as","text":""},{"location":"es/eraso_defentsak/autentifikazioa/#usando-bcrypt-python","title":"Usando bcrypt (Python)","text":"<pre><code>import bcrypt\n\ndef crear_contrasena(contrasena: str) -&gt; bytes:\n    # Generar sal aleatoria\n    sal = bcrypt.gensalt()\n    # Hashear contrase\u00f1a\n    hash_bytes = bcrypt.hashpw(contrasena.encode('utf-8'), sal)\n    return hash_bytes\n\ndef verificar_contrasena(contrasena: str, hash_almacenado: bytes) -&gt; bool:\n    return bcrypt.checkpw(contrasena.encode('utf-8'), hash_almacenado)\n\n# Ejemplo\ncontrasena_usuario = \"mi_secreto\"\nhash_bytes = crear_contrasena(contrasena_usuario)\nprint(f\"Hash almacenado: {hash_bytes.decode()}\")\n\nprint(\"Contrase\u00f1a incorrecta:\", verificar_contrasena(\"otra\", hash_bytes))  # False\nprint(\"Contrase\u00f1a correcta:\", verificar_contrasena(contrasena_usuario, hash_bytes))  # True\n</code></pre>"},{"location":"es/eraso_defentsak/autentifikazioa/#por-que-es-importante-la-sal-salt","title":"\u00bfPor qu\u00e9 es importante la sal (Salt)?","text":"<ul> <li>Mismas contrase\u00f1as producen hashes distintos</li> <li>Inutiliza tablas arco\u00edris</li> <li>Evita identificar usuarios con mismo hash</li> </ul>"},{"location":"es/eraso_defentsak/autentifikazioa/#gestion-segura-de-sesiones","title":"Gesti\u00f3n segura de sesiones","text":""},{"location":"es/eraso_defentsak/autentifikazioa/#configurar-cookies-seguras","title":"Configurar cookies seguras","text":"<p>Ejemplo en Express.js:</p> <pre><code>const session = require('express-session');\nconst crypto = require('crypto');\n\nconst SESSION_SECRET = crypto.randomBytes(32).toString('hex');\n\napp.use(session({\n  secret: SESSION_SECRET,\n  name: 'sessionId',\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: true,\n    httpOnly: true,\n    sameSite: 'lax',\n    maxAge: 1000 * 60 * 60 * 24,\n    domain: '.tu-dominio.es'\n  }\n}));\n</code></pre>"},{"location":"es/eraso_defentsak/autentifikazioa/#jwt-json-web-tokens","title":"JWT (JSON Web Tokens)","text":"<p>Crear y verificar un token (Node.js):</p> <pre><code>const jwt = require('jsonwebtoken');\nconst crypto = require('crypto');\n\nconst JWT_SECRET = process.env.JWT_SECRET || crypto.randomBytes(64).toString('hex');\n\nfunction crearToken(usuario) {\n  return jwt.sign(\n    { sub: usuario.id, email: usuario.email },\n    JWT_SECRET,\n    { expiresIn: '1h', issuer: 'TuApp', audience: 'tuapp.es' }\n  );\n}\n\nfunction verificarToken(token) {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET, { issuer: 'TuApp', audience: 'tuapp.es' });\n    return { valido: true, contenido: decoded };\n  } catch (error) {\n    return { valido: false, error: error.message };\n  }\n}\n</code></pre>"},{"location":"es/eraso_defentsak/autentifikazioa/#autenticacion-multifactor-mfa","title":"Autenticaci\u00f3n multifactor (MFA)","text":""},{"location":"es/eraso_defentsak/autentifikazioa/#por-que-usar-mfa","title":"\u00bfPor qu\u00e9 usar MFA?","text":"<ul> <li>Aunque la contrase\u00f1a se comprometa, evita el acceso</li> <li>Combina \u201calgo que sabes\u201d, \u201calgo que tienes\u201d, \u201calgo que eres\u201d</li> </ul>"},{"location":"es/eraso_defentsak/autentifikazioa/#tipos-de-mfa","title":"Tipos de MFA","text":"<ol> <li>Aplicaciones autenticadoras (Google Authenticator, Authy, Microsoft Authenticator)</li> <li>SMS (menos seguro por ataques SIM swap)</li> <li>Llaves hardware (YubiKey, Titan)</li> <li>Aplicaciones corporativas de aprobaci\u00f3n</li> </ol>"},{"location":"es/eraso_defentsak/autentifikazioa/#implementacion-otp","title":"Implementaci\u00f3n OTP","text":"<pre><code>import pyotp\nimport qrcode\n\ndef configurar_mfa(usuario):\n    clave = pyotp.random_base32()\n    totp_uri = pyotp.totp.TOTP(clave).provisioning_uri(name=usuario, issuer_name='Tu App')\n    qr = qrcode.make(totp_uri)\n    qr.save(f'mfa_{usuario}.png')\n    return clave\n\ndef verificar_codigo(clave, codigo_usuario):\n    totp = pyotp.TOTP(clave)\n    return totp.verify(codigo_usuario)\n</code></pre>"},{"location":"es/eraso_defentsak/autentifikazioa/#consejos-para-la-seguridad-de-sesion","title":"Consejos para la seguridad de sesi\u00f3n","text":"<ol> <li>Usar identificadores largos y aleatorios</li> <li>Configurar expiraci\u00f3n adecuada</li> <li>Limitar a una sesi\u00f3n por usuario si aplica</li> <li>Ofrecer bot\u00f3n de cierre de sesi\u00f3n</li> <li>Monitorear ubicaci\u00f3n y navegador habituales</li> <li>Mostrar sesiones activas al usuario</li> </ol>"},{"location":"es/eraso_defentsak/autentifikazioa/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Control de acceso y configuraci\u00f3n segura</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"es/eraso_defentsak/injekzioak/","title":"2.1 Defensas frente a inyecciones","text":""},{"location":"es/eraso_defentsak/injekzioak/#inyeccion-sql","title":"Inyecci\u00f3n SQL","text":""},{"location":"es/eraso_defentsak/injekzioak/#que-es-la-inyeccion-sql","title":"\u00bfQu\u00e9 es la inyecci\u00f3n SQL?","text":"<p>La inyecci\u00f3n SQL es un tipo de ataque que modifica una consulta a la base de datos cuando la entrada del usuario se inserta en la consulta sin validaci\u00f3n adecuada.</p>"},{"location":"es/eraso_defentsak/injekzioak/#como-funciona","title":"\u00bfC\u00f3mo funciona?","text":"<pre><code>-- Entrada del usuario: ' OR '1'='1\n-- Consulta original:\nSELECT * FROM users WHERE username = '' AND password = 'secreto'\n\n-- Tras la inyecci\u00f3n:\nSELECT * FROM users WHERE username = '' OR '1'='1' AND password = 'secreto'\n-- Como '1'='1' siempre es verdadero, la consulta devolver\u00e1 todos los usuarios\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#como-prevenirla","title":"\u00bfC\u00f3mo prevenirla?","text":""},{"location":"es/eraso_defentsak/injekzioak/#1-usar-consultas-parametrizadas-prepared-statements","title":"1. Usar consultas parametrizadas (Prepared Statements)","text":"<p>Ejemplo en Python (SQLite):</p> <pre><code>import sqlite3\n\ndef login_seguro(usuario, contrasena):\n    conn = sqlite3.connect('base_de_datos.db')\n    cursor = conn.cursor()\n\n    # Consulta parametrizada\n    consulta = \"SELECT * FROM users WHERE username = ? AND password = ?\"\n    cursor.execute(consulta, (usuario, contrasena))\n\n    usuario_row = cursor.fetchone()\n    conn.close()\n    return usuario_row\n</code></pre> <p>Ejemplo en PHP (PDO):</p> <pre><code>&lt;?php\n\n$usuario = $_POST['usuario'];\n$contrasena = $_POST['contrasena'];\n\n$pdo = new PDO('mysql:host=localhost;dbname=mi_db', 'usuario', 'contrasena');\n$stmt = $pdo-&gt;prepare('SELECT * FROM users WHERE username = :usuario AND password = :contrasena');\n$stmt-&gt;execute(['usuario' =&gt; $usuario, 'contrasena' =&gt; $contrasena]);\n$fila = $stmt-&gt;fetch();\n?&gt;\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#tipos-de-xss","title":"Tipos de XSS","text":"<ol> <li>Reflected XSS (Reflejado)</li> <li>Stored XSS (Almacenado)</li> <li>DOM XSS</li> </ol>"},{"location":"es/eraso_defentsak/injekzioak/#como-prevenir-xss","title":"\u00bfC\u00f3mo prevenir XSS?","text":""},{"location":"es/eraso_defentsak/injekzioak/#1-codificar-la-salida","title":"1. Codificar la salida","text":"<pre><code>const escapeHtml = (text) =&gt; {\n  const map = {\n    '&amp;': '&amp;amp;',\n    '&lt;': '&amp;lt;',\n    '&gt;': '&amp;gt;',\n    '\"': '&amp;quot;',\n    \"'\": '&amp;#x27;',\n    \"/\": '&amp;#x2F;'\n  };\n  return text.replace(/[&amp;&lt;&gt;\"'/]/g, m =&gt; map[m]);\n};\n\n// Uso\ndocument.getElementById('nombre').textContent = escapeHtml(entradaMaliciosa);\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#2-usar-apis-seguras","title":"2. Usar APIs seguras","text":"<pre><code>// Mal\ndocument.getElementById('nombre').innerHTML = entradaUsuario;\n\n// Mejor\ndocument.getElementById('nombre').textContent = entradaUsuario;\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#3-content-security-policy-csp","title":"3. Content Security Policy (CSP)","text":"<pre><code>Content-Security-Policy: default-src 'self'; script-src 'self' https://apis.google.com\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#otras-inyecciones","title":"Otras inyecciones","text":""},{"location":"es/eraso_defentsak/injekzioak/#inyeccion-de-comandos","title":"Inyecci\u00f3n de comandos","text":"<p>Ejemplo inseguro (Python):</p> <pre><code>import os\n\ndef ping_direccion(direccion):\n    os.system(f\"ping -c 4 {direccion}\")\n</code></pre> <p>Ejemplo seguro:</p> <pre><code>import subprocess\n\ndef ping_direccion_segura(direccion):\n    subprocess.run(['ping', '-c', '4', direccion], check=True)\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#inyeccion-ldap","title":"Inyecci\u00f3n LDAP","text":"<p>Ejemplo inseguro:</p> <pre><code>import ldap\n\ndef autenticar(usuario, contrasena):\n    consulta = f\"(uid={usuario})(userPassword={contrasena})\"\n</code></pre> <p>Ejemplo seguro:</p> <pre><code>import ldap\nfrom ldap.filter import escape_filter_chars\n\ndef autenticar_seguro(usuario, contrasena):\n    usuario_ok = escape_filter_chars(usuario)\n    pass_ok = escape_filter_chars(contrasena)\n    consulta = f\"(uid={usuario_ok})(userPassword={pass_ok})\"\n</code></pre>"},{"location":"es/eraso_defentsak/injekzioak/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Crea una p\u00e1gina simple con usuario y contrase\u00f1a</li> <li>Implementa protecci\u00f3n frente a inyecci\u00f3n SQL</li> <li>A\u00f1ade defensa XSS en entrada y salida</li> <li>Prueba con entradas maliciosas</li> </ol>"},{"location":"es/eraso_defentsak/injekzioak/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Seguridad de autenticaci\u00f3n y sesiones</li> <li>Volver a OWASP Top 10</li> </ul>"},{"location":"es/eraso_defentsak/sarbide_kontrola/","title":"2.3 Control de acceso y configuraci\u00f3n segura","text":""},{"location":"es/eraso_defentsak/sarbide_kontrola/#tipos-de-control-de-acceso","title":"Tipos de control de acceso","text":""},{"location":"es/eraso_defentsak/sarbide_kontrola/#1-rbac-control-de-acceso-basado-en-roles","title":"1. RBAC (Control de acceso basado en roles)","text":"<p>Los usuarios se clasifican por roles y cada rol tiene un conjunto de permisos.</p> <p>Ejemplo (Node.js + Express):</p> <pre><code>// Definici\u00f3n de roles\nconst ROLES = {\n  ADMIN: 'admin',\n  EDITOR: 'editor',\n  USER: 'user',\n  ENVIAR: 'enviar'\n};\n\n// Permisos por rol\nconst PERMISSIONS = {\n  [ROLES.ADMIN]: ['leer', 'escribir', 'eliminar', 'editar', 'enviar'],\n  [ROLES.EDITOR]: ['leer', 'escribir', 'enviar'],\n  [ROLES.USER]: ['leer', 'enviar'],\n  [ROLES.ENVIAR]: ['enviar']\n};\n\n// Middleware para verificar permisos\nfunction checkPermission(accion) {\n  return (req, res, next) =&gt; {\n    const rolUsuario = req.user.rol; // viene del middleware de autenticaci\u00f3n\n\n    if (!rolUsuario || !PERMISSIONS[rolUsuario] || !PERMISSIONS[rolUsuario].includes(accion)) {\n      return res.status(403).json({ error: 'No tienes permiso para esta acci\u00f3n' });\n    }\n    next();\n  };\n}\n\n// Uso de ejemplo\napp.delete('/api/usuarios/:id',\n  authenticateUser,\n  checkPermission('eliminar'),\n  (req, res) =&gt; {\n    // C\u00f3digo para eliminar usuario\n  }\n);\n</code></pre>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#2-abac-control-de-acceso-basado-en-atributos","title":"2. ABAC (Control de acceso basado en atributos)","text":"<p>Decide el acceso seg\u00fan atributos del usuario y del recurso.</p> <p>Ejemplo (Python + Policy):</p> <pre><code>from functools import wraps\n\ndef check_access(usuario, recurso, accion):\n    if accion == \"leer\" and recurso.dueno == usuario.id:\n        return True\n    if accion == \"editar\" and usuario.rol == \"admin\":\n        return True\n    if accion == \"enviar\" and usuario.estado == \"activo\":\n        return True\n    return False\n\ndef access_required(accion):\n    def decorator(f):\n        @wraps(f)\n        def decorated_function(*args, **kwargs):\n            usuario = get_jwt_identity()\n            recurso = get_recurso(kwargs['recurso_id'])\n\n            if not check_access(usuario, recurso, accion):\n                return {\"error\": \"No autorizado\"}, 403\n\n            return f(*args, **kwargs)\n        return decorated_function\n    return decorator\n</code></pre>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#ataques-idor-insecure-direct-object-reference","title":"Ataques IDOR (Insecure Direct Object Reference)","text":""},{"location":"es/eraso_defentsak/sarbide_kontrola/#que-es-idor","title":"\u00bfQu\u00e9 es IDOR?","text":"<p>Un fallo en el que el usuario accede directamente a recursos que no le pertenecen.</p>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#como-prevenirlo","title":"\u00bfC\u00f3mo prevenirlo?","text":"<ol> <li>Validar el acceso por recurso</li> </ol> <pre><code>app.get('/api/usuarios/:id', async (req, res) =&gt; {\n  try {\n    const usuario = await Usuario.findById(req.params.id);\n    if (req.user.id !== usuario.id &amp;&amp; req.user.rol !== 'admin') {\n      return res.status(403).json({ error: 'No autorizado' });\n    }\n    res.json(usuario);\n  } catch (error) {\n    res.status(404).json({ error: 'Usuario no encontrado' });\n  }\n});\n</code></pre> <ol> <li>Usar UUID o tokens seguros en lugar de IDs secuenciales</li> </ol> <pre><code>import uuid\nfrom django.db import models\n\nclass Documento(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    nombre = models.CharField(max_length=255)\n    contenido = models.TextField()\n    dueno = models.ForeignKey(User, on_delete=models.CASCADE)\n</code></pre>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#configuracion-segura","title":"Configuraci\u00f3n segura","text":""},{"location":"es/eraso_defentsak/sarbide_kontrola/#configuracion-por-entorno","title":"Configuraci\u00f3n por entorno","text":"<p>config/development.js</p> <pre><code>module.exports = {\n  database: { host: 'localhost', port: 5432, name: 'miapp_dev', user: 'postgres' },\n  server: { port: 3000, debug: true, cors: { origin: ['http://localhost:8080'] } },\n  auth: { jwtSecret: 'clave_dev', passwordSaltRounds: 10 }\n};\n</code></pre> <p>config/production.js</p> <pre><code>module.exports = {\n  database: {\n    host: process.env.DB_HOST,\n    port: process.env.DB_PORT,\n    name: process.env.DB_NAME,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD\n  },\n  server: { port: process.env.PORT || 3000, debug: false, cors: { origin: ['https://tuapp.es'] } },\n  auth: { jwtSecret: process.env.JWT_SECRET, passwordSaltRounds: 12 }\n};\n</code></pre>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#principios-de-configuracion-segura","title":"Principios de configuraci\u00f3n segura","text":"<ol> <li>No commitear secretos</li> <li>Endurecer cabeceras HTTP</li> </ol> <pre><code>X-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\nContent-Security-Policy: default-src 'self'\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n</code></pre> <ol> <li>Logging seguro (sin datos sensibles)</li> </ol>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#ejercicio-practico","title":"Ejercicio pr\u00e1ctico","text":"<ol> <li>Implementar RBAC</li> <li>Agregar defensas IDOR</li> <li>Configurar entornos (dev, prod)</li> <li>Verificar cabeceras seguras</li> </ol>"},{"location":"es/eraso_defentsak/sarbide_kontrola/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Gesti\u00f3n de datos sensibles</li> <li>Volver a la secci\u00f3n anterior</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/","title":"1.3 Visi\u00f3n general de vulnerabilidades comunes (OWASP Top 10)","text":""},{"location":"es/oinarriak_mehatxuak/owasp_top10/#que-es-el-owasp-top-10","title":"\u00bfQu\u00e9 es el OWASP Top 10?","text":"<p>OWASP (Open Web Application Security Project) publica y actualiza una lista con los 10 riesgos m\u00e1s cr\u00edticos en aplicaciones web. La versi\u00f3n vigente es la de 2021, con intenci\u00f3n de actualizarse pr\u00f3ximamente.</p> <p>OWASP Top 10</p> <p></p> <p>En la imagen anterior pueden verse las diferencias entre 2017 y 2021.</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#1-broken-access-control-control-de-acceso-roto","title":"1. Broken Access Control (Control de acceso roto)","text":"<p>Se produce cuando se falla al limitar que los usuarios s\u00f3lo puedan realizar acciones permitidas. OWASP Top 10 - Broken Access Control</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos","title":"Ejemplos","text":"<ul> <li>Acceso a archivos privados sin permiso</li> <li>Editar datos de otros usuarios</li> <li>Acceso a funciones administrativas sin autorizaci\u00f3n</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion","title":"Prevenci\u00f3n","text":"<ul> <li>Aplicar control de acceso con prioridad</li> <li>Empezar con postura de \u201cno permitido\u201d por defecto</li> <li>Verificar el acceso tanto en cliente como en servidor (especialmente en servidor)</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos","title":"Retos","text":"<ul> <li>Broken Access Control</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#2-cryptographic-failures-fallos-criptograficos","title":"2. Cryptographic Failures (Fallos criptogr\u00e1ficos)","text":"<p>Debilidades o fallos en el cifrado de datos. OWASP Top 10 - Cryptographic Failures</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_1","title":"Ejemplos","text":"<ul> <li>Transmitir datos sin cifrado</li> <li>Usar cifrado d\u00e9bil (MD5, SHA1, DES...)</li> <li>Mala gesti\u00f3n de claves privadas</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_1","title":"Prevenci\u00f3n","text":"<ul> <li>Usar est\u00e1ndares de cifrado vigentes (AES, RSA...)</li> <li>Usar siempre HTTPS</li> <li>Guardar claves de forma segura</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_1","title":"Retos","text":"<ul> <li>Cryptographic Failures</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#3-injection-inyeccion","title":"3. Injection (Inyecci\u00f3n)","text":"<p>Uno de los riesgos m\u00e1s graves. Un atacante introduce datos maliciosos en comandos o consultas interpretados por la aplicaci\u00f3n. Puede tomar control, acceder a datos personales o manipular la base de datos. OWASP Top 10 - Injection</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_2","title":"Ejemplos","text":"<ul> <li>SQL Injection (inyecci\u00f3n SQL):</li> </ul> <pre><code>-- Ejemplo: Entrada del usuario: ' OR '1'='1' --\nSELECT * FROM users WHERE username = '' OR '1'='1' -- AND password = '...'\n</code></pre> <ul> <li>OS Command Injection (inyecci\u00f3n de comandos del SO):</li> </ul> <pre><code># Ejemplo\nping 127.0.0.1 ; ls -l\n</code></pre> <ul> <li>LDAP Injection:</li> </ul> <pre><code># Ejemplo\n*)(uid=*))(|(uid=*\n</code></pre>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_2","title":"Prevenci\u00f3n","text":"<ul> <li>Usar consultas parametrizadas (prepared statements)</li> <li>Preferir ORM seguros evitando concatenaciones SQL</li> <li>Validar y sanear todas las entradas</li> <li>Aplicar principio de m\u00ednimo privilegio</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_2","title":"Retos","text":"<ul> <li>Injection</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#4-insecure-design-diseno-inseguro","title":"4. Insecure Design (Dise\u00f1o inseguro)","text":"<p>Problemas de seguridad que nacen en el dise\u00f1o, no s\u00f3lo en la implementaci\u00f3n. OWASP Top 10 - Insecure Design</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_3","title":"Ejemplos","text":"<ul> <li>Dise\u00f1os sin criterios de seguridad</li> <li>Ausencia de modelos de amenazas</li> <li>Falta de mecanismos contra abusos</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_3","title":"Prevenci\u00f3n","text":"<ul> <li>Incluir seguridad desde el inicio del dise\u00f1o</li> <li>Elaborar modelos de amenazas</li> <li>Identificar y prevenir casos de abuso</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_3","title":"Retos","text":"<ul> <li>Insecure Design</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#5-security-misconfiguration-configuracion-insegura","title":"5. Security Misconfiguration (Configuraci\u00f3n insegura)","text":"<p>Ausencia de configuraci\u00f3n adecuada o configuraci\u00f3n err\u00f3nea. OWASP Top 10 - Security Misconfiguration</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_4","title":"Ejemplos","text":"<ul> <li>Dejar configuraciones por defecto</li> <li>Mostrar mensajes de error detallados</li> <li>No activar controles de seguridad adicionales</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_4","title":"Prevenci\u00f3n","text":"<ul> <li>Establecer configuraci\u00f3n segura</li> <li>Automatizar la configuraci\u00f3n</li> <li>Revisar y actualizar con frecuencia</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_4","title":"Retos","text":"<ul> <li>Security Misconfiguration</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#6-vulnerable-and-outdated-components-componentes-vulnerablesobsoletos","title":"6. Vulnerable and Outdated Components (Componentes vulnerables/obsoletos)","text":"<p>Vulnerabilidades en librer\u00edas y componentes de terceros. OWASP Top 10 - Vulnerable and Outdated Components</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_5","title":"Ejemplos","text":"<ul> <li>Desconocer vulnerabilidades conocidas</li> <li>Falta de actualizaciones</li> <li>Uso de componentes inseguros</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_5","title":"Prevenci\u00f3n","text":"<ul> <li>Actualizar componentes con frecuencia</li> <li>Evitar componentes obsoletos</li> <li>Escanear componentes en busca de vulnerabilidades</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_5","title":"Retos","text":"<ul> <li>Vulnerable and Outdated Components</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#7-identification-and-authentication-failures-fallas-de-identificacion-y-autenticacion","title":"7. Identification and Authentication Failures (Fallas de identificaci\u00f3n y autenticaci\u00f3n)","text":"<p>Problemas para identificar y autenticar usuarios. OWASP Top 10 - Identification and Authentication Failures</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_6","title":"Ejemplos","text":"<ul> <li>Aceptar contrase\u00f1as d\u00e9biles</li> <li>Mala gesti\u00f3n de sesi\u00f3n</li> <li>Funcionalidades de autenticaci\u00f3n d\u00e9biles</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_6","title":"Prevenci\u00f3n","text":"<ul> <li>Implementar MFA</li> <li>Pol\u00edticas robustas de contrase\u00f1as</li> <li>Verificar identificadores de sesi\u00f3n</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_6","title":"Retos","text":"<ul> <li>Identification Authentication Failures</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#8-software-and-data-integrity-failures-fallas-de-integridad-de-software-y-datos","title":"8. Software and Data Integrity Failures (Fallas de integridad de software y datos)","text":"<p>Riesgos cuando no se verifica la integridad y procedencia de c\u00f3digo y datos. OWASP Top 10 - Software and Data Integrity Failures</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_7","title":"Ejemplos","text":"<ul> <li>Modificaciones no autorizadas de c\u00f3digo o datos</li> <li>Entradas de usuario no verificadas</li> <li>C\u00f3digo sin firma digital</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_7","title":"Prevenci\u00f3n","text":"<ul> <li>Usar firmas digitales</li> <li>Verificar origen de c\u00f3digo y datos</li> <li>Implementar comprobaciones de integridad</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_7","title":"Retos","text":"<ul> <li>Software Data Integrity Failures</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#9-security-logging-and-monitoring-failures-fallas-de-registro-y-monitoreo","title":"9. Security Logging and Monitoring Failures (Fallas de registro y monitoreo)","text":"<p>Falta de capacidad para detectar y responder a incidentes. OWASP Top 10 - Security Logging and Monitoring Failures</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_8","title":"Ejemplos","text":"<ul> <li>Sin configuraci\u00f3n de registros</li> <li>Falta de alertas</li> <li>Ausencia de procedimientos de respuesta</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_8","title":"Prevenci\u00f3n","text":"<ul> <li>Establecer un sistema de logs adecuado</li> <li>Configurar alertas autom\u00e1ticas</li> <li>Planificar procedimientos de respuesta</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_8","title":"Retos","text":"<ul> <li>Security Logging and Monitoring Failures</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#10-server-side-request-forgery-ssrf","title":"10. Server-Side Request Forgery (SSRF)","text":"<p>El atacante controla las solicitudes que el servidor realiza dentro de la red interna. OWASP Top 10 - Server-Side Request Forgery</p>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#ejemplos_9","title":"Ejemplos","text":"<ul> <li>Solicitudes a servicios internos</li> <li>Acceso a informaci\u00f3n de configuraci\u00f3n</li> <li>Acceso a recursos de la red interna</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#prevencion_9","title":"Prevenci\u00f3n","text":"<ul> <li>Validar y filtrar todas las URLs de entrada</li> <li>Usar listas blancas de destinos permitidos</li> <li>Limitar conexiones y tiempos</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#retos_9","title":"Retos","text":"<ul> <li>Server-Side Request Forgery</li> </ul>"},{"location":"es/oinarriak_mehatxuak/owasp_top10/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Defensas frente a inyecciones</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/","title":"1.1 Introducci\u00f3n a la Ciberseguridad en el Desarrollo Web","text":""},{"location":"es/oinarriak_mehatxuak/sarrera/#por-que-es-importante-la-ciberseguridad-en-el-desarrollo-web","title":"\u00bfPor qu\u00e9 es importante la ciberseguridad en el desarrollo web?","text":"<p>Las aplicaciones web funcionan hoy como repositorios de datos sensibles de empresas y usuarios. Implementar ciberseguridad ayuda a proteger:</p> <ul> <li>La confidencialidad de los datos privados de los usuarios</li> <li>La integridad y disponibilidad del sitio web</li> <li>La reputaci\u00f3n y la confianza en la organizaci\u00f3n</li> <li>El cumplimiento legal (GDPR, CCPA, etc.)</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#el-rol-del-desarrollador-y-el-enfoque-shift-left","title":"El rol del desarrollador y el enfoque \"Shift Left\"","text":"<p>Tradicionalmente, la seguridad se consideraba al final del proceso de desarrollo. El enfoque \"Shift Left\" propone integrar la seguridad desde el inicio del desarrollo:</p> <ul> <li>Prevenir de forma anticipada: corregir los fallos antes de que se introduzcan</li> <li>Reducir costes: detectar problemas tempranamente es m\u00e1s barato</li> <li>Mejorar la calidad del c\u00f3digo: la seguridad pasa a ser parte integral del c\u00f3digo</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#triangulo-cia-confidencialidad-integridad-disponibilidad","title":"Tri\u00e1ngulo CIA (Confidencialidad, Integridad, Disponibilidad)","text":"<p>Principios b\u00e1sicos de la ciberseguridad:</p> <ol> <li> <p>Confidencialidad (Confidentiality)</p> </li> <li> <p>Control de acceso adecuado</p> </li> <li>Cifrado de datos</li> <li> <p>Acceso s\u00f3lo para personas autorizadas</p> </li> <li> <p>Integridad (Integrity)</p> </li> <li> <p>Mecanismos para garantizar la exactitud e integridad de los datos</p> </li> <li>Sistemas para detectar cambios no autorizados</li> <li> <p>Trazabilidad de transacciones</p> </li> <li> <p>Disponibilidad (Availability)</p> </li> <li> <p>Continuidad del servicio</p> </li> <li>Capacidad para gestionar ataques y fallos</li> <li>Rendimiento adecuado</li> </ol>"},{"location":"es/oinarriak_mehatxuak/sarrera/#amenaza-vulnerabilidad-y-riesgo","title":"Amenaza, vulnerabilidad y riesgo","text":"<p>Comprender amenazas, vulnerabilidades y riesgos es clave:</p> <ul> <li>Amenaza (Threat): un evento o actor capaz de causar da\u00f1o al sistema.</li> <li>Vulnerabilidad (Vulnerability): un punto d\u00e9bil del sistema que un atacante puede explotar.</li> <li>Riesgo (Risk): probabilidad e impacto de que una amenaza explote una vulnerabilidad y cause da\u00f1o.</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#diseno-seguro","title":"Dise\u00f1o seguro","text":""},{"location":"es/oinarriak_mehatxuak/sarrera/#seguridad-por-diseno-security-by-design","title":"Seguridad por dise\u00f1o (Security by Design)","text":"<p>La seguridad no es un a\u00f1adido; debe formar parte del dise\u00f1o. Para ello:</p> <ul> <li>Integrar la seguridad desde el inicio del desarrollo</li> <li>Aplicar principios b\u00e1sicos de seguridad</li> <li>Usar configuraciones seguras por defecto</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#defensa-en-profundidad-defense-in-depth","title":"Defensa en profundidad (Defense in Depth)","text":"<p>Organizar la protecci\u00f3n en m\u00faltiples capas, cada una aportando su defensa. Si una capa falla, la siguiente sigue protegiendo para detener o limitar el ataque:</p> <ul> <li>Implementar m\u00faltiples capas de seguridad</li> <li>Emplear varios mecanismos defensivos</li> <li>Si el atacante supera una capa, que otra pueda detenerlo</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#minimo-privilegio-least-privilege","title":"M\u00ednimo privilegio (Least Privilege)","text":"<p>Cada usuario o proceso debe tener s\u00f3lo los permisos necesarios para realizar su funci\u00f3n:</p> <ul> <li>Conceder los permisos m\u00ednimos necesarios a usuarios y procesos</li> <li>Restringir privilegios de administrador</li> <li>Gestionar activamente los permisos</li> </ul>"},{"location":"es/oinarriak_mehatxuak/sarrera/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Fundamentos del funcionamiento de la web</li> <li>Visi\u00f3n general de vulnerabilidades comunes</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/","title":"Introducci\u00f3n al Web Hacking","text":""},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#walking-an-application","title":"Walking An Application","text":"<p>Veremos c\u00f3mo analizar manualmente una aplicaci\u00f3n web para encontrar problemas de seguridad usando s\u00f3lo las herramientas integradas del navegador. A menudo, las herramientas automatizadas y scripts pasan por alto vulnerabilidades potenciales e informaci\u00f3n \u00fatil.</p> <p>Resumen de herramientas del navegador que usar\u00e1s a lo largo del m\u00f3dulo:</p> <ul> <li>Ver c\u00f3digo fuente (View Source)</li> <li>Inspector (Inspector)</li> <li>Depurador (Debugger)</li> <li>Red (Network)</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#exploring-the-website","title":"Exploring The Website","text":"<p>Como pentester, tu objetivo al analizar un sitio o aplicaci\u00f3n web es localizar caracter\u00edsticas potencialmente vulnerables y tratar de explotarlas para evaluar si lo son. Estas suelen requerir interacci\u00f3n del usuario. Puedes empezar explorando con el navegador y tomando notas de p\u00e1ginas/\u00e1reas/funcionalidades con un breve resumen de cada una.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#ver-el-codigo-fuente-de-la-pagina","title":"Ver el c\u00f3digo fuente de la p\u00e1gina","text":"<p>Cuando visitamos una web, el navegador realiza una solicitud al servidor, que devuelve c\u00f3digo: el page source o c\u00f3digo fuente de la p\u00e1gina. Ese c\u00f3digo indica al navegador qu\u00e9 contenido mostrar, c\u00f3mo presentarlo y c\u00f3mo debe comportarse.</p> <p>En el c\u00f3digo fuente suele haber HTML, CSS y JavaScript:</p> <ul> <li>HTML para estructura y contenido</li> <li>CSS para apariencia (colores, tama\u00f1os\u2026)</li> <li>JavaScript para funcionalidades interactivas</li> </ul> <p>Mirar el c\u00f3digo fuente puede aportar informaci\u00f3n extra, especialmente desde el punto de vista de la seguridad.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#como-veo-el-codigo-fuente","title":"\u00bfC\u00f3mo veo el c\u00f3digo fuente?","text":"<ul> <li>Clic derecho en la p\u00e1gina y elegir \u201cVer c\u00f3digo fuente\u201d o similar</li> <li>Prefijar la URL del navegador con: <code>view-source:https://www.ejemplo.com</code></li> <li>En el men\u00fa del navegador, en \u201cDeveloper tools\u201d o \u201cM\u00e1s herramientas\u201d</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#que-elementos-buscar","title":"\u00bfQu\u00e9 elementos buscar?","text":"<ul> <li>Comentarios (<code>&lt;!-- ... --&gt;</code>): pueden dar pistas</li> <li>Enlaces (<code>&lt;a href=\"...\"&gt;</code>): navegaci\u00f3n, enlaces ocultos</li> <li>Archivos externos (CSS, JS, im\u00e1genes...)</li> <li>Pistas del framework y su versi\u00f3n</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#herramientas-de-desarrollo-developer-tools","title":"Herramientas de desarrollo (Developer Tools)","text":""},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#1-inspector","title":"1. Inspector","text":"<p>Muestra el \u201cfotograma real\u201d de lo que se renderiza. Permite cambiar elementos (texto, colores, tama\u00f1os) para facilitar depuraci\u00f3n y descubrimiento de fallos.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#2-debugger","title":"2. Debugger","text":"<p>Permite seguir el flujo del JavaScript con breakpoints para inspeccionar valores y entender por qu\u00e9 ocurren errores. Dominarlo permite controlar la ejecuci\u00f3n del c\u00f3digo del cliente.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#3-network","title":"3. Network","text":"<p>Muestra cada solicitud externa que realiza la p\u00e1gina. Recarga la p\u00e1gina con la pesta\u00f1a abierta para ver todo lo que se solicita.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#descubrimiento-de-contenidos","title":"Descubrimiento de contenidos","text":""},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#que-es-el-descubrimiento-de-contenidos","title":"\u00bfQu\u00e9 es el descubrimiento de contenidos?","text":"<p>Contenido no presentado de forma evidente: portales internos, versiones antiguas, copias de seguridad, archivos de configuraci\u00f3n, paneles de administraci\u00f3n\u2026 Puede encontrarse de forma manual, automatizada u OSINT.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#robotstxt","title":"Robots.txt","text":"<p><code>robots.txt</code> indica a los buscadores qu\u00e9 no indexar. Suele listar ubicaciones que el propietario no desea que se descubran.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#favicon","title":"Favicon","text":"<p>El icono puede revelar el framework usado. Consulta la base de datos de OWASP:</p> <ul> <li>OWASP_favicon_database</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#sitemapxml","title":"Sitemap.xml","text":"<p>Lista URLs que el propietario desea indexar, a veces \u00e1reas dif\u00edciles de navegar o p\u00e1ginas antiguas a\u00fan accesibles.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#cabeceras-http","title":"Cabeceras HTTP","text":"<p>Las respuestas del servidor incluyen cabeceras con informaci\u00f3n \u00fatil como software del servidor o lenguaje de programaci\u00f3n. Con <code>curl -v</code> puedes verlas y extraer pistas.</p>"},{"location":"es/oinarriak_mehatxuak/web_hacking_sarrera/#framework-stack","title":"Framework Stack","text":"<p>Una vez identificado el framework (por favicon o pistas en el c\u00f3digo), investiga versiones y componentes para localizar posibles vulnerabilidades.</p>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/","title":"1.2 Fundamentos del funcionamiento de la web","text":""},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#introduccion","title":"Introducci\u00f3n","text":"<p>Comprender c\u00f3mo funcionan los sitios web es esencial desde la perspectiva de la ciberseguridad. En esta secci\u00f3n explicamos c\u00f3mo funcionan, sus componentes principales y c\u00f3mo se comunican entre s\u00ed.</p>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#como-funciona-un-sitio-web","title":"C\u00f3mo funciona un sitio web","text":""},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<p>Para que un sitio funcione, intervienen distintos componentes y procesos automatizados. Primero, el sistema DNS se usa para resolver un dominio (p. ej., google.com) a una direcci\u00f3n IP. Los dominios siguen una jerarqu\u00eda (subdominios, dominios de segundo nivel, TLDs) y distintos registros DNS (A, AAAA, CNAME, MX, TXT\u2026) aportan diferentes tipos de informaci\u00f3n.</p> <p></p> <p>Al realizar una solicitud DNS, primero se consulta la cach\u00e9 local; despu\u00e9s, el servidor DNS del ISP, los servidores ra\u00edz, los servidores TLD y los servidores autoritativos se activan hasta obtener la IP. La respuesta incluye un TTL (Time To Live) que indica cu\u00e1nto tiempo puede mantenerse en cach\u00e9.</p> <p></p> <pre><code>    1. Paso: Tu ordenador\n    Primero mira en su cach\u00e9 local. Puede que hayas visitado ese sitio recientemente y recuerde la IP.\n    Resultado:\n    \u2705 Si lo encuentra: Conecta directamente\n    \u274c Si no lo encuentra: Pasa al siguiente paso\n\n\n    2. Paso: Servidor DNS recursivo\n    Es el servidor que te proporciona tu ISP (o el que t\u00fa elijas).\n    Tambi\u00e9n consulta su propia cach\u00e9 local.\n    Sitios populares como Google, Facebook o Twitter suelen estar aqu\u00ed cacheados.\n    Resultado:\n    \u2705 Si lo encuentra: Lo devuelve a tu equipo\n    \u274c Si no lo encuentra: Acude a los servidores ra\u00edz de Internet\n\n\n    3. Paso: Servidores ra\u00edz (Root DNS)\n    Son la \u201ccolumna vertebral\u201d de Internet. Miran el TLD (.com, .org, .es...) y te env\u00edan al servidor TLD adecuado.\n    En nuestro ejemplo: para www.tryhackme.com ven .com y te env\u00edan al TLD .com.\n\n    4. Paso: Servidor TLD\n    Indica d\u00f3nde est\u00e1 el servidor autoritativo del dominio.\n    Por ejemplo, para tryhackme.com los servidores autoritativos son:\n    kip.ns.cloudflare.com\n    uma.ns.cloudflare.com\n\n    Hay al menos dos para redundancia.\n\n    5. Paso: Servidor DNS autoritativo\n    Servidor que almacena todos los registros DNS de ese dominio.\n    \u00bfQu\u00e9 hace?\n    Busca la IP necesaria (registro A)\n    La devuelve al DNS recursivo\n    El recursivo la cachea para futuras peticiones\n    Finalmente la env\u00eda a tu ordenador\n</code></pre>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#http-en-detalle","title":"HTTP en detalle","text":"<p>Una vez obtenida la IP, se realiza una solicitud HTTP o HTTPS al servidor.</p> <p>Es el conjunto de reglas para comunicarse con servidores web y transmitir datos.</p> <p>Puede transportar muchos tipos de datos:</p> <ul> <li>HTML (contenido del sitio)</li> <li>Im\u00e1genes (JPG, PNG, GIF...)</li> <li>V\u00eddeos (MP4, AVI...)</li> <li>Otros archivos (PDF, documentos...)</li> </ul> <p>HTTPS es la versi\u00f3n segura que cifra la comunicaci\u00f3n.</p> <p>Las solicitudes HTTP incluyen cabeceras (Host, User-Agent, Cookie...), y el servidor devuelve una respuesta con un c\u00f3digo de estado (200, 404, 500...) y un cuerpo (HTML, JSON, im\u00e1genes...).</p> <p>La estructura de una URL incluye protocolo, usuario, host, puerto, ruta, par\u00e1metros y fragmento. Seg\u00fan la solicitud, el servidor devuelve un recurso concreto.</p> <p>Tomemos este ejemplo: http://user:password@tryhackme.com:80/view-room?id=1#task3</p> <p></p> <ul> <li>Scheme (Esquema): indica el protocolo a usar (http, https, ftp...).</li> <li>User (Usuario): user:password para servicios que requieren credenciales (hoy casi no se usa por no ser seguro).</li> <li>Host (Host): dominio o IP del servidor (p. ej., google.com o 192.168.1.1).</li> <li>Port (Puerto): n\u00famero de puerto (HTTP 80 por defecto, HTTPS 443).</li> <li>Path (Ruta): ubicaci\u00f3n del recurso (/blog o /images/photo.jpg).</li> <li>Query String (Cadena de consulta): informaci\u00f3n adicional (?id=1&amp;category=tech).</li> <li>Fragment (Fragmento): parte espec\u00edfica de la p\u00e1gina (#task3).</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#metodos-http","title":"M\u00e9todos HTTP","text":"<p>Los m\u00e9todos indican la intenci\u00f3n del cliente al hacer una solicitud. Los m\u00e1s comunes son:</p> <ul> <li>GET: Obtener informaci\u00f3n del servidor.</li> <li>POST: Enviar datos al servidor y, posiblemente, crear registros.</li> <li>PUT: Enviar datos para actualizar informaci\u00f3n existente.</li> <li>DELETE: Eliminar informaci\u00f3n o registros del servidor.</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#codigos-de-estado-http","title":"C\u00f3digos de estado HTTP","text":"<p>Indican el estado de la respuesta del servidor. Se agrupan en:</p> <ul> <li>100-199: Informativos</li> <li>200-299: \u00c9xito</li> <li>300-399: Redirecci\u00f3n</li> <li>400-499: Errores del cliente</li> <li>500-599: Errores del servidor</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#cabeceras","title":"Cabeceras","text":"<p>Peque\u00f1os datos adicionales que se env\u00edan con la solicitud. Algunas comunes:</p> <ul> <li>Solicitud: Host, User-Agent, Content-Length, Accept-Encoding, Cookie</li> <li>Respuesta: Set-Cookie, Cache-Control, Content-Type, Content-Encoding</li> </ul>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#cookies","title":"Cookies","text":"<p>Las cookies son peque\u00f1os datos que se almacenan en tu equipo. Se guardan cuando el servidor env\u00eda la cabecera Set-Cookie. En solicitudes posteriores, se devuelven al servidor. Dado que HTTP es sin estado, las cookies ayudan a recordar qui\u00e9n eres, guardar preferencias o saber si ya visitaste el sitio.</p>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#como-funcionan-los-sitios-web","title":"\u00bfC\u00f3mo funcionan los sitios web?","text":"<p>Cuando visitas una web, tu navegador realiza una solicitud al servidor pidiendo la informaci\u00f3n de la p\u00e1gina. El servidor env\u00eda los datos que el navegador usar\u00e1 para mostrar el contenido. Un servidor web es un ordenador dedicado que procesa estas solicitudes.</p> <p></p> <p>Frontend vs Backend: el frontend es lo que ves en el navegador (HTML, CSS, JS) y el backend es lo que se ejecuta en el servidor (PHP, Node.js...). El contenido puede ser est\u00e1tico o din\u00e1mico y un servidor puede gestionar varios sitios mediante Virtual Host.</p> <p>HTML, CSS y JavaScript son las tecnolog\u00edas base del front. Los elementos tienen atributos (id, class, src...), y si usan entrada de usuario pueden ser peligrosos si no se filtra correctamente.</p> <p>La exposici\u00f3n de datos sensibles ocurre a menudo en el c\u00f3digo del front (comentarios, ficheros JS...) donde se dejan contrase\u00f1as, tokens o enlaces privados. Tambi\u00e9n pueden surgir vulnerabilidades como la inyecci\u00f3n de HTML si no se filtra y se muestra directamente en la p\u00e1gina.</p> <p>Las herramientas de desarrollo del navegador (Developer Tools) son \u00fatiles para inspeccionar solicitudes, cookies, c\u00f3digo y obtener informaci\u00f3n relevante de seguridad (Inspector, Network, Debugger...).</p>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#otros-componentes-importantes","title":"Otros componentes importantes","text":"<p>CDNs: ayudan a reducir el tr\u00e1fico sirviendo archivos est\u00e1ticos desde servidores distribuidos.</p> <p>Balanceadores de carga: reparten el tr\u00e1fico entre varios servidores cuando la carga aumenta o se necesita alta disponibilidad.</p> <p>WAFs (Web Application Firewall): detectan y bloquean solicitudes maliciosas.</p> <p>Bases de datos: almacenan y proporcionan datos a las aplicaciones.</p> <p></p>"},{"location":"es/oinarriak_mehatxuak/web_oinarriak/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Visi\u00f3n general de vulnerabilidades comunes</li> <li>Volver al inicio</li> </ul>"}]}